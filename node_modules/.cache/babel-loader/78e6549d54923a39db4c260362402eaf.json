{"ast":null,"code":"var _jsxFileName = \"/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js\";\nimport { Application } from '../Application';\nimport React, { Component } from 'react';\nimport './style.css';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nexport class BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n        var node = null;\n        node = new DefaultNodeModel(data.name, data.color);\n        node.addPort(new AdvancedPortModel(true, 'in')); //node.addInPort('In');\n        //node.addOutPort('Out');\n\n        var point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        this.props.app.getDiagramEngine().getModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(CanvasWidget, {\n      className: \"srd-demo-canvas\",\n      engine: this.props.app.getDiagramEngine(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\nBodyWidget.displayName = \"BodyWidget\";\nBodyWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"BodyWidget\",\n  \"props\": {\n    \"app\": {\n      \"required\": true,\n      \"flowType\": {\n        \"name\": \"Application\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"] = {\n    name: \"BodyWidget\",\n    docgenInfo: BodyWidget.__docgenInfo,\n    path: \"src/components/main_area_component/components/BodyWidget.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["Application","React","Component","DefaultNodeModel","CanvasWidget","BodyWidget","constructor","props","render","event","data","JSON","parse","dataTransfer","getData","node","name","color","addPort","AdvancedPortModel","point","app","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate","preventDefault"],"mappings":";AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SACIC,gBADJ,QAEO,8BAFP;AAIA,SAASC,YAAT,QAA6B,iCAA7B;AAMA,OAAO,MAAMC,UAAN,SAAyBJ,KAAK,CAACC,SAA/B,CAA0D;AAChEI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACX,UAAMA,KAAN;AACN;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACG;AACC,MAAA,MAAM,EAAEC,KAAK,IAAI;AAChB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,oBAA3B,CAAX,CAAX;AAEA,YAAIC,IAAsB,GAAG,IAA7B;AACqBA,QAAAA,IAAI,GAAG,IAAIZ,gBAAJ,CAAqBO,IAAI,CAACM,IAA1B,EAAgCN,IAAI,CAACO,KAArC,CAAP;AACAF,QAAAA,IAAI,CAACG,OAAL,CAAa,IAAIC,iBAAJ,CAAsB,IAAtB,EAA4B,IAA5B,CAAb,EALL,CAME;AAClB;;AAEA,YAAIC,KAAK,GAAG,KAAKb,KAAL,CAAWc,GAAX,CAAeC,gBAAf,GAAkCC,qBAAlC,CAAwDd,KAAxD,CAAZ;AACAM,QAAAA,IAAI,CAACS,WAAL,CAAiBJ,KAAjB;AACA,aAAKb,KAAL,CAAWc,GAAX,CACEC,gBADF,GAEEG,QAFF,GAGEC,OAHF,CAGUX,IAHV;AAIA,aAAKY,WAAL;AACA,OAjBF;AAkBC,MAAA,UAAU,EAAElB,KAAK,IAAI;AACpBA,QAAAA,KAAK,CAACmB,cAAN;AACA,OApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAsBE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,iBAAxB;AAA0C,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWc,GAAX,CAAeC,gBAAf,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADH;AA4BA;;AAlC+D;AAApDjB,U","sourcesContent":["import { Application } from '../Application';\nimport React, { Component } from 'react';\nimport './style.css';\nimport {\n    DefaultNodeModel,\n} from '@projectstorm/react-diagrams';\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\n\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\tconstructor(props){\n        super(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n\t\t\t\t\t\t\tvar node: DefaultNodeModel = null;\n                            node = new DefaultNodeModel(data.name, data.color);\n                            node.addPort(new AdvancedPortModel(true, 'in'));\n                        \t//node.addInPort('In');\n\t\t\t\t\t\t\t//node.addOutPort('Out');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}