{"ast":null,"code":"var _jsxFileName = \"/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js\";\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nexport class BodyWidget extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n        var node = null;\n        node = new DefaultNodeModel(data.name, data.color);\n\n        switch (data.name) {\n          case 'Concept':\n            {\n              node.addPort(new AdvancedPortModel(false, 'out'));\n              break;\n            }\n\n          case 'Participant':\n            {\n              node.addInPort('String identifier', 'In');\n              node.addOutPort('');\n              node.addInPort('String identifiedByField optional', 'In');\n              node.addOutPort('');\n              node.addInPort('TypeIdentifier superType optional', 'In');\n              node.addOutPort('');\n              node.addInPort(' Decorator[] decorators optional', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Transaction':\n            {\n              node.addInPort('String transactionId', 'In');\n              node.addOutPort('');\n              node.addInPort('DateTime timeStamp', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Event':\n            {\n              node.addInPort('String eventId', 'In');\n              node.addOutPort('');\n              node.addInPort('DateTime timeStamp', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Enumerable':\n            {\n              node.addInPort('String summerSeason', 'In');\n              node.addOutPort('');\n              node.addInPort('String winterSeason', 'In');\n              node.addOutPort('');\n              node.addInPort('String rainySeason', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Asset':\n            {\n              node.addInPort('String assetOne', 'In');\n              node.addOutPort('');\n              node.addInPort('String assetTwo', 'In');\n              node.addOutPort('');\n              break;\n            }\n        }\n\n        var point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        this.props.app.getDiagramEngine().getModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(CanvasWidget, {\n      className: \"srd-demo-canvas\",\n      engine: this.props.app.getDiagramEngine(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\nBodyWidget.displayName = \"BodyWidget\";\nBodyWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"BodyWidget\",\n  \"props\": {\n    \"app\": {\n      \"required\": true,\n      \"flowType\": {\n        \"name\": \"Application\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"] = {\n    name: \"BodyWidget\",\n    docgenInfo: BodyWidget.__docgenInfo,\n    path: \"src/components/main_area_component/components/BodyWidget.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["React","_","Application","DefaultNodeModel","CanvasWidget","AdvancedPortModel","BodyWidget","Component","render","event","data","JSON","parse","dataTransfer","getData","node","name","color","addPort","addInPort","addOutPort","point","props","app","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate","preventDefault"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n\t\t\t\t\t\t\tvar node: DefaultNodeModel = null;\n\t\t\t\t\t\t\tnode = new DefaultNodeModel(data.name, data.color);\n\t\t\t\t\t\t\tswitch(data.name){\n\t\t\t\t\t\t\t\tcase 'Concept':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addPort(new AdvancedPortModel(false, 'out'));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcase 'Participant':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String identifier','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String identifiedByField optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('TypeIdentifier superType optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort(' Decorator[] decorators optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Transaction':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String transactionId','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('DateTime timeStamp','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Event':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String eventId','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('DateTime timeStamp','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Enumerable':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String summerSeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String winterSeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String rainySeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Asset':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String assetOne','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String assetTwo','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}