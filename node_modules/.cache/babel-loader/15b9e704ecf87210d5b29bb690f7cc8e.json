{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Action_1 = require(\"../core-actions/Action\");\n\nconst _ = require(\"lodash\");\n/**\n * Deletes all selected items\n */\n\n\nclass DeleteItemsAction extends Action_1.Action {\n  constructor(options = {}) {\n    const keyCodes = options.keyCodes || [46, 8];\n    const modifiers = Object.assign({\n      ctrlKey: false,\n      shiftKey: false,\n      altKey: false,\n      metaKey: false\n    }, options.modifiers);\n    super({\n      type: Action_1.InputType.KEY_DOWN,\n      fire: event => {\n        const {\n          keyCode,\n          ctrlKey,\n          shiftKey,\n          altKey,\n          metaKey\n        } = event.event;\n\n        if (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({\n          ctrlKey,\n          shiftKey,\n          altKey,\n          metaKey\n        }, modifiers)) {\n          _.forEach(this.engine.getModel().getSelectedEntities(), model => {\n            // only delete items which are not locked\n            if (!model.isLocked()) {\n              model.remove();\n            }\n          });\n\n          this.engine.repaintCanvas();\n        }\n      }\n    });\n  }\n\n}\n\nexports.DeleteItemsAction = DeleteItemsAction;","map":{"version":3,"sources":["../../../src/actions/DeleteItemsAction.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,MAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAYA;;;;;AAGA,MAAa,iBAAb,SAAuC,QAAA,CAAA,MAAvC,CAA6C;AAC5C,EAAA,WAAA,CAAY,OAAA,GAAoC,EAAhD,EAAkD;AACjD,UAAM,QAAQ,GAAG,OAAO,CAAC,QAAR,IAAoB,CAAC,EAAD,EAAK,CAAL,CAArC;AACA,UAAM,SAAS,GAAA,MAAA,CAAA,MAAA,CAAA;AACd,MAAA,OAAO,EAAE,KADK;AAEd,MAAA,QAAQ,EAAE,KAFI;AAGd,MAAA,MAAM,EAAE,KAHM;AAId,MAAA,OAAO,EAAE;AAJK,KAAA,EAKX,OAAO,CAAC,SALG,CAAf;AAQA,UAAM;AACL,MAAA,IAAI,EAAE,QAAA,CAAA,SAAA,CAAU,QADX;AAEL,MAAA,IAAI,EAAG,KAAD,IAAsC;AAC3C,cAAM;AAAE,UAAA,OAAF;AAAW,UAAA,OAAX;AAAoB,UAAA,QAApB;AAA8B,UAAA,MAA9B;AAAsC,UAAA;AAAtC,YAAkD,KAAK,CAAC,KAA9D;;AAEA,YAAI,QAAQ,CAAC,OAAT,CAAiB,OAAjB,MAA8B,CAAC,CAA/B,IAAoC,CAAC,CAAC,OAAF,CAAU;AAAE,UAAA,OAAF;AAAW,UAAA,QAAX;AAAqB,UAAA,MAArB;AAA6B,UAAA;AAA7B,SAAV,EAAkD,SAAlD,CAAxC,EAAsG;AACrG,UAAA,CAAC,CAAC,OAAF,CAAU,KAAK,MAAL,CAAY,QAAZ,GAAuB,mBAAvB,EAAV,EAAwD,KAAK,IAAG;AAC/D;AACA,gBAAI,CAAC,KAAK,CAAC,QAAN,EAAL,EAAuB;AACtB,cAAA,KAAK,CAAC,MAAN;AACA;AACD,WALD;;AAMA,eAAK,MAAL,CAAY,aAAZ;AACA;AACD;AAdI,KAAN;AAgBA;;AA3B2C;;AAA7C,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Action_1 = require(\"../core-actions/Action\");\nconst _ = require(\"lodash\");\n/**\n * Deletes all selected items\n */\nclass DeleteItemsAction extends Action_1.Action {\n    constructor(options = {}) {\n        const keyCodes = options.keyCodes || [46, 8];\n        const modifiers = Object.assign({ ctrlKey: false, shiftKey: false, altKey: false, metaKey: false }, options.modifiers);\n        super({\n            type: Action_1.InputType.KEY_DOWN,\n            fire: (event) => {\n                const { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n                if (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n                    _.forEach(this.engine.getModel().getSelectedEntities(), model => {\n                        // only delete items which are not locked\n                        if (!model.isLocked()) {\n                            model.remove();\n                        }\n                    });\n                    this.engine.repaintCanvas();\n                }\n            }\n        });\n    }\n}\nexports.DeleteItemsAction = DeleteItemsAction;\n//# sourceMappingURL=DeleteItemsAction.js.map"]},"metadata":{},"sourceType":"script"}