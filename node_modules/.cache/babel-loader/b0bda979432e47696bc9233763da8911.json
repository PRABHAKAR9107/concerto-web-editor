{"ast":null,"code":"var _jsxFileName = \"/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js\";\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel, AdvancedLinkFactory } from '../custom-link/Arrow';\nexport class BodyWidget extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n        this.props.app.getLinkFactories().registerFactory(new AdvancedLinkFactory()); //engine.getLinkFactories().registerFactory(new AdvancedLinkFactory());\n\n        var node = null;\n        node = new DefaultNodeModel(data.name, data.color);\n\n        switch (data.name) {\n          case 'Concept':\n            {\n              node.addInPort('String streetAddress', 'In');\n              node.addOutPort('');\n              node.addInPort('String postalCode', 'In');\n              node.addOutPort('');\n              node.addInPort('String postOfficeBoxNumber', 'In');\n              node.addOutPort('');\n              node.addInPort('String Address', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Participant':\n            {\n              node.addInPort('String identifier', 'In');\n              node.addOutPort('');\n              node.addInPort('String identifiedByField optional', 'In');\n              node.addOutPort('');\n              node.addInPort('TypeIdentifier superType optional', 'In');\n              node.addOutPort('');\n              node.addInPort(' Decorator[] decorators optional', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Transaction':\n            {\n              node.addInPort('String transactionId', 'In');\n              node.addOutPort('');\n              node.addInPort('DateTime timeStamp', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Event':\n            {\n              node.addInPort('String eventId', 'In');\n              node.addOutPort('');\n              node.addInPort('DateTime timeStamp', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Enumerable':\n            {\n              node.addInPort('String summerSeason', 'In');\n              node.addOutPort('');\n              node.addInPort('String winterSeason', 'In');\n              node.addOutPort('');\n              node.addInPort('String rainySeason', 'In');\n              node.addOutPort('');\n              break;\n            }\n\n          case 'Asset':\n            {\n              node.addInPort('String assetOne', 'In');\n              node.addOutPort('');\n              node.addInPort('String assetTwo', 'In');\n              node.addOutPort('');\n              break;\n            }\n        }\n\n        var point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        this.props.app.getDiagramEngine().getModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(CanvasWidget, {\n      className: \"srd-demo-canvas\",\n      engine: this.props.app.getDiagramEngine(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\nBodyWidget.displayName = \"BodyWidget\";\nBodyWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"BodyWidget\",\n  \"props\": {\n    \"app\": {\n      \"required\": true,\n      \"flowType\": {\n        \"name\": \"Application\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"] = {\n    name: \"BodyWidget\",\n    docgenInfo: BodyWidget.__docgenInfo,\n    path: \"src/components/main_area_component/components/BodyWidget.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["React","_","Application","DefaultNodeModel","CanvasWidget","AdvancedPortModel","AdvancedLinkFactory","BodyWidget","Component","render","event","data","JSON","parse","dataTransfer","getData","props","app","getLinkFactories","registerFactory","node","name","color","addInPort","addOutPort","point","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate","preventDefault"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel, AdvancedLinkFactory } from '../custom-link/Arrow';\n\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\t\t\t\t\t\t\tthis.props.app.getLinkFactories().registerFactory(new AdvancedLinkFactory())\n\t\t\t\t\t\t\t//engine.getLinkFactories().registerFactory(new AdvancedLinkFactory());\n\t\t\t\t\t\t\tvar node: DefaultNodeModel = null;\n\t\t\t\t\t\t\tnode = new DefaultNodeModel(data.name, data.color);\n\t\t\t\t\t\t\tswitch(data.name){\n\t\t\t\t\t\t\t\tcase 'Concept':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String streetAddress','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String postalCode','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String postOfficeBoxNumber','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String Address','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcase 'Participant':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String identifier','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String identifiedByField optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('TypeIdentifier superType optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort(' Decorator[] decorators optional','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Transaction':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String transactionId','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('DateTime timeStamp','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Event':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String eventId','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('DateTime timeStamp','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Enumerable':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String summerSeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String winterSeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String rainySeason','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Asset':\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String assetOne','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tnode.addInPort('String assetTwo','In');\n\t\t\t\t\t\t\t\t\t\tnode.addOutPort('');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}