{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = require(\"react\");\n\nconst _ = require(\"lodash\");\n\nconst DefaultPortLabelWidget_1 = require(\"../port/DefaultPortLabelWidget\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nvar S;\n\n(function (S) {\n  S.Node = styled_1.default.div`\n\t\tbackground-color: ${p => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${p => p.selected ? 'rgb(0,192,255)' : 'black'};\n\t`;\n  S.Title = styled_1.default.div`\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n  S.TitleName = styled_1.default.div`\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n  S.Ports = styled_1.default.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n  S.PortsContainer = styled_1.default.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n})(S || (S = {}));\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\n\n\nclass DefaultNodeWidget extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.generatePort = port => {\n      return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, {\n        engine: this.props.engine,\n        port: port,\n        key: port.getID()\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(S.Node, {\n      \"data-default-node-name\": this.props.node.getOptions().name,\n      selected: this.props.node.isSelected(),\n      background: this.props.node.getOptions().color\n    }, React.createElement(S.Title, null, React.createElement(S.TitleName, null, this.props.node.getOptions().name)), React.createElement(S.Ports, null, React.createElement(S.PortsContainer, null, _.map(this.props.node.getInPorts(), this.generatePort)), React.createElement(S.PortsContainer, null, _.map(this.props.node.getOutPorts(), this.generatePort))));\n  }\n\n}\n\nexports.DefaultNodeWidget = DefaultNodeWidget;","map":{"version":3,"sources":["../../../src/node/DefaultNodeWidget.tsx"],"names":[],"mappings":";;;;;;AAAA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAGA,MAAA,wBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAU,CAAV;;AAAA,CAAA,UAAU,CAAV,EAAW;AACG,EAAA,CAAA,CAAA,IAAA,GAAO,QAAA,CAAA,OAAA,CAAO,GAA8C;sBACpD,CAAC,IAAI,CAAC,CAAC,UAAU;;;;;;;sBAOjB,CAAC,IAAK,CAAC,CAAC,QAAF,GAAa,gBAAb,GAAgC,OAAQ;EARtD;AAWA,EAAA,CAAA,CAAA,KAAA,GAAQ,QAAA,CAAA,OAAA,CAAO,GAAG;;;;;EAAlB;AAOA,EAAA,CAAA,CAAA,SAAA,GAAY,QAAA,CAAA,OAAA,CAAO,GAAG;;;EAAtB;AAKA,EAAA,CAAA,CAAA,KAAA,GAAQ,QAAA,CAAA,OAAA,CAAO,GAAG;;;EAAlB;AAKA,EAAA,CAAA,CAAA,cAAA,GAAiB,QAAA,CAAA,OAAA,CAAO,GAAG;;;;;;;;;;;;EAA3B;AAab,CA1CD,EAAU,CAAC,KAAD,CAAC,GAAA,EAAA,CAAX;AAiDA;;;;;;AAIA,MAAa,iBAAb,SAAuC,KAAK,CAAC,SAA7C,CAAwE;AAAxE,EAAA,WAAA,GAAA;;;AACC,SAAA,YAAA,GAAe,IAAI,IAAG;AACrB,aAAO,KAAA,CAAA,aAAA,CAAC,wBAAA,CAAA,gBAAD,EAAiB;AAAC,QAAA,MAAM,EAAE,KAAK,KAAL,CAAW,MAApB;AAA4B,QAAA,IAAI,EAAE,IAAlC;AAAwC,QAAA,GAAG,EAAE,IAAI,CAAC,KAAL;AAA7C,OAAjB,CAAP;AACA,KAFD;AAoBA;;AAhBA,EAAA,MAAM,GAAA;AACL,WACC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,IAAH,EAAO;AAAA,gCACkB,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,GAA6B,IAD/C;AAEN,MAAA,QAAQ,EAAE,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,EAFJ;AAGN,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,GAA6B;AAHnC,KAAP,EAIC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,KAAH,EAAQ,IAAR,EACC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,SAAH,EAAY,IAAZ,EAAc,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,GAA6B,IAA3C,CADD,CAJD,EAOC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,KAAH,EAAQ,IAAR,EACC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,cAAH,EAAiB,IAAjB,EAAmB,CAAC,CAAC,GAAF,CAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,EAAN,EAAoC,KAAK,YAAzC,CAAnB,CADD,EAEC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,cAAH,EAAiB,IAAjB,EAAmB,CAAC,CAAC,GAAF,CAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,WAAhB,EAAN,EAAqC,KAAK,YAA1C,CAAnB,CAFD,CAPD,CADD;AAcA;;AApBsE;;AAAxE,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nconst DefaultPortLabelWidget_1 = require(\"../port/DefaultPortLabelWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.Node = styled_1.default.div `\n\t\tbackground-color: ${p => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${p => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n    S.Title = styled_1.default.div `\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n    S.TitleName = styled_1.default.div `\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n    S.Ports = styled_1.default.div `\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n    S.PortsContainer = styled_1.default.div `\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n})(S || (S = {}));\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nclass DefaultNodeWidget extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.generatePort = port => {\n            return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, { engine: this.props.engine, port: port, key: port.getID() });\n        };\n    }\n    render() {\n        return (React.createElement(S.Node, { \"data-default-node-name\": this.props.node.getOptions().name, selected: this.props.node.isSelected(), background: this.props.node.getOptions().color },\n            React.createElement(S.Title, null,\n                React.createElement(S.TitleName, null, this.props.node.getOptions().name)),\n            React.createElement(S.Ports, null,\n                React.createElement(S.PortsContainer, null, _.map(this.props.node.getInPorts(), this.generatePort)),\n                React.createElement(S.PortsContainer, null, _.map(this.props.node.getOutPorts(), this.generatePort)))));\n    }\n}\nexports.DefaultNodeWidget = DefaultNodeWidget;\n//# sourceMappingURL=DefaultNodeWidget.js.map"]},"metadata":{},"sourceType":"script"}