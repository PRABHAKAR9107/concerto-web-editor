{"ast":null,"code":"import\"core-js/modules/es.function.name\";import _classCallCheck from\"/home/kanav/GSOC/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kanav/GSOC/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/kanav/GSOC/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/kanav/GSOC/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/kanav/GSOC/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import*as React from\"react\";import*as _ from\"lodash\";import{Application}from\"../Application\";import{DefaultNodeModel}from\"@projectstorm/react-diagrams\";import{CanvasWidget}from\"@projectstorm/react-canvas-core\";import\"./style.css\";import{AdvancedPortModel}from\"../custom-link/Arrow\";import{JSCustomNodeModel}from\"../custom-node-js/JSCustomNodeModel\";export var BodyWidget=/*#__PURE__*/function(_React$Component){_inherits(BodyWidget,_React$Component);function BodyWidget(){_classCallCheck(this,BodyWidget);return _possibleConstructorReturn(this,_getPrototypeOf(BodyWidget).apply(this,arguments))}_createClass(BodyWidget,[{key:\"render\",value:function render(){var _this=this;return React.createElement(\"div\",{onDrop:function onDrop(event){var data=JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));switch(data.name){case\"Concept\":var ports=[{text:\"String streetAddress\",color:\"grey\",isIn:!0,key:1},{text:\"String postalCode\",color:\"grey\",isIn:!0,key:2},{text:\"String postOfficeBoxNumber\",color:\"grey\",isIn:!0,key:3},{text:\"String Address\",color:\"grey\",isIn:!0,key:4}];break;case\"Participant\":var ports=[{text:\"String identifier\",color:\"grey\",isIn:!0,key:1},{text:\"String identifiedByField \",color:\"grey\",isIn:!0,key:2},{text:\"TypeIdentifier superType \",color:\"grey\",isIn:!0,key:3},{text:\"Decorator[] decorators\",color:\"grey\",isIn:!0,key:4}];break;case\"Event\":var ports=[{text:\"String eventId\",color:\"grey\",isIn:!0,key:1},{text:\"DateTime timeStamp\",color:\"grey\",isIn:!0,key:2}];break;case\"Asset\":var ports=[{text:\"String assetOne\",color:\"grey\",isIn:!0,key:1},{text:\"String assetTwo\",color:\"grey\",isIn:!0,key:2}];break;case\"Enumerable\":var ports=[{text:\"String summerSeason\",color:\"grey\",isIn:!0,key:1},{text:\"String winterSeason\",color:\"grey\",isIn:!0,key:2},{text:\"String rainySeason\",color:\"grey\",isIn:!0,key:3}];break;case\"Transaction\":var ports=[{text:\"String transactionId\",color:\"grey\",isIn:!0,key:1},{text:\"DateTime timeStamp\",color:\"grey\",isIn:!0,key:2}];break;}var node=new JSCustomNodeModel({name:data.name,color:data.color,ports:ports});node.addPort(new AdvancedPortModel(!1,data.type));var point=_this.props.app.getDiagramEngine().getRelativeMousePoint(event);node.setPosition(point);_this.props.app.getDiagramEngine().getModel().addNode(node);_this.forceUpdate()},onDragOver:function onDragOver(event){event.preventDefault()}},React.createElement(CanvasWidget,{className:\"srd-demo-canvas\",engine:this.props.app.getDiagramEngine()}))}}]);return BodyWidget}(React.Component);BodyWidget.displayName=\"BodyWidget\";BodyWidget.__docgenInfo={description:\"\",methods:[],displayName:\"BodyWidget\",props:{app:{required:!0,flowType:{name:\"Application\"},description:\"\"}}};if(\"undefined\"!=typeof STORYBOOK_REACT_CLASSES){STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"]={name:\"BodyWidget\",docgenInfo:BodyWidget.__docgenInfo,path:\"src/components/main_area_component/components/BodyWidget.js\"}}","map":{"version":3,"sources":["/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["React","_","Application","DefaultNodeModel","CanvasWidget","AdvancedPortModel","JSCustomNodeModel","BodyWidget","event","data","JSON","parse","dataTransfer","getData","name","ports","text","color","isIn","key","node","addPort","type","point","props","app","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate","preventDefault","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nimport { JSCustomNodeModel } from '../custom-node-js/JSCustomNodeModel'\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\t\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch(data.name){\n\t\t\t\t\t\t\t\tcase \"Concept\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String streetAddress\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postalCode\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postOfficeBoxNumber\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String Address\", color: \"grey\", isIn: true, key:4 },\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Participant\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String identifier\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String identifiedByField \", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"TypeIdentifier superType \", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"Decorator[] decorators\", color: \"grey\", isIn: true, key:4 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Event\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String eventId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Asset\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String assetOne\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String assetTwo\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Enumerable\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String summerSeason\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String winterSeason\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String rainySeason\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Transaction\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String transactionId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t\tvar node = new JSCustomNodeModel({ name: data.name, color: data.color, ports });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tnode.addPort(new AdvancedPortModel(false, data.type)); \n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}