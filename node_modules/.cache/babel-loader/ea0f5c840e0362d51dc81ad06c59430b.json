{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_diagrams_defaults_1 = require(\"@projectstorm/react-diagrams-defaults\");\n\nconst RightAngleLinkFactory_1 = require(\"./RightAngleLinkFactory\");\n\nclass RightAngleLinkModel extends react_diagrams_defaults_1.DefaultLinkModel {\n  constructor(options = {}) {\n    super(Object.assign({\n      type: RightAngleLinkFactory_1.RightAngleLinkFactory.NAME\n    }, options));\n    this.lastHoverIndexOfPath = 0;\n    this._lastPathXdirection = false;\n    this._firstPathXdirection = false;\n  }\n\n  setFirstAndLastPathsDirection() {\n    let points = this.getPoints();\n\n    for (let i = 1; i < points.length; i += points.length - 2) {\n      let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n      let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\n      if (i - 1 === 0) {\n        this._firstPathXdirection = dx > dy;\n      } else {\n        this._lastPathXdirection = dx > dy;\n      }\n    }\n  } // @ts-ignore\n\n\n  addPoint(pointModel, index = 1) {\n    // @ts-ignore\n    super.addPoint(pointModel, index);\n    this.setFirstAndLastPathsDirection();\n    return pointModel;\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.setFirstAndLastPathsDirection();\n  }\n\n  setManuallyFirstAndLastPathsDirection(first, last) {\n    this._firstPathXdirection = first;\n    this._lastPathXdirection = last;\n  }\n\n  getLastPathXdirection() {\n    return this._lastPathXdirection;\n  }\n\n  getFirstPathXdirection() {\n    return this._firstPathXdirection;\n  }\n\n  setWidth(width) {\n    this.options.width = width;\n    this.fireEvent({\n      width\n    }, 'widthChanged');\n  }\n\n  setColor(color) {\n    this.options.color = color;\n    this.fireEvent({\n      color\n    }, 'colorChanged');\n  }\n\n}\n\nexports.RightAngleLinkModel = RightAngleLinkModel;","map":{"version":3,"sources":["../../../src/link/RightAngleLinkModel.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,yBAAA,GAAA,OAAA,CAAA,uCAAA,CAAA;;AACA,MAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAIA,MAAa,mBAAb,SAAyC,yBAAA,CAAA,gBAAzC,CAAyD;AAIxD,EAAA,WAAA,CAAY,OAAA,GAAmC,EAA/C,EAAiD;AAChD,UAAK,MAAA,CAAA,MAAA,CAAA;AACJ,MAAA,IAAI,EAAE,uBAAA,CAAA,qBAAA,CAAsB;AADxB,KAAA,EAED,OAFC,CAAL;AAIA,SAAK,oBAAL,GAA4B,CAA5B;AACA,SAAK,mBAAL,GAA2B,KAA3B;AACA,SAAK,oBAAL,GAA4B,KAA5B;AACA;;AAED,EAAA,6BAA6B,GAAA;AAC5B,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,IAAI,MAAM,CAAC,MAAP,GAAgB,CAAxD,EAA2D;AAC1D,UAAI,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,KAAmB,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,IAAd,EAA5B,CAAT;AACA,UAAI,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,KAAmB,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,IAAd,EAA5B,CAAT;;AACA,UAAI,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AAChB,aAAK,oBAAL,GAA4B,EAAE,GAAG,EAAjC;AACA,OAFD,MAEO;AACN,aAAK,mBAAL,GAA2B,EAAE,GAAG,EAAhC;AACA;AACD;AACD,GAzBuD,CA2BxD;;;AACA,EAAA,QAAQ,CAAuB,UAAvB,EAAsC,KAAA,GAAgB,CAAtD,EAAuD;AAC9D;AACA,UAAM,QAAN,CAAe,UAAf,EAA2B,KAA3B;AACA,SAAK,6BAAL;AACA,WAAO,UAAP;AACA;;AAED,EAAA,WAAW,CAAC,KAAD,EAA8B;AACxC,UAAM,WAAN,CAAkB,KAAlB;AACA,SAAK,6BAAL;AACA;;AAED,EAAA,qCAAqC,CAAC,KAAD,EAAQ,IAAR,EAAY;AAChD,SAAK,oBAAL,GAA4B,KAA5B;AACA,SAAK,mBAAL,GAA2B,IAA3B;AACA;;AAED,EAAA,qBAAqB,GAAA;AACpB,WAAO,KAAK,mBAAZ;AACA;;AACD,EAAA,sBAAsB,GAAA;AACrB,WAAO,KAAK,oBAAZ;AACA;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAc;AACrB,SAAK,OAAL,CAAa,KAAb,GAAqB,KAArB;AACA,SAAK,SAAL,CAAe;AAAE,MAAA;AAAF,KAAf,EAA0B,cAA1B;AACA;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAc;AACrB,SAAK,OAAL,CAAa,KAAb,GAAqB,KAArB;AACA,SAAK,SAAL,CAAe;AAAE,MAAA;AAAF,KAAf,EAA0B,cAA1B;AACA;;AA5DuD;;AAAzD,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_diagrams_defaults_1 = require(\"@projectstorm/react-diagrams-defaults\");\nconst RightAngleLinkFactory_1 = require(\"./RightAngleLinkFactory\");\nclass RightAngleLinkModel extends react_diagrams_defaults_1.DefaultLinkModel {\n    constructor(options = {}) {\n        super(Object.assign({ type: RightAngleLinkFactory_1.RightAngleLinkFactory.NAME }, options));\n        this.lastHoverIndexOfPath = 0;\n        this._lastPathXdirection = false;\n        this._firstPathXdirection = false;\n    }\n    setFirstAndLastPathsDirection() {\n        let points = this.getPoints();\n        for (let i = 1; i < points.length; i += points.length - 2) {\n            let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n            let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n            if (i - 1 === 0) {\n                this._firstPathXdirection = dx > dy;\n            }\n            else {\n                this._lastPathXdirection = dx > dy;\n            }\n        }\n    }\n    // @ts-ignore\n    addPoint(pointModel, index = 1) {\n        // @ts-ignore\n        super.addPoint(pointModel, index);\n        this.setFirstAndLastPathsDirection();\n        return pointModel;\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.setFirstAndLastPathsDirection();\n    }\n    setManuallyFirstAndLastPathsDirection(first, last) {\n        this._firstPathXdirection = first;\n        this._lastPathXdirection = last;\n    }\n    getLastPathXdirection() {\n        return this._lastPathXdirection;\n    }\n    getFirstPathXdirection() {\n        return this._firstPathXdirection;\n    }\n    setWidth(width) {\n        this.options.width = width;\n        this.fireEvent({ width }, 'widthChanged');\n    }\n    setColor(color) {\n        this.options.color = color;\n        this.fireEvent({ color }, 'colorChanged');\n    }\n}\nexports.RightAngleLinkModel = RightAngleLinkModel;\n//# sourceMappingURL=RightAngleLinkModel.js.map"]},"metadata":{},"sourceType":"script"}