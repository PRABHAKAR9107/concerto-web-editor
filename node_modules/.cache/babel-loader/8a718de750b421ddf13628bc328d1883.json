{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Point_1 = require(\"./Point\");\n\nconst Polygon_1 = require(\"./Polygon\");\n\nvar BezierCurvepPoints;\n\n(function (BezierCurvepPoints) {\n  BezierCurvepPoints[BezierCurvepPoints[\"SOURCE\"] = 0] = \"SOURCE\";\n  BezierCurvepPoints[BezierCurvepPoints[\"SOURCE_CONTROL\"] = 1] = \"SOURCE_CONTROL\";\n  BezierCurvepPoints[BezierCurvepPoints[\"TARGET_CONTROL\"] = 2] = \"TARGET_CONTROL\";\n  BezierCurvepPoints[BezierCurvepPoints[\"TARGET\"] = 3] = \"TARGET\";\n})(BezierCurvepPoints = exports.BezierCurvepPoints || (exports.BezierCurvepPoints = {}));\n\nclass BezierCurve extends Polygon_1.Polygon {\n  constructor() {\n    super([new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0)]);\n  }\n\n  getSVGCurve() {\n    return `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n  }\n\n  setPoints(points) {\n    if (points.length !== 4) {\n      throw new Error('BezierCurve must have extactly 4 points');\n    }\n\n    super.setPoints(points);\n  }\n\n  getSource() {\n    return this.points[BezierCurvepPoints.SOURCE];\n  }\n\n  getSourceControl() {\n    return this.points[BezierCurvepPoints.SOURCE_CONTROL];\n  }\n\n  getTargetControl() {\n    return this.points[BezierCurvepPoints.TARGET_CONTROL];\n  }\n\n  getTarget() {\n    return this.points[BezierCurvepPoints.TARGET];\n  }\n\n  setSource(point) {\n    this.points[BezierCurvepPoints.SOURCE] = point;\n  }\n\n  setSourceControl(point) {\n    this.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n  }\n\n  setTargetControl(point) {\n    this.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n  }\n\n  setTarget(point) {\n    this.points[BezierCurvepPoints.TARGET] = point;\n  }\n\n}\n\nexports.BezierCurve = BezierCurve;","map":{"version":3,"sources":["../../src/BezierCurve.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC7B,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,CALD,EAAY,kBAAkB,GAAlB,OAAA,CAAA,kBAAA,KAAA,OAAA,CAAA,kBAAA,GAAkB,EAAlB,CAAZ;;AAOA,MAAa,WAAb,SAAiC,SAAA,CAAA,OAAjC,CAAwC;AACvC,EAAA,WAAA,GAAA;AACC,UAAM,CAAC,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB,EAAmC,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAnC,EAAoD,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,CAApD,CAAN;AACA;;AAED,EAAA,WAAW,GAAA;AACV,WAAO,IAAI,KAAK,SAAL,GAAiB,KAAjB,EAAwB,KAAK,KAAK,gBAAL,GAAwB,KAAxB,EAA+B,KAAK,KAAK,gBAAL,GAAwB,KAAxB,EAA+B,KAAK,KAAK,SAAL,GAAiB,KAAjB,EAAwB,EAAxI;AACA;;AAED,EAAA,SAAS,CAAC,MAAD,EAAgB;AACxB,QAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AACxB,YAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACA;;AACD,UAAM,SAAN,CAAgB,MAAhB;AACA;;AAED,EAAA,SAAS,GAAA;AACR,WAAO,KAAK,MAAL,CAAY,kBAAkB,CAAC,MAA/B,CAAP;AACA;;AAED,EAAA,gBAAgB,GAAA;AACf,WAAO,KAAK,MAAL,CAAY,kBAAkB,CAAC,cAA/B,CAAP;AACA;;AAED,EAAA,gBAAgB,GAAA;AACf,WAAO,KAAK,MAAL,CAAY,kBAAkB,CAAC,cAA/B,CAAP;AACA;;AAED,EAAA,SAAS,GAAA;AACR,WAAO,KAAK,MAAL,CAAY,kBAAkB,CAAC,MAA/B,CAAP;AACA;;AAED,EAAA,SAAS,CAAC,KAAD,EAAa;AACrB,SAAK,MAAL,CAAY,kBAAkB,CAAC,MAA/B,IAAyC,KAAzC;AACA;;AAED,EAAA,gBAAgB,CAAC,KAAD,EAAa;AAC5B,SAAK,MAAL,CAAY,kBAAkB,CAAC,cAA/B,IAAiD,KAAjD;AACA;;AAED,EAAA,gBAAgB,CAAC,KAAD,EAAa;AAC5B,SAAK,MAAL,CAAY,kBAAkB,CAAC,cAA/B,IAAiD,KAAjD;AACA;;AAED,EAAA,SAAS,CAAC,KAAD,EAAa;AACrB,SAAK,MAAL,CAAY,kBAAkB,CAAC,MAA/B,IAAyC,KAAzC;AACA;;AA9CsC;;AAAxC,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nvar BezierCurvepPoints;\n(function (BezierCurvepPoints) {\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE\"] = 0] = \"SOURCE\";\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE_CONTROL\"] = 1] = \"SOURCE_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET_CONTROL\"] = 2] = \"TARGET_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET\"] = 3] = \"TARGET\";\n})(BezierCurvepPoints = exports.BezierCurvepPoints || (exports.BezierCurvepPoints = {}));\nclass BezierCurve extends Polygon_1.Polygon {\n    constructor() {\n        super([new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0)]);\n    }\n    getSVGCurve() {\n        return `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw new Error('BezierCurve must have extactly 4 points');\n        }\n        super.setPoints(points);\n    }\n    getSource() {\n        return this.points[BezierCurvepPoints.SOURCE];\n    }\n    getSourceControl() {\n        return this.points[BezierCurvepPoints.SOURCE_CONTROL];\n    }\n    getTargetControl() {\n        return this.points[BezierCurvepPoints.TARGET_CONTROL];\n    }\n    getTarget() {\n        return this.points[BezierCurvepPoints.TARGET];\n    }\n    setSource(point) {\n        this.points[BezierCurvepPoints.SOURCE] = point;\n    }\n    setSourceControl(point) {\n        this.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n    }\n    setTargetControl(point) {\n        this.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n    }\n    setTarget(point) {\n        this.points[BezierCurvepPoints.TARGET] = point;\n    }\n}\nexports.BezierCurve = BezierCurve;\n//# sourceMappingURL=BezierCurve.js.map"]},"metadata":{},"sourceType":"script"}