{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = require(\"react\");\n\nclass DefaultLinkSegmentWidget extends React.Component {\n  render() {\n    const Bottom = React.cloneElement(this.props.factory.generateLinkSegment(this.props.link, this.props.selected || this.props.link.isSelected(), this.props.path), {\n      ref: this.props.forwardRef\n    });\n    const Top = React.cloneElement(Bottom, Object.assign({\n      strokeLinecap: 'round',\n      onMouseLeave: () => {\n        this.props.onSelection(false);\n      },\n      onMouseEnter: () => {\n        this.props.onSelection(true);\n      }\n    }, this.props.extras, {\n      ref: null,\n      'data-linkid': this.props.link.getID(),\n      strokeOpacity: this.props.selected ? 0.1 : 0,\n      strokeWidth: 20,\n      fill: 'none',\n      onContextMenu: () => {\n        if (!this.props.link.isLocked()) {\n          event.preventDefault();\n          this.props.link.remove();\n        }\n      }\n    }));\n    return React.createElement(\"g\", null, Bottom, Top);\n  }\n\n}\n\nexports.DefaultLinkSegmentWidget = DefaultLinkSegmentWidget;","map":{"version":3,"sources":["../../../src/link/DefaultLinkSegmentWidget.tsx"],"names":[],"mappings":";;;;;;AAAA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAgBA,MAAa,wBAAb,SAA8C,KAAK,CAAC,SAApD,CAA4F;AAC3F,EAAA,MAAM,GAAA;AACL,UAAM,MAAM,GAAG,KAAK,CAAC,YAAN,CACd,KAAK,KAAL,CAAW,OAAX,CAAmB,mBAAnB,CACC,KAAK,KAAL,CAAW,IADZ,EAEC,KAAK,KAAL,CAAW,QAAX,IAAuB,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,EAFxB,EAGC,KAAK,KAAL,CAAW,IAHZ,CADc,EAMd;AACC,MAAA,GAAG,EAAE,KAAK,KAAL,CAAW;AADjB,KANc,CAAf;AAWA,UAAM,GAAG,GAAG,KAAK,CAAC,YAAN,CAAmB,MAAnB,EAAyB,MAAA,CAAA,MAAA,CAAA;AACpC,MAAA,aAAa,EAAE,OADqB;AAEpC,MAAA,YAAY,EAAE,MAAK;AAClB,aAAK,KAAL,CAAW,WAAX,CAAuB,KAAvB;AACA,OAJmC;AAKpC,MAAA,YAAY,EAAE,MAAK;AAClB,aAAK,KAAL,CAAW,WAAX,CAAuB,IAAvB;AACA;AAPmC,KAAA,EAQjC,KAAK,KAAL,CAAW,MARsB,EAQhB;AACpB,MAAA,GAAG,EAAE,IADe;AAEpB,qBAAe,KAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB,EAFK;AAGpB,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,QAAX,GAAsB,GAAtB,GAA4B,CAHvB;AAIpB,MAAA,WAAW,EAAE,EAJO;AAKpB,MAAA,IAAI,EAAE,MALc;AAMpB,MAAA,aAAa,EAAE,MAAK;AACnB,YAAI,CAAC,KAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,EAAL,EAAiC;AAChC,UAAA,KAAK,CAAC,cAAN;AACA,eAAK,KAAL,CAAW,IAAX,CAAgB,MAAhB;AACA;AACD;AAXmB,KARgB,CAAzB,CAAZ;AAsBA,WACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACE,MADF,EAEE,GAFF,CADD;AAMA;;AAzC0F;;AAA5F,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nclass DefaultLinkSegmentWidget extends React.Component {\n    render() {\n        const Bottom = React.cloneElement(this.props.factory.generateLinkSegment(this.props.link, this.props.selected || this.props.link.isSelected(), this.props.path), {\n            ref: this.props.forwardRef\n        });\n        const Top = React.cloneElement(Bottom, Object.assign({ strokeLinecap: 'round', onMouseLeave: () => {\n                this.props.onSelection(false);\n            }, onMouseEnter: () => {\n                this.props.onSelection(true);\n            } }, this.props.extras, { ref: null, 'data-linkid': this.props.link.getID(), strokeOpacity: this.props.selected ? 0.1 : 0, strokeWidth: 20, fill: 'none', onContextMenu: () => {\n                if (!this.props.link.isLocked()) {\n                    event.preventDefault();\n                    this.props.link.remove();\n                }\n            } }));\n        return (React.createElement(\"g\", null,\n            Bottom,\n            Top));\n    }\n}\nexports.DefaultLinkSegmentWidget = DefaultLinkSegmentWidget;\n//# sourceMappingURL=DefaultLinkSegmentWidget.js.map"]},"metadata":{},"sourceType":"script"}