{"ast":null,"code":"var _jsxFileName = \"/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/custom-link/Arrow.js\";\nimport React from 'react';\nimport { DefaultPortModel, DefaultLinkFactory, DefaultLinkModel, DefaultLinkWidget } from '@projectstorm/react-diagrams';\nimport { LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nexport class AdvancedLinkModel extends DefaultLinkModel {\n  constructor() {\n    super({\n      type: 'advanced',\n      width: 4\n    });\n  }\n\n}\nexport class AdvancedPortModel extends DefaultPortModel {\n  createLinkModel() {\n    return new AdvancedLinkModel();\n  }\n\n}\n\nconst CustomLinkArrowWidget = props => {\n  const {\n    point,\n    previousPoint\n  } = props;\n  const angle = 90 + Math.atan2(point.getPosition().y - previousPoint.getPosition().y, point.getPosition().x - previousPoint.getPosition().x) * 180 / Math.PI; //translate(50, -10),\n\n  return React.createElement(\"g\", {\n    className: \"arrow\",\n    transform: 'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    style: {\n      transform: 'rotate(' + angle + 'deg)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: 'translate(0, -3)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"polygon\", {\n    points: \"0,10 8,30 -8,30\",\n    fill: props.color,\n    onMouseLeave: () => {\n      this.setState({\n        selected: false\n      });\n    },\n    onMouseEnter: () => {\n      this.setState({\n        selected: true\n      });\n    },\n    \"data-id\": point.getID(),\n    \"data-linkid\": point.getLink().getID(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nCustomLinkArrowWidget.displayName = \"CustomLinkArrowWidget\";\nexport class AdvancedLinkWidget extends DefaultLinkWidget {\n  generateArrow(point, previousPoint) {\n    return React.createElement(CustomLinkArrowWidget, {\n      key: point.getID(),\n      point: point,\n      previousPoint: previousPoint,\n      colorSelected: this.props.link.getOptions().selectedColor,\n      color: this.props.link.getOptions().color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //ensure id is present for all points on the path\n    var points = this.props.link.getPoints();\n    var paths = [];\n    this.refPaths = []; //draw the multiple anchors and complex line instead\n\n    for (let j = 0; j < points.length - 1; j++) {\n      paths.push(this.generateLink(LinkWidget.generateLinePath(points[j], points[j + 1]), {\n        'data-linkid': this.props.link.getID(),\n        'data-point': j,\n        onMouseDown: event => {\n          this.addPointToLink(event, j + 1);\n        }\n      }, j));\n    } //render the circles\n\n\n    for (let i = 1; i < points.length - 1; i++) {\n      paths.push(this.generatePoint(points[i]));\n    }\n\n    if (this.props.link.getTargetPort() !== null) {\n      paths.push(this.generateArrow(points[points.length - 1], points[points.length - 2]));\n    } else {\n      paths.push(this.generatePoint(points[points.length - 1]));\n    }\n\n    return React.createElement(\"g\", {\n      \"data-default-link-test\": this.props.link.getOptions().testName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, paths);\n  }\n\n}\nAdvancedLinkWidget.displayName = \"AdvancedLinkWidget\";\nexport class AdvancedLinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('advanced');\n  }\n\n  generateModel() {\n    return new AdvancedLinkModel();\n  }\n\n  generateReactWidget(event) {\n    return React.createElement(AdvancedLinkWidget, {\n      link: event.model,\n      diagramEngine: this.engine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n  }\n\n}\nAdvancedLinkWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"generateArrow\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"point\",\n      \"type\": {\n        \"name\": \"PointModel\",\n        \"alias\": \"PointModel\"\n      }\n    }, {\n      \"name\": \"previousPoint\",\n      \"type\": {\n        \"name\": \"PointModel\",\n        \"alias\": \"PointModel\"\n      }\n    }],\n    \"returns\": {\n      \"type\": {\n        \"name\": \"JSX.Element\"\n      }\n    }\n  }],\n  \"displayName\": \"AdvancedLinkWidget\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/custom-link/Arrow.js\"] = {\n    name: \"AdvancedLinkWidget\",\n    docgenInfo: AdvancedLinkWidget.__docgenInfo,\n    path: \"src/components/main_area_component/custom-link/Arrow.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/gsoc_/concerto-web-editor/src/components/main_area_component/custom-link/Arrow.js"],"names":["React","DefaultPortModel","DefaultLinkFactory","DefaultLinkModel","DefaultLinkWidget","LinkWidget","PointModel","AdvancedLinkModel","constructor","type","width","AdvancedPortModel","createLinkModel","CustomLinkArrowWidget","props","point","previousPoint","angle","Math","atan2","getPosition","y","x","PI","transform","color","setState","selected","getID","getLink","AdvancedLinkWidget","generateArrow","link","getOptions","selectedColor","render","points","getPoints","paths","refPaths","j","length","push","generateLink","generateLinePath","onMouseDown","event","addPointToLink","i","generatePoint","getTargetPort","testName","AdvancedLinkFactory","generateModel","generateReactWidget","model","engine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    DefaultPortModel,\n    DefaultLinkFactory,\n    DefaultLinkModel,\n    DefaultLinkWidget,\n\n} from '@projectstorm/react-diagrams';\nimport { LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\n\n\nexport class AdvancedLinkModel extends DefaultLinkModel {\n    constructor() {\n        super({\n            type: 'advanced',\n            width: 4\n        });\n    }\n}\n \nexport class AdvancedPortModel extends DefaultPortModel {\n    createLinkModel(): AdvancedLinkModel | null {\n        return new AdvancedLinkModel();\n    }\n}\n \nconst CustomLinkArrowWidget = props => {\n    const { point, previousPoint } = props;\n \n    const angle =\n        90 +\n        (Math.atan2(\n            point.getPosition().y - previousPoint.getPosition().y,\n            point.getPosition().x - previousPoint.getPosition().x\n        ) *\n            180) /\n            Math.PI;\n \n    //translate(50, -10),\n    return (\n        <g className=\"arrow\" transform={'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')'}>\n            <g style={{ transform: 'rotate(' + angle + 'deg)' }}>\n                <g transform={'translate(0, -3)'}>\n                    <polygon\n                        points=\"0,10 8,30 -8,30\"\n                        fill={props.color}\n                        onMouseLeave={() => {\n                            this.setState({ selected: false });\n                        }}\n                        onMouseEnter={() => {\n                            this.setState({ selected: true });\n                        }}\n                        data-id={point.getID()}\n                        data-linkid={point.getLink().getID()}></polygon>\n                </g>\n            </g>\n        </g>\n    );\n};\n \nexport class AdvancedLinkWidget extends DefaultLinkWidget {\n    generateArrow(point: PointModel, previousPoint: PointModel): JSX.Element {\n        return (\n            <CustomLinkArrowWidget\n                key={point.getID()}\n                point={point}\n                previousPoint={previousPoint}\n                colorSelected={this.props.link.getOptions().selectedColor}\n                color={this.props.link.getOptions().color}\n            />\n        );\n    }\n \n    render() {\n        //ensure id is present for all points on the path\n        var points = this.props.link.getPoints();\n        var paths = [];\n        this.refPaths = [];\n \n        //draw the multiple anchors and complex line instead\n        for (let j = 0; j < points.length - 1; j++) {\n            paths.push(\n                this.generateLink(\n                    LinkWidget.generateLinePath(points[j], points[j + 1]),\n                    {\n                        'data-linkid': this.props.link.getID(),\n                        'data-point': j,\n                        onMouseDown: (event: MouseEvent) => {\n                            this.addPointToLink(event, j + 1);\n                        }\n                    },\n                    j\n                )\n            );\n        }\n \n        //render the circles\n        for (let i = 1; i < points.length - 1; i++) {\n            paths.push(this.generatePoint(points[i]));\n        }\n \n        if (this.props.link.getTargetPort() !== null) {\n            paths.push(this.generateArrow(points[points.length - 1], points[points.length - 2]));\n        } else {\n            paths.push(this.generatePoint(points[points.length - 1]));\n        }\n \n        return <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n    }\n}\n \nexport class AdvancedLinkFactory extends DefaultLinkFactory {\n    constructor() {\n        super('advanced');\n    }\n \n    generateModel(): AdvancedLinkModel {\n        return new AdvancedLinkModel();\n    }\n \n    generateReactWidget(event): JSX.Element {\n        return <AdvancedLinkWidget link={event.model} diagramEngine={this.engine} />;\n    }\n}"]},"metadata":{},"sourceType":"module"}