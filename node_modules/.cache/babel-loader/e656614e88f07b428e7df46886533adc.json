{"ast":null,"code":"var _jsxFileName = \"/home/kanav/gsoc_/concerto-web-editor/src/components/Test.js\";\nimport createEngine, { DiagramModel, DefaultNodeModel, DefaultPortModel, DefaultLinkFactory, DefaultLinkPointWidget, DefaultLinkModel, DefaultLinkWidget } from '@projectstorm/react-diagrams';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport * as React from 'react';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { DemoCanvasWidget } from '../helpers/DemoCanvasWidget';\nexport class AdvancedLinkModel extends DefaultLinkModel {\n  constructor() {\n    super({\n      type: 'advanced',\n      width: 4\n    });\n  }\n\n}\nexport class AdvancedPortModel extends DefaultPortModel {\n  createLinkModel() {\n    return new AdvancedLinkModel();\n  }\n\n}\n\nconst CustomLinkArrowWidget = props => {\n  const {\n    point,\n    previousPoint\n  } = props;\n  const angle = 90 + Math.atan2(point.getPosition().y - previousPoint.getPosition().y, point.getPosition().x - previousPoint.getPosition().x) * 180 / Math.PI; //translate(50, -10),\n\n  return React.createElement(\"g\", {\n    className: \"arrow\",\n    transform: 'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    style: {\n      transform: 'rotate(' + angle + 'deg)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: 'translate(0, -3)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"polygon\", {\n    points: \"0,10 8,30 -8,30\",\n    fill: props.color,\n    onMouseLeave: () => {\n      this.setState({\n        selected: false\n      });\n    },\n    onMouseEnter: () => {\n      this.setState({\n        selected: true\n      });\n    },\n    \"data-id\": point.getID(),\n    \"data-linkid\": point.getLink().getID(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))));\n};\n\nCustomLinkArrowWidget.displayName = \"CustomLinkArrowWidget\";\nexport class AdvancedLinkWidget extends DefaultLinkWidget {\n  generateArrow(point, previousPoint) {\n    return React.createElement(CustomLinkArrowWidget, {\n      key: point.getID(),\n      point: point,\n      previousPoint: previousPoint,\n      colorSelected: this.props.link.getOptions().selectedColor,\n      color: this.props.link.getOptions().color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //ensure id is present for all points on the path\n    var points = this.props.link.getPoints();\n    var paths = [];\n    this.refPaths = []; //draw the multiple anchors and complex line instead\n\n    for (let j = 0; j < points.length - 1; j++) {\n      paths.push(this.generateLink(LinkWidget.generateLinePath(points[j], points[j + 1]), {\n        'data-linkid': this.props.link.getID(),\n        'data-point': j,\n        onMouseDown: event => {\n          this.addPointToLink(event, j + 1);\n        }\n      }, j));\n    } //render the circles\n\n\n    for (let i = 1; i < points.length - 1; i++) {\n      paths.push(this.generatePoint(points[i]));\n    }\n\n    if (this.props.link.getTargetPort() !== null) {\n      paths.push(this.generateArrow(points[points.length - 1], points[points.length - 2]));\n    } else {\n      paths.push(this.generatePoint(points[points.length - 1]));\n    }\n\n    return React.createElement(\"g\", {\n      \"data-default-link-test\": this.props.link.getOptions().testName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, paths);\n  }\n\n}\nAdvancedLinkWidget.displayName = \"AdvancedLinkWidget\";\nexport class AdvancedLinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('advanced');\n  }\n\n  generateModel() {\n    return new AdvancedLinkModel();\n  }\n\n  generateReactWidget(event) {\n    return React.createElement(AdvancedLinkWidget, {\n      link: event.model,\n      diagramEngine: this.engine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n  }\n\n}\n/**\n *\n * Simple link styling demo\n *\n * @Author kfrajtak\n */\n\nexport default (() => {\n  //1) setup the diagram engine\n  var engine = createEngine();\n  engine.getLinkFactories().registerFactory(new AdvancedLinkFactory()); // create some nodes\n\n  var node1 = new DefaultNodeModel('Source', 'rgb(0,192,255)');\n  let port1 = node1.addPort(new AdvancedPortModel(false, 'out'));\n  node1.setPosition(100, 100);\n  var node2 = new DefaultNodeModel('Target', 'rgb(192,255,0)');\n  var port2 = node2.addPort(new AdvancedPortModel(true, 'in'));\n  node2.setPosition(500, 350);\n  var node3 = new DefaultNodeModel('Source', 'rgb(0,192,255)');\n  let port3 = node3.addPort(new AdvancedPortModel(false, 'out'));\n  node3.setPosition(100, 500);\n  var node4 = new DefaultNodeModel('Target', 'rgb(192,255,0)');\n  var port4 = node4.addPort(new AdvancedPortModel(true, 'in'));\n  node4.setPosition(500, 450);\n  var model = new DiagramModel();\n  model.addAll(port1.link(port2), port3.link(port4)); // add everything else\n\n  model.addAll(node1, node2, node3, node4); // load model into engine\n\n  engine.setModel(model); // render the diagram!\n\n  return React.createElement(DemoCanvasWidget, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(CanvasWidget, {\n    engine: engine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }));\n});\nAdvancedLinkWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"generateArrow\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"point\",\n      \"type\": {\n        \"name\": \"PointModel\",\n        \"alias\": \"PointModel\"\n      }\n    }, {\n      \"name\": \"previousPoint\",\n      \"type\": {\n        \"name\": \"PointModel\",\n        \"alias\": \"PointModel\"\n      }\n    }],\n    \"returns\": {\n      \"type\": {\n        \"name\": \"JSX.Element\"\n      }\n    }\n  }],\n  \"displayName\": \"AdvancedLinkWidget\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Test.js\"] = {\n    name: \"AdvancedLinkWidget\",\n    docgenInfo: AdvancedLinkWidget.__docgenInfo,\n    path: \"src/components/Test.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/gsoc_/concerto-web-editor/src/components/Test.js"],"names":["createEngine","DiagramModel","DefaultNodeModel","DefaultPortModel","DefaultLinkFactory","DefaultLinkPointWidget","DefaultLinkModel","DefaultLinkWidget","DiagramEngine","LinkWidget","PointModel","React","CanvasWidget","DemoCanvasWidget","AdvancedLinkModel","constructor","type","width","AdvancedPortModel","createLinkModel","CustomLinkArrowWidget","props","point","previousPoint","angle","Math","atan2","getPosition","y","x","PI","transform","color","setState","selected","getID","getLink","AdvancedLinkWidget","generateArrow","link","getOptions","selectedColor","render","points","getPoints","paths","refPaths","j","length","push","generateLink","generateLinePath","onMouseDown","event","addPointToLink","i","generatePoint","getTargetPort","testName","AdvancedLinkFactory","generateModel","generateReactWidget","model","engine","getLinkFactories","registerFactory","node1","port1","addPort","setPosition","node2","port2","node3","port3","node4","port4","addAll","setModel"],"mappings":"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","sourcesContent":["import createEngine, {\n\tDiagramModel,\n\tDefaultNodeModel,\n\tDefaultPortModel,\n\tDefaultLinkFactory,\n\tDefaultLinkPointWidget,\n\tDefaultLinkModel,\n\tDefaultLinkWidget\n} from '@projectstorm/react-diagrams';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport * as React from 'react';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { DemoCanvasWidget } from '../helpers/DemoCanvasWidget';\n\nexport class AdvancedLinkModel extends DefaultLinkModel {\n\tconstructor() {\n\t\tsuper({\n\t\t\ttype: 'advanced',\n\t\t\twidth: 4\n\t\t});\n\t}\n}\n\nexport class AdvancedPortModel extends DefaultPortModel {\n\tcreateLinkModel(): AdvancedLinkModel | null {\n\t\treturn new AdvancedLinkModel();\n\t}\n}\n\nconst CustomLinkArrowWidget = props => {\n\tconst { point, previousPoint } = props;\n\n\tconst angle =\n\t\t90 +\n\t\t(Math.atan2(\n\t\t\tpoint.getPosition().y - previousPoint.getPosition().y,\n\t\t\tpoint.getPosition().x - previousPoint.getPosition().x\n\t\t) *\n\t\t\t180) /\n\t\t\tMath.PI;\n\n\t//translate(50, -10),\n\treturn (\n\t\t<g className=\"arrow\" transform={'translate(' + point.getPosition().x + ', ' + point.getPosition().y + ')'}>\n\t\t\t<g style={{ transform: 'rotate(' + angle + 'deg)' }}>\n\t\t\t\t<g transform={'translate(0, -3)'}>\n\t\t\t\t\t<polygon\n\t\t\t\t\t\tpoints=\"0,10 8,30 -8,30\"\n\t\t\t\t\t\tfill={props.color}\n\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\t\tdata-linkid={point.getLink().getID()}></polygon>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</g>\n\t);\n};\n\nexport class AdvancedLinkWidget extends DefaultLinkWidget {\n\tgenerateArrow(point: PointModel, previousPoint: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<CustomLinkArrowWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point}\n\t\t\t\tpreviousPoint={previousPoint}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\t//draw the multiple anchors and complex line instead\n\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t{\n\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tj\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t//render the circles\n\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t}\n\n\t\tif (this.props.link.getTargetPort() !== null) {\n\t\t\tpaths.push(this.generateArrow(points[points.length - 1], points[points.length - 2]));\n\t\t} else {\n\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n\nexport class AdvancedLinkFactory extends DefaultLinkFactory {\n\tconstructor() {\n\t\tsuper('advanced');\n\t}\n\n\tgenerateModel(): AdvancedLinkModel {\n\t\treturn new AdvancedLinkModel();\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <AdvancedLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n}\n/**\n *\n * Simple link styling demo\n *\n * @Author kfrajtak\n */\nexport default () => {\n\t//1) setup the diagram engine\n\tvar engine = createEngine();\n\tengine.getLinkFactories().registerFactory(new AdvancedLinkFactory());\n\n\t// create some nodes\n\tvar node1 = new DefaultNodeModel('Source', 'rgb(0,192,255)');\n\tlet port1 = node1.addPort(new AdvancedPortModel(false, 'out'));\n\tnode1.setPosition(100, 100);\n\n\tvar node2 = new DefaultNodeModel('Target', 'rgb(192,255,0)');\n\tvar port2 = node2.addPort(new AdvancedPortModel(true, 'in'));\n\tnode2.setPosition(500, 350);\n\n\tvar node3 = new DefaultNodeModel('Source', 'rgb(0,192,255)');\n\tlet port3 = node3.addPort(new AdvancedPortModel(false, 'out'));\n\tnode3.setPosition(100, 500);\n\n\tvar node4 = new DefaultNodeModel('Target', 'rgb(192,255,0)');\n\tvar port4 = node4.addPort(new AdvancedPortModel(true, 'in'));\n\tnode4.setPosition(500, 450);\n\n\tvar model = new DiagramModel();\n\n\tmodel.addAll(port1.link(port2), port3.link(port4));\n\n\t// add everything else\n\tmodel.addAll(node1, node2, node3, node4);\n\n\t// load model into engine\n\tengine.setModel(model);\n\n\t// render the diagram!\n\treturn (\n\t\t<DemoCanvasWidget>\n\t\t\t<CanvasWidget engine={engine} />\n\t\t</DemoCanvasWidget>\n\t);\n};"]},"metadata":{},"sourceType":"module"}