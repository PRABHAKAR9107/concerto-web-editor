{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\";\nimport * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams'; //import { MdClose } from \"react-icons/md\";\n\nimport './style.css';\nimport { useState } from 'react';\n\nconst JSCustomNodeWidget = ({\n  engine,\n  node\n}) => {\n  var [list, setList] = useState({\n    items: [],\n    currentItem: {\n      text: \"\",\n      color: node.color,\n      isIn: true,\n      key: node.key\n    }\n  });\n\n  const addItem = () => {\n    const newItem = list.currentItem;\n    setList(list.items = [...list.items, newItem]);\n    console.log(list);\n  };\n\n  const handleInput = e => {\n    //console.log(e.target.value)\n    setList(list.currentItem.text = e);\n  };\n\n  const setUpdate = () => {\n    console.log(\"something\");\n  };\n\n  const deleteItem = key => {\n    const filteredItems = list.items.filter(item => //list.filter is not a function\n    item.key !== key);\n    setList(list = filteredItems);\n  };\n\n  const renderList = _ => {\n    return node.portz.map(portzo => {\n      return React.createElement(\"div\", {\n        className: \"port-row\",\n        key: portzo.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: portzo.text,\n        onClick: () => {\n          deleteItem(portzo.key);\n        },\n        onChange: handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    });\n  };\n\n  const head_color = () => {\n    switch (node.name) {\n      case \"Concept\":\n        return {\n          background: \"rgb(34, 92, 178)\"\n        };\n\n      case \"Asset\":\n        return {\n          backgroundColor: \"rgb(178, 43, 34)\"\n        };\n\n      case \"Event\":\n        return {\n          backgroundColor: \"rgb(93, 46, 113)\"\n        };\n\n      case \"Participant\":\n        return {\n          background: \"rgb(178, 135, 4)\"\n        };\n\n      case \"Enumerable\":\n        return {\n          backgroundColor: \"rgb(178, 29, 86)\"\n        };\n\n      case \"Transaction\":\n        return {\n          background: \"rgb(28, 127, 51)\"\n        };\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"custom-node\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"node-header\",\n    style: head_color(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(PortWidget, {\n    engine: engine,\n    port: node.getPort('in'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, node.name)), React.createElement(\"div\", {\n    className: \"node-ports\",\n    style: {\n      backgroundColor: node.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, renderList()));\n};\n\nJSCustomNodeWidget.displayName = \"JSCustomNodeWidget\";\nJSCustomNodeWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"JSCustomNodeWidget\"\n};\nexport default JSCustomNodeWidget;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\"] = {\n    name: \"JSCustomNodeWidget\",\n    docgenInfo: JSCustomNodeWidget.__docgenInfo,\n    path: \"src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx"],"names":["React","PortWidget","useState","JSCustomNodeWidget","engine","node","list","setList","items","currentItem","text","color","isIn","key","addItem","newItem","console","log","handleInput","e","setUpdate","deleteItem","filteredItems","filter","item","renderList","_","portz","map","portzo","head_color","name","background","backgroundColor","getPort"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\n//import { MdClose } from \"react-icons/md\";\nimport './style.css';\nimport { useState } from 'react';\n\nconst JSCustomNodeWidget = ({ engine, node }) => {\n\tvar [list,setList]=useState(\n\t\t{\n\t\t\titems:[],\n\t\t\tcurrentItem:{ text: \"\", color: node.color, isIn: true, key:node.key },\n\t\t}                               \n\t)\n\tconst addItem=()=>{\n\t\tconst newItem=list.currentItem;\n\t\tsetList(list.items=[...list.items,newItem])\n\t\tconsole.log(list);\n\t\t\n\t}\n\n\tconst handleInput=(e)=>{\n\t\t//console.log(e.target.value)\n\t\tsetList(list.currentItem.text=e)\n\t}\n\n\tconst setUpdate=()=>{\n\t\tconsole.log(\"something\")\n\t}\n\n\tconst deleteItem=(key)=>{\n\t\tconst filteredItems=list.items.filter(item =>           //list.filter is not a function\n\t\t\titem.key!==key );\n\t\tsetList(list=filteredItems)\n\n\t  }\n\n\tconst renderList = _ => {\n\t\treturn node.portz.map(portzo => {\n\t\t\treturn (\n\t\t\t\t<div className=\"port-row\" key={portzo.key}>\n\t\t\t\t\t<p><input type=\"text\"  value={ portzo.text } onClick={ ()=>{deleteItem(portzo.key)} } onChange={ handleInput } /></p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t}\n\tconst head_color=()=>{\n\t\tswitch(node.name){\n\t\t\tcase \"Concept\":\n\t\t\t\treturn { background: \"rgb(34, 92, 178)\" }\n\n\t\t\tcase \"Asset\":\n\t\t\t\treturn { backgroundColor: \"rgb(178, 43, 34)\" }\n\n\t\t\tcase \"Event\":\n\t\t\t\treturn { backgroundColor: \"rgb(93, 46, 113)\" }\n\n\t\t\tcase \"Participant\":\n\t\t\t\treturn { background: \"rgb(178, 135, 4)\" }\n\n\t\t\tcase \"Enumerable\":\n\t\t\t\treturn {backgroundColor: \"rgb(178, 29, 86)\" }\n\n\t\t\tcase \"Transaction\":\n\t\t\t\treturn { background:\"rgb(28, 127, 51)\" }\n\t\t\tdefault:\n\t\t\t\tbreak\n\n\n\t}\n}\t\n\n\treturn (\n\t\t<div className=\"custom-node\" >\n\t\t\t\n\t\t\t<div className=\"node-header\" style={ head_color() }>\n\t\t\t\t<PortWidget engine={engine} port={node.getPort('in')}>\n\t\t\t\t\t\t{ node.name }\n\t\t\t\t</PortWidget>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"node-ports\" style={{backgroundColor:node.color}}>\n\t\t\t\t{renderList()}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default JSCustomNodeWidget"]},"metadata":{},"sourceType":"module"}