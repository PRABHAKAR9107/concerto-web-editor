{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"lodash\"), require(\"react\"));else if (typeof define === \"function\" && define.amd) define([\"_\", \"react\"], factory);else if (typeof exports === \"object\") exports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));else root[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(window, function (__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\n  return function (modules) {\n    var installedModules = {};\n\n    function __webpack_require__(moduleId) {\n      if (installedModules[moduleId]) {\n        return installedModules[moduleId].exports;\n      }\n\n      var module = installedModules[moduleId] = {\n        i: moduleId,\n        l: false,\n        exports: {}\n      };\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      module.l = true;\n      return module.exports;\n    }\n\n    __webpack_require__.m = modules;\n    __webpack_require__.c = installedModules;\n\n    __webpack_require__.d = function (exports, name, getter) {\n      if (!__webpack_require__.o(exports, name)) {\n        Object.defineProperty(exports, name, {\n          configurable: false,\n          enumerable: true,\n          get: getter\n        });\n      }\n    };\n\n    __webpack_require__.r = function (exports) {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n    };\n\n    __webpack_require__.n = function (module) {\n      var getter = module && module.__esModule ? function getDefault() {\n        return module[\"default\"];\n      } : function getModuleExports() {\n        return module;\n      };\n\n      __webpack_require__.d(getter, \"a\", getter);\n\n      return getter;\n    };\n\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n\n    __webpack_require__.p = \"\";\n    return __webpack_require__(__webpack_require__.s = 45);\n  }([function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n  }, function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE__1__;\n  }, function (module, exports) {\n    var DiagonalMovement = {\n      Always: 1,\n      Never: 2,\n      IfAtMostOneObstacle: 3,\n      OnlyWhenNoObstacles: 4\n    };\n    module.exports = DiagonalMovement;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget = function (_super) {\n      __extends(BaseWidget, _super);\n\n      function BaseWidget(name, props) {\n        var _this = _super.call(this, props) || this;\n\n        _this.className = name;\n        return _this;\n      }\n\n      BaseWidget.prototype.bem = function (selector) {\n        return (this.props.baseClass || this.className) + selector + \" \";\n      };\n\n      BaseWidget.prototype.getClassName = function () {\n        return (this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\");\n      };\n\n      BaseWidget.prototype.getProps = function () {\n        return __assign({}, this.props.extraProps || {}, {\n          className: this.getClassName()\n        });\n      };\n\n      return BaseWidget;\n    }(React.Component);\n\n    exports.BaseWidget = BaseWidget;\n  }, function (module, exports) {\n    function backtrace(node) {\n      var path = [[node.x, node.y]];\n\n      while (node.parent) {\n        node = node.parent;\n        path.push([node.x, node.y]);\n      }\n\n      return path.reverse();\n    }\n\n    exports.backtrace = backtrace;\n\n    function biBacktrace(nodeA, nodeB) {\n      var pathA = backtrace(nodeA),\n          pathB = backtrace(nodeB);\n      return pathA.concat(pathB.reverse());\n    }\n\n    exports.biBacktrace = biBacktrace;\n\n    function pathLength(path) {\n      var i,\n          sum = 0,\n          a,\n          b,\n          dx,\n          dy;\n\n      for (i = 1; i < path.length; ++i) {\n        a = path[i - 1];\n        b = path[i];\n        dx = a[0] - b[0];\n        dy = a[1] - b[1];\n        sum += Math.sqrt(dx * dx + dy * dy);\n      }\n\n      return sum;\n    }\n\n    exports.pathLength = pathLength;\n\n    function interpolate(x0, y0, x1, y1) {\n      var abs = Math.abs,\n          line = [],\n          sx,\n          sy,\n          dx,\n          dy,\n          err,\n          e2;\n      dx = abs(x1 - x0);\n      dy = abs(y1 - y0);\n      sx = x0 < x1 ? 1 : -1;\n      sy = y0 < y1 ? 1 : -1;\n      err = dx - dy;\n\n      while (true) {\n        line.push([x0, y0]);\n\n        if (x0 === x1 && y0 === y1) {\n          break;\n        }\n\n        e2 = 2 * err;\n\n        if (e2 > -dy) {\n          err = err - dy;\n          x0 = x0 + sx;\n        }\n\n        if (e2 < dx) {\n          err = err + dx;\n          y0 = y0 + sy;\n        }\n      }\n\n      return line;\n    }\n\n    exports.interpolate = interpolate;\n\n    function expandPath(path) {\n      var expanded = [],\n          len = path.length,\n          coord0,\n          coord1,\n          interpolated,\n          interpolatedLen,\n          i,\n          j;\n\n      if (len < 2) {\n        return expanded;\n      }\n\n      for (i = 0; i < len - 1; ++i) {\n        coord0 = path[i];\n        coord1 = path[i + 1];\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n        interpolatedLen = interpolated.length;\n\n        for (j = 0; j < interpolatedLen - 1; ++j) {\n          expanded.push(interpolated[j]);\n        }\n      }\n\n      expanded.push(path[len - 1]);\n      return expanded;\n    }\n\n    exports.expandPath = expandPath;\n\n    function smoothenPath(grid, path) {\n      var len = path.length,\n          x0 = path[0][0],\n          y0 = path[0][1],\n          x1 = path[len - 1][0],\n          y1 = path[len - 1][1],\n          sx,\n          sy,\n          ex,\n          ey,\n          newPath,\n          i,\n          j,\n          coord,\n          line,\n          testCoord,\n          blocked;\n      sx = x0;\n      sy = y0;\n      newPath = [[sx, sy]];\n\n      for (i = 2; i < len; ++i) {\n        coord = path[i];\n        ex = coord[0];\n        ey = coord[1];\n        line = interpolate(sx, sy, ex, ey);\n        blocked = false;\n\n        for (j = 1; j < line.length; ++j) {\n          testCoord = line[j];\n\n          if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n            blocked = true;\n            break;\n          }\n        }\n\n        if (blocked) {\n          lastValidCoord = path[i - 1];\n          newPath.push(lastValidCoord);\n          sx = lastValidCoord[0];\n          sy = lastValidCoord[1];\n        }\n      }\n\n      newPath.push([x1, y1]);\n      return newPath;\n    }\n\n    exports.smoothenPath = smoothenPath;\n\n    function compressPath(path) {\n      if (path.length < 3) {\n        return path;\n      }\n\n      var compressed = [],\n          sx = path[0][0],\n          sy = path[0][1],\n          px = path[1][0],\n          py = path[1][1],\n          dx = px - sx,\n          dy = py - sy,\n          lx,\n          ly,\n          ldx,\n          ldy,\n          sq,\n          i;\n      sq = Math.sqrt(dx * dx + dy * dy);\n      dx /= sq;\n      dy /= sq;\n      compressed.push([sx, sy]);\n\n      for (i = 2; i < path.length; i++) {\n        lx = px;\n        ly = py;\n        ldx = dx;\n        ldy = dy;\n        px = path[i][0];\n        py = path[i][1];\n        dx = px - lx;\n        dy = py - ly;\n        sq = Math.sqrt(dx * dx + dy * dy);\n        dx /= sq;\n        dy /= sq;\n\n        if (dx !== ldx || dy !== ldy) {\n          compressed.push([lx, ly]);\n        }\n      }\n\n      compressed.push([px, py]);\n      return compressed;\n    }\n\n    exports.compressPath = compressPath;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var PointModel = function (_super) {\n      __extends(PointModel, _super);\n\n      function PointModel(link, points) {\n        var _this = _super.call(this) || this;\n\n        _this.x = points.x;\n        _this.y = points.y;\n        _this.parent = link;\n        return _this;\n      }\n\n      PointModel.prototype.getSelectedEntities = function () {\n        if (_super.prototype.isSelected.call(this) && !this.isConnectedToPort()) {\n          return [this];\n        }\n\n        return [];\n      };\n\n      PointModel.prototype.isConnectedToPort = function () {\n        return this.parent.getPortForPoint(this) !== null;\n      };\n\n      PointModel.prototype.getLink = function () {\n        return this.getParent();\n      };\n\n      PointModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.x = ob.x;\n        this.y = ob.y;\n      };\n\n      PointModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          x: this.x,\n          y: this.y\n        });\n      };\n\n      PointModel.prototype.remove = function () {\n        if (this.parent) {\n          this.parent.removePoint(this);\n        }\n\n        _super.prototype.remove.call(this);\n      };\n\n      PointModel.prototype.updateLocation = function (points) {\n        this.x = points.x;\n        this.y = points.y;\n      };\n\n      PointModel.prototype.getX = function () {\n        return this.x;\n      };\n\n      PointModel.prototype.getY = function () {\n        return this.y;\n      };\n\n      PointModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n      };\n\n      return PointModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.PointModel = PointModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var _ = __webpack_require__(0);\n\n    var BaseModel = function (_super) {\n      __extends(BaseModel, _super);\n\n      function BaseModel(type, id) {\n        var _this = _super.call(this, id) || this;\n\n        _this.type = type;\n        _this.selected = false;\n        return _this;\n      }\n\n      BaseModel.prototype.getParent = function () {\n        return this.parent;\n      };\n\n      BaseModel.prototype.setParent = function (parent) {\n        this.parent = parent;\n      };\n\n      BaseModel.prototype.getSelectedEntities = function () {\n        if (this.isSelected()) {\n          return [this];\n        }\n\n        return [];\n      };\n\n      BaseModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.type = ob.type;\n        this.selected = ob.selected;\n      };\n\n      BaseModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          type: this.type,\n          selected: this.selected\n        });\n      };\n\n      BaseModel.prototype.getType = function () {\n        return this.type;\n      };\n\n      BaseModel.prototype.getID = function () {\n        return this.id;\n      };\n\n      BaseModel.prototype.isSelected = function () {\n        return this.selected;\n      };\n\n      BaseModel.prototype.setSelected = function (selected) {\n        if (selected === void 0) {\n          selected = true;\n        }\n\n        this.selected = selected;\n        this.iterateListeners(function (listener, event) {\n          if (listener.selectionChanged) {\n            listener.selectionChanged(__assign({}, event, {\n              isSelected: selected\n            }));\n          }\n        });\n      };\n\n      BaseModel.prototype.remove = function () {\n        this.iterateListeners(function (listener, event) {\n          if (listener.entityRemoved) {\n            listener.entityRemoved(event);\n          }\n        });\n      };\n\n      return BaseModel;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.BaseModel = BaseModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var closest = __webpack_require__(70);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var Path = __webpack_require__(51);\n\n    var Toolkit = function () {\n      function Toolkit() {}\n\n      Toolkit.UID = function () {\n        if (Toolkit.TESTING) {\n          Toolkit.TESTING_UID++;\n          return \"\" + Toolkit.TESTING_UID;\n        }\n\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n          var r = Math.random() * 16 | 0;\n          var v = c === \"x\" ? r : r & 3 | 8;\n          return v.toString(16);\n        });\n      };\n\n      Toolkit.closest = function (element, selector) {\n        if (document.body.closest) {\n          return element.closest(selector);\n        }\n\n        return closest(element, selector);\n      };\n\n      Toolkit.generateLinePath = function (firstPoint, lastPoint) {\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" L \" + lastPoint.x + \",\" + lastPoint.y;\n      };\n\n      Toolkit.generateCurvePath = function (firstPoint, lastPoint, curvy) {\n        if (curvy === void 0) {\n          curvy = 0;\n        }\n\n        var isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n        var curvyX = isHorizontal ? curvy : 0;\n        var curvyY = isHorizontal ? 0 : curvy;\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" C \" + (firstPoint.x + curvyX) + \",\" + (firstPoint.y + curvyY) + \"\\n    \" + (lastPoint.x - curvyX) + \",\" + (lastPoint.y - curvyY) + \" \" + lastPoint.x + \",\" + lastPoint.y;\n      };\n\n      Toolkit.generateDynamicPath = function (pathCoords) {\n        var path = Path();\n        path = path.moveto(pathCoords[0][0] * PathFinding_1.ROUTING_SCALING_FACTOR, pathCoords[0][1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        pathCoords.slice(1).forEach(function (coords) {\n          path = path.lineto(coords[0] * PathFinding_1.ROUTING_SCALING_FACTOR, coords[1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        });\n        return path.print();\n      };\n\n      Toolkit.TESTING = false;\n      Toolkit.TESTING_UID = 0;\n      return Toolkit;\n    }();\n\n    exports.Toolkit = Toolkit;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory = function () {\n      function AbstractFactory(name) {\n        this.type = name;\n      }\n\n      AbstractFactory.prototype.getType = function () {\n        return this.type;\n      };\n\n      return AbstractFactory;\n    }();\n\n    exports.AbstractFactory = AbstractFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel = function (_super) {\n      __extends(NodeModel, _super);\n\n      function NodeModel(nodeType, id) {\n        if (nodeType === void 0) {\n          nodeType = \"default\";\n        }\n\n        var _this = _super.call(this, nodeType, id) || this;\n\n        _this.x = 0;\n        _this.y = 0;\n        _this.extras = {};\n        _this.ports = {};\n        return _this;\n      }\n\n      NodeModel.prototype.setPosition = function (x, y) {\n        var oldX = this.x;\n        var oldY = this.y;\n\n        _.forEach(this.ports, function (port) {\n          _.forEach(port.getLinks(), function (link) {\n            var point = link.getPointForPort(port);\n            point.x = point.x + x - oldX;\n            point.y = point.y + y - oldY;\n          });\n        });\n\n        this.x = x;\n        this.y = y;\n      };\n\n      NodeModel.prototype.getSelectedEntities = function () {\n        var entities = _super.prototype.getSelectedEntities.call(this);\n\n        if (this.isSelected()) {\n          _.forEach(this.ports, function (port) {\n            entities = entities.concat(_.map(port.getLinks(), function (link) {\n              return link.getPointForPort(port);\n            }));\n          });\n        }\n\n        return entities;\n      };\n\n      NodeModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.x = ob.x;\n        this.y = ob.y;\n        this.extras = ob.extras;\n\n        _.forEach(ob.ports, function (port) {\n          var portOb = engine.getPortFactory(port.type).getNewInstance();\n          portOb.deSerialize(port, engine);\n\n          _this.addPort(portOb);\n        });\n      };\n\n      NodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          x: this.x,\n          y: this.y,\n          extras: this.extras,\n          ports: _.map(this.ports, function (port) {\n            return port.serialize();\n          })\n        });\n      };\n\n      NodeModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.ports = {};\n\n        _.forEach(this.ports, function (port) {\n          clone.addPort(port.clone(lookupTable));\n        });\n      };\n\n      NodeModel.prototype.remove = function () {\n        _super.prototype.remove.call(this);\n\n        _.forEach(this.ports, function (port) {\n          _.forEach(port.getLinks(), function (link) {\n            link.remove();\n          });\n        });\n      };\n\n      NodeModel.prototype.getPortFromID = function (id) {\n        for (var i in this.ports) {\n          if (this.ports[i].id === id) {\n            return this.ports[i];\n          }\n        }\n\n        return null;\n      };\n\n      NodeModel.prototype.getPort = function (name) {\n        return this.ports[name];\n      };\n\n      NodeModel.prototype.getPorts = function () {\n        return this.ports;\n      };\n\n      NodeModel.prototype.removePort = function (port) {\n        if (this.ports[port.name]) {\n          this.ports[port.name].setParent(null);\n          delete this.ports[port.name];\n        }\n      };\n\n      NodeModel.prototype.addPort = function (port) {\n        port.setParent(this);\n        this.ports[port.name] = port;\n        return port;\n      };\n\n      NodeModel.prototype.updateDimensions = function (_a) {\n        var width = _a.width,\n            height = _a.height;\n        this.width = width;\n        this.height = height;\n      };\n\n      return NodeModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.NodeModel = NodeModel;\n  }, function (module, exports) {\n    module.exports = {\n      manhattan: function (dx, dy) {\n        return dx + dy;\n      },\n      euclidean: function (dx, dy) {\n        return Math.sqrt(dx * dx + dy * dy);\n      },\n      octile: function (dx, dy) {\n        var F = Math.SQRT2 - 1;\n        return dx < dy ? F * dx + dy : F * dy + dx;\n      },\n      chebyshev: function (dx, dy) {\n        return Math.max(dx, dy);\n      }\n    };\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction = function () {\n      function BaseAction(mouseX, mouseY) {\n        this.mouseX = mouseX;\n        this.mouseY = mouseY;\n        this.ms = new Date().getTime();\n      }\n\n      return BaseAction;\n    }();\n\n    exports.BaseAction = BaseAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var PortModel = function (_super) {\n      __extends(PortModel, _super);\n\n      function PortModel(name, type, id, maximumLinks) {\n        var _this = _super.call(this, type, id) || this;\n\n        _this.name = name;\n        _this.links = {};\n        _this.maximumLinks = maximumLinks;\n        return _this;\n      }\n\n      PortModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.name = ob.name;\n        this.maximumLinks = ob.maximumLinks;\n      };\n\n      PortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          name: this.name,\n          parentNode: this.parent.id,\n          links: _.map(this.links, function (link) {\n            return link.id;\n          }),\n          maximumLinks: this.maximumLinks\n        });\n      };\n\n      PortModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.links = {};\n        clone.parentNode = this.getParent().clone(lookupTable);\n      };\n\n      PortModel.prototype.getNode = function () {\n        return this.getParent();\n      };\n\n      PortModel.prototype.getName = function () {\n        return this.name;\n      };\n\n      PortModel.prototype.getMaximumLinks = function () {\n        return this.maximumLinks;\n      };\n\n      PortModel.prototype.setMaximumLinks = function (maximumLinks) {\n        this.maximumLinks = maximumLinks;\n      };\n\n      PortModel.prototype.removeLink = function (link) {\n        delete this.links[link.getID()];\n      };\n\n      PortModel.prototype.addLink = function (link) {\n        this.links[link.getID()] = link;\n      };\n\n      PortModel.prototype.getLinks = function () {\n        return this.links;\n      };\n\n      PortModel.prototype.createLinkModel = function () {\n        if (_.isFinite(this.maximumLinks)) {\n          var numberOfLinks = _.size(this.links);\n\n          if (this.maximumLinks === 1 && numberOfLinks >= 1) {\n            return _.values(this.links)[0];\n          } else if (numberOfLinks >= this.maximumLinks) {\n            return null;\n          }\n        }\n\n        return null;\n      };\n\n      PortModel.prototype.updateCoords = function (_a) {\n        var x = _a.x,\n            y = _a.y,\n            width = _a.width,\n            height = _a.height;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      };\n\n      PortModel.prototype.canLinkToPort = function (port) {\n        return true;\n      };\n\n      PortModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n      };\n\n      return PortModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.PortModel = PortModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var _ = __webpack_require__(0);\n\n    var BaseEntity = function () {\n      function BaseEntity(id) {\n        this.listeners = {};\n        this.id = id || Toolkit_1.Toolkit.UID();\n        this.locked = false;\n      }\n\n      BaseEntity.prototype.getID = function () {\n        return this.id;\n      };\n\n      BaseEntity.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n      };\n\n      BaseEntity.prototype.clone = function (lookupTable) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        if (lookupTable[this.id]) {\n          return lookupTable[this.id];\n        }\n\n        var clone = _.clone(this);\n\n        clone.id = Toolkit_1.Toolkit.UID();\n        clone.clearListeners();\n        lookupTable[this.id] = clone;\n        this.doClone(lookupTable, clone);\n        return clone;\n      };\n\n      BaseEntity.prototype.clearListeners = function () {\n        this.listeners = {};\n      };\n\n      BaseEntity.prototype.deSerialize = function (data, engine) {\n        this.id = data.id;\n      };\n\n      BaseEntity.prototype.serialize = function () {\n        return {\n          id: this.id\n        };\n      };\n\n      BaseEntity.prototype.iterateListeners = function (cb) {\n        var event = {\n          id: Toolkit_1.Toolkit.UID(),\n          firing: true,\n          entity: this,\n          stopPropagation: function () {\n            event.firing = false;\n          }\n        };\n\n        for (var i in this.listeners) {\n          if (this.listeners.hasOwnProperty(i)) {\n            if (!event.firing) {\n              return;\n            }\n\n            cb(this.listeners[i], event);\n          }\n        }\n      };\n\n      BaseEntity.prototype.removeListener = function (listener) {\n        if (this.listeners[listener]) {\n          delete this.listeners[listener];\n          return true;\n        }\n\n        return false;\n      };\n\n      BaseEntity.prototype.addListener = function (listener) {\n        var uid = Toolkit_1.Toolkit.UID();\n        this.listeners[uid] = listener;\n        return uid;\n      };\n\n      BaseEntity.prototype.isLocked = function () {\n        return this.locked;\n      };\n\n      BaseEntity.prototype.setLocked = function (locked) {\n        if (locked === void 0) {\n          locked = true;\n        }\n\n        this.locked = locked;\n        this.iterateListeners(function (listener, event) {\n          if (listener.lockChanged) {\n            listener.lockChanged(__assign({}, event, {\n              locked: locked\n            }));\n          }\n        });\n      };\n\n      return BaseEntity;\n    }();\n\n    exports.BaseEntity = BaseEntity;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JumpPointFinderBase(opt) {\n      opt = opt || {};\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.trackJumpRecursion = opt.trackJumpRecursion || false;\n    }\n\n    JumpPointFinderBase.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = this.openList = new Heap(function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      }),\n          startNode = this.startNode = grid.getNodeAt(startX, startY),\n          endNode = this.endNode = grid.getNodeAt(endX, endY),\n          node;\n      this.grid = grid;\n      startNode.g = 0;\n      startNode.f = 0;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (!openList.empty()) {\n        node = openList.pop();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.expandPath(Util.backtrace(endNode));\n        }\n\n        this._identifySuccessors(node);\n      }\n\n      return [];\n    };\n\n    JumpPointFinderBase.prototype._identifySuccessors = function (node) {\n      var grid = this.grid,\n          heuristic = this.heuristic,\n          openList = this.openList,\n          endX = this.endNode.x,\n          endY = this.endNode.y,\n          neighbors,\n          neighbor,\n          jumpPoint,\n          i,\n          l,\n          x = node.x,\n          y = node.y,\n          jx,\n          jy,\n          dx,\n          dy,\n          d,\n          ng,\n          jumpNode,\n          abs = Math.abs,\n          max = Math.max;\n      neighbors = this._findNeighbors(node);\n\n      for (i = 0, l = neighbors.length; i < l; ++i) {\n        neighbor = neighbors[i];\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\n\n        if (jumpPoint) {\n          jx = jumpPoint[0];\n          jy = jumpPoint[1];\n          jumpNode = grid.getNodeAt(jx, jy);\n\n          if (jumpNode.closed) {\n            continue;\n          }\n\n          d = Heuristic.octile(abs(jx - x), abs(jy - y));\n          ng = node.g + d;\n\n          if (!jumpNode.opened || ng < jumpNode.g) {\n            jumpNode.g = ng;\n            jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\n            jumpNode.f = jumpNode.g + jumpNode.h;\n            jumpNode.parent = node;\n\n            if (!jumpNode.opened) {\n              openList.push(jumpNode);\n              jumpNode.opened = true;\n            } else {\n              openList.updateItem(jumpNode);\n            }\n          }\n        }\n      }\n    };\n\n    module.exports = JumpPointFinderBase;\n  }, function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(66);\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var PF = __webpack_require__(68);\n\n    exports.ROUTING_SCALING_FACTOR = 5;\n    var pathFinderInstance = new PF.JumpPointFinder({\n      heuristic: PF.Heuristic.manhattan,\n      diagonalMovement: PF.DiagonalMovement.Never\n    });\n\n    var PathFinding = function () {\n      function PathFinding(diagramEngine) {\n        this.instance = pathFinderInstance;\n        this.diagramEngine = diagramEngine;\n      }\n\n      PathFinding.prototype.calculateDirectPath = function (from, to) {\n        var matrix = this.diagramEngine.getCanvasMatrix();\n        var grid = new PF.Grid(matrix);\n        return pathFinderInstance.findPath(this.diagramEngine.translateRoutingX(Math.floor(from.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(from.y / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingX(Math.floor(to.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(to.y / exports.ROUTING_SCALING_FACTOR)), grid);\n      };\n\n      PathFinding.prototype.calculateLinkStartEndCoords = function (matrix, path) {\n        var startIndex = path.findIndex(function (point) {\n          return matrix[point[1]][point[0]] === 0;\n        });\n        var endIndex = path.length - 1 - path.slice().reverse().findIndex(function (point) {\n          return matrix[point[1]][point[0]] === 0;\n        });\n\n        if (startIndex === -1 || endIndex === -1) {\n          return undefined;\n        }\n\n        var pathToStart = path.slice(0, startIndex);\n        var pathToEnd = path.slice(endIndex);\n        return {\n          start: {\n            x: path[startIndex][0],\n            y: path[startIndex][1]\n          },\n          end: {\n            x: path[endIndex][0],\n            y: path[endIndex][1]\n          },\n          pathToStart: pathToStart,\n          pathToEnd: pathToEnd\n        };\n      };\n\n      PathFinding.prototype.calculateDynamicPath = function (routingMatrix, start, end, pathToStart, pathToEnd) {\n        var _this = this;\n\n        var grid = new PF.Grid(routingMatrix);\n        var dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n        var pathCoords = pathToStart.concat(dynamicPath, pathToEnd).map(function (coords) {\n          return [_this.diagramEngine.translateRoutingX(coords[0], true), _this.diagramEngine.translateRoutingY(coords[1], true)];\n        });\n        return PF.Util.compressPath(pathCoords);\n      };\n\n      return PathFinding;\n    }();\n\n    exports.default = PathFinding;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var _ = __webpack_require__(0);\n\n    var LabelModel = function (_super) {\n      __extends(LabelModel, _super);\n\n      function LabelModel(type, id) {\n        var _this = _super.call(this, type, id) || this;\n\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        return _this;\n      }\n\n      LabelModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.offsetX = ob.offsetX;\n        this.offsetY = ob.offsetY;\n      };\n\n      LabelModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          offsetX: this.offsetX,\n          offsetY: this.offsetY\n        });\n      };\n\n      return LabelModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.LabelModel = LabelModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var LabelModel_1 = __webpack_require__(17);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultLabelModel = function (_super) {\n      __extends(DefaultLabelModel, _super);\n\n      function DefaultLabelModel() {\n        var _this = _super.call(this, \"default\") || this;\n\n        _this.offsetY = -23;\n        return _this;\n      }\n\n      DefaultLabelModel.prototype.setLabel = function (label) {\n        this.label = label;\n      };\n\n      DefaultLabelModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.label = ob.label;\n      };\n\n      DefaultLabelModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          label: this.label\n        });\n      };\n\n      return DefaultLabelModel;\n    }(LabelModel_1.LabelModel);\n\n    exports.DefaultLabelModel = DefaultLabelModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var LinkModel_1 = __webpack_require__(21);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultLabelModel_1 = __webpack_require__(18);\n\n    var LabelModel_1 = __webpack_require__(17);\n\n    var DefaultLinkModel = function (_super) {\n      __extends(DefaultLinkModel, _super);\n\n      function DefaultLinkModel(type) {\n        if (type === void 0) {\n          type = \"default\";\n        }\n\n        var _this = _super.call(this, type) || this;\n\n        _this.color = \"rgba(255,255,255,0.5)\";\n        _this.width = 3;\n        _this.curvyness = 50;\n        return _this;\n      }\n\n      DefaultLinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          width: this.width,\n          color: this.color,\n          curvyness: this.curvyness\n        });\n      };\n\n      DefaultLinkModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.color = ob.color;\n        this.width = ob.width;\n        this.curvyness = ob.curvyness;\n      };\n\n      DefaultLinkModel.prototype.addLabel = function (label) {\n        if (label instanceof LabelModel_1.LabelModel) {\n          return _super.prototype.addLabel.call(this, label);\n        }\n\n        var labelOb = new DefaultLabelModel_1.DefaultLabelModel();\n        labelOb.setLabel(label);\n        return _super.prototype.addLabel.call(this, labelOb);\n      };\n\n      DefaultLinkModel.prototype.setWidth = function (width) {\n        this.width = width;\n        this.iterateListeners(function (listener, event) {\n          if (listener.widthChanged) {\n            listener.widthChanged(__assign({}, event, {\n              width: width\n            }));\n          }\n        });\n      };\n\n      DefaultLinkModel.prototype.setColor = function (color) {\n        this.color = color;\n        this.iterateListeners(function (listener, event) {\n          if (listener.colorChanged) {\n            listener.colorChanged(__assign({}, event, {\n              color: color\n            }));\n          }\n        });\n      };\n\n      return DefaultLinkModel;\n    }(LinkModel_1.LinkModel);\n\n    exports.DefaultLinkModel = DefaultLinkModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _ = __webpack_require__(0);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var DefaultLinkModel_1 = __webpack_require__(19);\n\n    var DefaultPortModel = function (_super) {\n      __extends(DefaultPortModel, _super);\n\n      function DefaultPortModel(isInput, name, label, id) {\n        if (label === void 0) {\n          label = null;\n        }\n\n        var _this = _super.call(this, name, \"default\", id) || this;\n\n        _this.in = isInput;\n        _this.label = label || name;\n        return _this;\n      }\n\n      DefaultPortModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n\n        this.in = object.in;\n        this.label = object.label;\n      };\n\n      DefaultPortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          in: this.in,\n          label: this.label\n        });\n      };\n\n      DefaultPortModel.prototype.link = function (port) {\n        var link = this.createLinkModel();\n        link.setSourcePort(this);\n        link.setTargetPort(port);\n        return link;\n      };\n\n      DefaultPortModel.prototype.canLinkToPort = function (port) {\n        if (port instanceof DefaultPortModel) {\n          return this.in !== port.in;\n        }\n\n        return true;\n      };\n\n      DefaultPortModel.prototype.createLinkModel = function () {\n        var link = _super.prototype.createLinkModel.call(this);\n\n        return link || new DefaultLinkModel_1.DefaultLinkModel();\n      };\n\n      return DefaultPortModel;\n    }(PortModel_1.PortModel);\n\n    exports.DefaultPortModel = DefaultPortModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseModel_1 = __webpack_require__(6);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var _ = __webpack_require__(0);\n\n    var LinkModel = function (_super) {\n      __extends(LinkModel, _super);\n\n      function LinkModel(linkType, id) {\n        if (linkType === void 0) {\n          linkType = \"default\";\n        }\n\n        var _this = _super.call(this, linkType, id) || this;\n\n        _this.points = [new PointModel_1.PointModel(_this, {\n          x: 0,\n          y: 0\n        }), new PointModel_1.PointModel(_this, {\n          x: 0,\n          y: 0\n        })];\n        _this.extras = {};\n        _this.sourcePort = null;\n        _this.targetPort = null;\n        _this.labels = [];\n        return _this;\n      }\n\n      LinkModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n\n        _super.prototype.deSerialize.call(this, ob, engine);\n\n        this.extras = ob.extras;\n        this.points = _.map(ob.points || [], function (point) {\n          var p = new PointModel_1.PointModel(_this, {\n            x: point.x,\n            y: point.y\n          });\n          p.deSerialize(point, engine);\n          return p;\n        });\n\n        _.forEach(ob.labels || [], function (label) {\n          var labelOb = engine.getLabelFactory(label.type).getNewInstance();\n          labelOb.deSerialize(label, engine);\n\n          _this.addLabel(labelOb);\n        });\n\n        if (ob.target) {\n          this.setTargetPort(this.getParent().getNode(ob.target).getPortFromID(ob.targetPort));\n        }\n\n        if (ob.source) {\n          this.setSourcePort(this.getParent().getNode(ob.source).getPortFromID(ob.sourcePort));\n        }\n      };\n\n      LinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          source: this.sourcePort ? this.sourcePort.getParent().id : null,\n          sourcePort: this.sourcePort ? this.sourcePort.id : null,\n          target: this.targetPort ? this.targetPort.getParent().id : null,\n          targetPort: this.targetPort ? this.targetPort.id : null,\n          points: _.map(this.points, function (point) {\n            return point.serialize();\n          }),\n          extras: this.extras,\n          labels: _.map(this.labels, function (label) {\n            return label.serialize();\n          })\n        });\n      };\n\n      LinkModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) {\n          lookupTable = {};\n        }\n\n        clone.setPoints(_.map(this.getPoints(), function (point) {\n          return point.clone(lookupTable);\n        }));\n\n        if (this.sourcePort) {\n          clone.setSourcePort(this.sourcePort.clone(lookupTable));\n        }\n\n        if (this.targetPort) {\n          clone.setTargetPort(this.targetPort.clone(lookupTable));\n        }\n      };\n\n      LinkModel.prototype.remove = function () {\n        if (this.sourcePort) {\n          this.sourcePort.removeLink(this);\n        }\n\n        if (this.targetPort) {\n          this.targetPort.removeLink(this);\n        }\n\n        _super.prototype.remove.call(this);\n      };\n\n      LinkModel.prototype.isLastPoint = function (point) {\n        var index = this.getPointIndex(point);\n        return index === this.points.length - 1;\n      };\n\n      LinkModel.prototype.getPointIndex = function (point) {\n        return this.points.indexOf(point);\n      };\n\n      LinkModel.prototype.getPointModel = function (id) {\n        for (var i = 0; i < this.points.length; i++) {\n          if (this.points[i].id === id) {\n            return this.points[i];\n          }\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getPortForPoint = function (point) {\n        if (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n          return this.sourcePort;\n        }\n\n        if (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n          return this.targetPort;\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getPointForPort = function (port) {\n        if (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n          return this.getFirstPoint();\n        }\n\n        if (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n          return this.getLastPoint();\n        }\n\n        return null;\n      };\n\n      LinkModel.prototype.getFirstPoint = function () {\n        return this.points[0];\n      };\n\n      LinkModel.prototype.getLastPoint = function () {\n        return this.points[this.points.length - 1];\n      };\n\n      LinkModel.prototype.setSourcePort = function (port) {\n        if (port !== null) {\n          port.addLink(this);\n        }\n\n        if (this.sourcePort !== null) {\n          this.sourcePort.removeLink(this);\n        }\n\n        this.sourcePort = port;\n        this.iterateListeners(function (listener, event) {\n          if (listener.sourcePortChanged) {\n            listener.sourcePortChanged(__assign({}, event, {\n              port: port\n            }));\n          }\n        });\n      };\n\n      LinkModel.prototype.getSourcePort = function () {\n        return this.sourcePort;\n      };\n\n      LinkModel.prototype.getTargetPort = function () {\n        return this.targetPort;\n      };\n\n      LinkModel.prototype.setTargetPort = function (port) {\n        if (port !== null) {\n          port.addLink(this);\n        }\n\n        if (this.targetPort !== null) {\n          this.targetPort.removeLink(this);\n        }\n\n        this.targetPort = port;\n        this.iterateListeners(function (listener, event) {\n          if (listener.targetPortChanged) {\n            listener.targetPortChanged(__assign({}, event, {\n              port: port\n            }));\n          }\n        });\n      };\n\n      LinkModel.prototype.point = function (x, y) {\n        return this.addPoint(this.generatePoint(x, y));\n      };\n\n      LinkModel.prototype.addLabel = function (label) {\n        label.setParent(this);\n        this.labels.push(label);\n      };\n\n      LinkModel.prototype.getPoints = function () {\n        return this.points;\n      };\n\n      LinkModel.prototype.setPoints = function (points) {\n        var _this = this;\n\n        _.forEach(points, function (point) {\n          point.setParent(_this);\n        });\n\n        this.points = points;\n      };\n\n      LinkModel.prototype.removePoint = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel), 1);\n      };\n\n      LinkModel.prototype.removePointsBefore = function (pointModel) {\n        this.points.splice(0, this.getPointIndex(pointModel));\n      };\n\n      LinkModel.prototype.removePointsAfter = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel) + 1);\n      };\n\n      LinkModel.prototype.removeMiddlePoints = function () {\n        if (this.points.length > 2) {\n          this.points.splice(0, this.points.length - 2);\n        }\n      };\n\n      LinkModel.prototype.addPoint = function (pointModel, index) {\n        if (index === void 0) {\n          index = 1;\n        }\n\n        pointModel.setParent(this);\n        this.points.splice(index, 0, pointModel);\n        return pointModel;\n      };\n\n      LinkModel.prototype.generatePoint = function (x, y) {\n        if (x === void 0) {\n          x = 0;\n        }\n\n        if (y === void 0) {\n          y = 0;\n        }\n\n        return new PointModel_1.PointModel(this, {\n          x: x,\n          y: y\n        });\n      };\n\n      return LinkModel;\n    }(BaseModel_1.BaseModel);\n\n    exports.LinkModel = LinkModel;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BiAStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    BiAStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var cmp = function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      },\n          startOpenList = new Heap(cmp),\n          endOpenList = new Heap(cmp),\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          heuristic = this.heuristic,\n          diagonalMovement = this.diagonalMovement,\n          weight = this.weight,\n          abs = Math.abs,\n          SQRT2 = Math.SQRT2,\n          node,\n          neighbors,\n          neighbor,\n          i,\n          l,\n          x,\n          y,\n          ng,\n          BY_START = 1,\n          BY_END = 2;\n\n      startNode.g = 0;\n      startNode.f = 0;\n      startOpenList.push(startNode);\n      startNode.opened = BY_START;\n      endNode.g = 0;\n      endNode.f = 0;\n      endOpenList.push(endNode);\n      endNode.opened = BY_END;\n\n      while (!startOpenList.empty() && !endOpenList.empty()) {\n        node = startOpenList.pop();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened === BY_END) {\n            return Util.biBacktrace(node, neighbor);\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              startOpenList.push(neighbor);\n              neighbor.opened = BY_START;\n            } else {\n              startOpenList.updateItem(neighbor);\n            }\n          }\n        }\n\n        node = endOpenList.pop();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened === BY_START) {\n            return Util.biBacktrace(neighbor, node);\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - startX), abs(y - startY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              endOpenList.push(neighbor);\n              neighbor.opened = BY_END;\n            } else {\n              endOpenList.updateItem(neighbor);\n            }\n          }\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BiAStarFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Heap = __webpack_require__(15);\n\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function AStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    AStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = new Heap(function (nodeA, nodeB) {\n        return nodeA.f - nodeB.f;\n      }),\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          heuristic = this.heuristic,\n          diagonalMovement = this.diagonalMovement,\n          weight = this.weight,\n          abs = Math.abs,\n          SQRT2 = Math.SQRT2,\n          node,\n          neighbors,\n          neighbor,\n          i,\n          l,\n          x,\n          y,\n          ng;\n      startNode.g = 0;\n      startNode.f = 0;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (!openList.empty()) {\n        node = openList.pop();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.backtrace(endNode);\n        }\n\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          x = neighbor.x;\n          y = neighbor.y;\n          ng = node.g + (x - node.x === 0 || y - node.y === 0 ? 1 : SQRT2);\n\n          if (!neighbor.opened || ng < neighbor.g) {\n            neighbor.g = ng;\n            neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\n            neighbor.f = neighbor.g + neighbor.h;\n            neighbor.parent = node;\n\n            if (!neighbor.opened) {\n              openList.push(neighbor);\n              neighbor.opened = true;\n            } else {\n              openList.updateItem(neighbor);\n            }\n          }\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = AStarFinder;\n  }, function (module, exports) {\n    function Node(x, y, walkable) {\n      this.x = x;\n      this.y = y;\n      this.walkable = walkable === undefined ? true : walkable;\n    }\n\n    module.exports = Node;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var NodeWidget = function (_super) {\n      __extends(NodeWidget, _super);\n\n      function NodeWidget(props) {\n        var _this = _super.call(this, \"srd-node\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      NodeWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.node);\n      };\n\n      NodeWidget.prototype.getClassName = function () {\n        return \"node \" + _super.prototype.getClassName.call(this) + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n      };\n\n      NodeWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          \"data-nodeid\": this.props.node.id,\n          style: {\n            top: this.props.node.y,\n            left: this.props.node.x\n          }\n        }), this.props.children);\n      };\n\n      return NodeWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.NodeWidget = NodeWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var NodeWidget_1 = __webpack_require__(25);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var NodeLayerWidget = function (_super) {\n      __extends(NodeLayerWidget, _super);\n\n      function NodeLayerWidget(props) {\n        var _this = _super.call(this, \"srd-node-layer\", props) || this;\n\n        _this.updateNodeDimensions = function () {\n          if (!_this.props.diagramEngine.nodesRendered) {\n            var diagramModel = _this.props.diagramEngine.getDiagramModel();\n\n            _.map(diagramModel.getNodes(), function (node) {\n              node.updateDimensions(_this.props.diagramEngine.getNodeDimensions(node));\n            });\n          }\n        };\n\n        _this.state = {};\n        return _this;\n      }\n\n      NodeLayerWidget.prototype.componentDidUpdate = function () {\n        this.updateNodeDimensions();\n        this.props.diagramEngine.nodesRendered = true;\n      };\n\n      NodeLayerWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          style: {\n            transform: \"translate(\" + diagramModel.getOffsetX() + \"px,\" + diagramModel.getOffsetY() + \"px) scale(\" + diagramModel.getZoomLevel() / 100 + \")\"\n          }\n        }), _.map(diagramModel.getNodes(), function (node) {\n          return React.createElement(NodeWidget_1.NodeWidget, {\n            diagramEngine: _this.props.diagramEngine,\n            key: node.id,\n            node: node\n          }, _this.props.diagramEngine.generateWidgetForNode(node));\n        }));\n      };\n\n      return NodeLayerWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.NodeLayerWidget = NodeLayerWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var LinkWidget = function (_super) {\n      __extends(LinkWidget, _super);\n\n      function LinkWidget(props) {\n        var _this = _super.call(this, \"srd-link\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      LinkWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.link);\n      };\n\n      LinkWidget.prototype.render = function () {\n        return this.props.children;\n      };\n\n      return LinkWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.LinkWidget = LinkWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var LinkWidget_1 = __webpack_require__(27);\n\n    var _ = __webpack_require__(0);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var LinkLayerWidget = function (_super) {\n      __extends(LinkLayerWidget, _super);\n\n      function LinkLayerWidget(props) {\n        var _this = _super.call(this, \"srd-link-layer\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      LinkLayerWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return React.createElement(\"svg\", __assign({}, this.getProps(), {\n          style: {\n            transform: \"translate(\" + diagramModel.getOffsetX() + \"px,\" + diagramModel.getOffsetY() + \"px) scale(\" + diagramModel.getZoomLevel() / 100 + \")\"\n          }\n        }), this.props.diagramEngine.canvas && _.map(diagramModel.getLinks(), function (link) {\n          if (_this.props.diagramEngine.nodesRendered && !_this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]) {\n            if (link.sourcePort !== null) {\n              try {\n                var portCenter = _this.props.diagramEngine.getPortCenter(link.sourcePort);\n\n                link.points[0].updateLocation(portCenter);\n\n                var portCoords = _this.props.diagramEngine.getPortCoords(link.sourcePort);\n\n                link.sourcePort.updateCoords(portCoords);\n                _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n              } catch (ignore) {}\n            }\n\n            if (link.targetPort !== null) {\n              try {\n                var portCenter = _this.props.diagramEngine.getPortCenter(link.targetPort);\n\n                _.last(link.points).updateLocation(portCenter);\n\n                var portCoords = _this.props.diagramEngine.getPortCoords(link.targetPort);\n\n                link.targetPort.updateCoords(portCoords);\n                _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n              } catch (ignore) {}\n            }\n          }\n\n          var generatedLink = _this.props.diagramEngine.generateWidgetForLink(link);\n\n          if (!generatedLink) {\n            throw new Error(\"no link generated for type: \" + link.getType());\n          }\n\n          return React.createElement(LinkWidget_1.LinkWidget, {\n            key: link.getID(),\n            link: link,\n            diagramEngine: _this.props.diagramEngine\n          }, React.cloneElement(generatedLink, {\n            pointAdded: _this.props.pointAdded\n          }));\n        }));\n      };\n\n      return LinkLayerWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.LinkLayerWidget = LinkLayerWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var SelectingAction = function (_super) {\n      __extends(SelectingAction, _super);\n\n      function SelectingAction(mouseX, mouseY) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.mouseX2 = mouseX;\n        _this.mouseY2 = mouseY;\n        return _this;\n      }\n\n      SelectingAction.prototype.getBoxDimensions = function () {\n        return {\n          left: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n          top: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n          width: Math.abs(this.mouseX2 - this.mouseX),\n          height: Math.abs(this.mouseY2 - this.mouseY),\n          right: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n          bottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n        };\n      };\n\n      SelectingAction.prototype.containsElement = function (x, y, diagramModel) {\n        var z = diagramModel.getZoomLevel() / 100;\n        var dimensions = this.getBoxDimensions();\n        return x * z + diagramModel.getOffsetX() > dimensions.left && x * z + diagramModel.getOffsetX() < dimensions.right && y * z + diagramModel.getOffsetY() > dimensions.top && y * z + diagramModel.getOffsetY() < dimensions.bottom;\n      };\n\n      return SelectingAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.SelectingAction = SelectingAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var MoveItemsAction = function (_super) {\n      __extends(MoveItemsAction, _super);\n\n      function MoveItemsAction(mouseX, mouseY, diagramEngine) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.moved = false;\n        diagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n        var selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n        selectedItems = selectedItems.filter(function (item) {\n          return !diagramEngine.isModelLocked(item);\n        });\n        _this.selectionModels = selectedItems.map(function (item) {\n          return {\n            model: item,\n            initialX: item.x,\n            initialY: item.y\n          };\n        });\n        return _this;\n      }\n\n      return MoveItemsAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.MoveItemsAction = MoveItemsAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseAction_1 = __webpack_require__(11);\n\n    var MoveCanvasAction = function (_super) {\n      __extends(MoveCanvasAction, _super);\n\n      function MoveCanvasAction(mouseX, mouseY, diagramModel) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n\n        _this.initialOffsetX = diagramModel.getOffsetX();\n        _this.initialOffsetY = diagramModel.getOffsetY();\n        return _this;\n      }\n\n      return MoveCanvasAction;\n    }(BaseAction_1.BaseAction);\n\n    exports.MoveCanvasAction = MoveCanvasAction;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractNodeFactory = function (_super) {\n      __extends(AbstractNodeFactory, _super);\n\n      function AbstractNodeFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractNodeFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractNodeFactory = AbstractNodeFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var PortWidget = function (_super) {\n      __extends(PortWidget, _super);\n\n      function PortWidget(props) {\n        var _this = _super.call(this, \"srd-port\", props) || this;\n\n        _this.state = {\n          selected: false\n        };\n        return _this;\n      }\n\n      PortWidget.prototype.getClassName = function () {\n        return \"port \" + _super.prototype.getClassName.call(this) + (this.state.selected ? this.bem(\"--selected\") : \"\");\n      };\n\n      PortWidget.prototype.render = function () {\n        var _this = this;\n\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          \"data-name\": this.props.name,\n          \"data-nodeid\": this.props.node.getID()\n        }));\n      };\n\n      return PortWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.PortWidget = PortWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var PortWidget_1 = __webpack_require__(33);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultPortLabel = function (_super) {\n      __extends(DefaultPortLabel, _super);\n\n      function DefaultPortLabel(props) {\n        return _super.call(this, \"srd-default-port\", props) || this;\n      }\n\n      DefaultPortLabel.prototype.getClassName = function () {\n        return _super.prototype.getClassName.call(this) + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n      };\n\n      DefaultPortLabel.prototype.render = function () {\n        var port = React.createElement(PortWidget_1.PortWidget, {\n          node: this.props.model.getParent(),\n          name: this.props.model.name\n        });\n        var label = React.createElement(\"div\", {\n          className: \"name\"\n        }, this.props.model.label);\n        return React.createElement(\"div\", __assign({}, this.getProps()), this.props.model.in ? port : label, this.props.model.in ? label : port);\n      };\n\n      return DefaultPortLabel;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultPortLabel = DefaultPortLabel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var DefaultPortLabelWidget_1 = __webpack_require__(34);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultNodeWidget = function (_super) {\n      __extends(DefaultNodeWidget, _super);\n\n      function DefaultNodeWidget(props) {\n        var _this = _super.call(this, \"srd-default-node\", props) || this;\n\n        _this.state = {};\n        return _this;\n      }\n\n      DefaultNodeWidget.prototype.generatePort = function (port) {\n        return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, {\n          model: port,\n          key: port.id\n        });\n      };\n\n      DefaultNodeWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          style: {\n            background: this.props.node.color\n          }\n        }), React.createElement(\"div\", {\n          className: this.bem(\"__title\")\n        }, React.createElement(\"div\", {\n          className: this.bem(\"__name\")\n        }, this.props.node.name)), React.createElement(\"div\", {\n          className: this.bem(\"__ports\")\n        }, React.createElement(\"div\", {\n          className: this.bem(\"__in\")\n        }, _.map(this.props.node.getInPorts(), this.generatePort.bind(this))), React.createElement(\"div\", {\n          className: this.bem(\"__out\")\n        }, _.map(this.props.node.getOutPorts(), this.generatePort.bind(this)))));\n      };\n\n      return DefaultNodeWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultNodeWidget = DefaultNodeWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractLinkFactory = function (_super) {\n      __extends(AbstractLinkFactory, _super);\n\n      function AbstractLinkFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractLinkFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractLinkFactory = AbstractLinkFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var _ = __webpack_require__(0);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultLinkWidget = function (_super) {\n      __extends(DefaultLinkWidget, _super);\n\n      function DefaultLinkWidget(props) {\n        var _this = _super.call(this, \"srd-default-link\", props) || this;\n\n        _this.addPointToLink = function (event, index) {\n          if (!event.shiftKey && !_this.props.diagramEngine.isModelLocked(_this.props.link) && _this.props.link.points.length - 1 <= _this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n            var point = new PointModel_1.PointModel(_this.props.link, _this.props.diagramEngine.getRelativeMousePoint(event));\n            point.setSelected(true);\n\n            _this.forceUpdate();\n\n            _this.props.link.addPoint(point, index);\n\n            _this.props.pointAdded(point, event);\n          }\n        };\n\n        _this.findPathAndRelativePositionToRenderLabel = function (index) {\n          var lengths = _this.refPaths.map(function (path) {\n            return path.getTotalLength();\n          });\n\n          var labelPosition = lengths.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue;\n          }, 0) * (index / (_this.props.link.labels.length + 1));\n          var pathIndex = 0;\n\n          while (pathIndex < _this.refPaths.length) {\n            if (labelPosition - lengths[pathIndex] < 0) {\n              return {\n                path: _this.refPaths[pathIndex],\n                position: labelPosition\n              };\n            }\n\n            labelPosition -= lengths[pathIndex];\n            pathIndex++;\n          }\n        };\n\n        _this.calculateLabelPosition = function (label, index) {\n          if (!_this.refLabels[label.id]) {\n            return;\n          }\n\n          var _a = _this.findPathAndRelativePositionToRenderLabel(index),\n              path = _a.path,\n              position = _a.position;\n\n          var labelDimensions = {\n            width: _this.refLabels[label.id].offsetWidth,\n            height: _this.refLabels[label.id].offsetHeight\n          };\n          var pathCentre = path.getPointAtLength(position);\n          var labelCoordinates = {\n            x: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n            y: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n          };\n\n          _this.refLabels[label.id].setAttribute(\"style\", \"transform: translate(\" + labelCoordinates.x + \"px, \" + labelCoordinates.y + \"px);\");\n        };\n\n        _this.refLabels = {};\n        _this.refPaths = [];\n        _this.state = {\n          selected: false\n        };\n\n        if (props.diagramEngine.isSmartRoutingEnabled()) {\n          _this.pathFinding = new PathFinding_1.default(_this.props.diagramEngine);\n        }\n\n        return _this;\n      }\n\n      DefaultLinkWidget.prototype.calculateAllLabelPosition = function () {\n        var _this = this;\n\n        _.forEach(this.props.link.labels, function (label, index) {\n          _this.calculateLabelPosition(label, index + 1);\n        });\n      };\n\n      DefaultLinkWidget.prototype.componentDidUpdate = function () {\n        if (this.props.link.labels.length > 0) {\n          window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n      };\n\n      DefaultLinkWidget.prototype.componentDidMount = function () {\n        if (this.props.link.labels.length > 0) {\n          window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n      };\n\n      DefaultLinkWidget.prototype.generatePoint = function (pointIndex) {\n        var _this = this;\n\n        var x = this.props.link.points[pointIndex].x;\n        var y = this.props.link.points[pointIndex].y;\n        return React.createElement(\"g\", {\n          key: \"point-\" + this.props.link.points[pointIndex].id\n        }, React.createElement(\"circle\", {\n          cx: x,\n          cy: y,\n          r: 5,\n          className: \"point \" + this.bem(\"__point\") + (this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\")\n        }), React.createElement(\"circle\", {\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          \"data-id\": this.props.link.points[pointIndex].id,\n          \"data-linkid\": this.props.link.id,\n          cx: x,\n          cy: y,\n          r: 15,\n          opacity: 0,\n          className: \"point \" + this.bem(\"__point\")\n        }));\n      };\n\n      DefaultLinkWidget.prototype.generateLabel = function (label) {\n        var _this = this;\n\n        var canvas = this.props.diagramEngine.canvas;\n        return React.createElement(\"foreignObject\", {\n          key: label.id,\n          className: this.bem(\"__label\"),\n          width: canvas.offsetWidth,\n          height: canvas.offsetHeight\n        }, React.createElement(\"div\", {\n          ref: function (ref) {\n            return _this.refLabels[label.id] = ref;\n          }\n        }, this.props.diagramEngine.getFactoryForLabel(label).generateReactWidget(this.props.diagramEngine, label)));\n      };\n\n      DefaultLinkWidget.prototype.generateLink = function (path, extraProps, id) {\n        var _this = this;\n\n        var props = this.props;\n        var Bottom = React.cloneElement(props.diagramEngine.getFactoryForLink(this.props.link).generateLinkSegment(this.props.link, this, this.state.selected || this.props.link.isSelected(), path), {\n          ref: function (ref) {\n            return ref && _this.refPaths.push(ref);\n          }\n        });\n        var Top = React.cloneElement(Bottom, __assign({}, extraProps, {\n          strokeLinecap: \"round\",\n          onMouseLeave: function () {\n            _this.setState({\n              selected: false\n            });\n          },\n          onMouseEnter: function () {\n            _this.setState({\n              selected: true\n            });\n          },\n          ref: null,\n          \"data-linkid\": this.props.link.getID(),\n          strokeOpacity: this.state.selected ? .1 : 0,\n          strokeWidth: 20,\n          onContextMenu: function () {\n            if (!_this.props.diagramEngine.isModelLocked(_this.props.link)) {\n              event.preventDefault();\n\n              _this.props.link.remove();\n            }\n          }\n        }));\n        return React.createElement(\"g\", {\n          key: \"link-\" + id\n        }, Bottom, Top);\n      };\n\n      DefaultLinkWidget.prototype.isSmartRoutingApplicable = function () {\n        var _a = this.props,\n            diagramEngine = _a.diagramEngine,\n            link = _a.link;\n\n        if (!diagramEngine.isSmartRoutingEnabled()) {\n          return false;\n        }\n\n        if (link.points.length !== 2) {\n          return false;\n        }\n\n        if (link.sourcePort === null || link.targetPort === null) {\n          return false;\n        }\n\n        return true;\n      };\n\n      DefaultLinkWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n\n        if (!diagramEngine.nodesRendered) {\n          return null;\n        }\n\n        var points = this.props.link.points;\n        var paths = [];\n\n        if (this.isSmartRoutingApplicable()) {\n          var directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n          var routingMatrix = diagramEngine.getRoutingMatrix();\n          var smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n\n          if (smartLink) {\n            var start = smartLink.start,\n                end = smartLink.end,\n                pathToStart = smartLink.pathToStart,\n                pathToEnd = smartLink.pathToEnd;\n            var simplifiedPath = this.pathFinding.calculateDynamicPath(routingMatrix, start, end, pathToStart, pathToEnd);\n            paths.push(this.generateLink(Toolkit_1.Toolkit.generateDynamicPath(simplifiedPath), {\n              onMouseDown: function (event) {\n                _this.addPointToLink(event, 1);\n              }\n            }, \"0\"));\n          }\n        }\n\n        if (paths.length === 0) {\n          if (points.length === 2) {\n            var isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n            var xOrY = isHorizontal ? \"x\" : \"y\";\n            var margin = 50;\n\n            if (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n              margin = 5;\n            }\n\n            var pointLeft = points[0];\n            var pointRight = points[1];\n\n            if (pointLeft[xOrY] > pointRight[xOrY]) {\n              pointLeft = points[1];\n              pointRight = points[0];\n            }\n\n            paths.push(this.generateLink(Toolkit_1.Toolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness), {\n              onMouseDown: function (event) {\n                _this.addPointToLink(event, 1);\n              }\n            }, \"0\"));\n\n            if (this.props.link.targetPort === null) {\n              paths.push(this.generatePoint(1));\n            }\n          } else {\n            var _loop_1 = function (j) {\n              paths.push(this_1.generateLink(Toolkit_1.Toolkit.generateLinePath(points[j], points[j + 1]), {\n                \"data-linkid\": this_1.props.link.id,\n                \"data-point\": j,\n                onMouseDown: function (event) {\n                  _this.addPointToLink(event, j + 1);\n                }\n              }, j));\n            };\n\n            var this_1 = this;\n\n            for (var j = 0; j < points.length - 1; j++) {\n              _loop_1(j);\n            }\n\n            for (var i = 1; i < points.length - 1; i++) {\n              paths.push(this.generatePoint(i));\n            }\n\n            if (this.props.link.targetPort === null) {\n              paths.push(this.generatePoint(points.length - 1));\n            }\n          }\n        }\n\n        this.refPaths = [];\n        return React.createElement(\"g\", __assign({}, this.getProps()), paths, _.map(this.props.link.labels, function (labelModel) {\n          return _this.generateLabel(labelModel);\n        }));\n      };\n\n      DefaultLinkWidget.defaultProps = {\n        color: \"black\",\n        width: 3,\n        link: null,\n        engine: null,\n        smooth: false,\n        diagramEngine: null\n      };\n      return DefaultLinkWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultLinkWidget = DefaultLinkWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultPortModel_1 = __webpack_require__(20);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var DefaultNodeModel = function (_super) {\n      __extends(DefaultNodeModel, _super);\n\n      function DefaultNodeModel(name, color) {\n        if (name === void 0) {\n          name = \"Untitled\";\n        }\n\n        if (color === void 0) {\n          color = \"rgb(0,192,255)\";\n        }\n\n        var _this = _super.call(this, \"default\") || this;\n\n        _this.name = name;\n        _this.color = color;\n        return _this;\n      }\n\n      DefaultNodeModel.prototype.addInPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(true, Toolkit_1.Toolkit.UID(), label));\n      };\n\n      DefaultNodeModel.prototype.addOutPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(false, Toolkit_1.Toolkit.UID(), label));\n      };\n\n      DefaultNodeModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n\n        this.name = object.name;\n        this.color = object.color;\n      };\n\n      DefaultNodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n          name: this.name,\n          color: this.color\n        });\n      };\n\n      DefaultNodeModel.prototype.getInPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n          return portModel.in;\n        });\n      };\n\n      DefaultNodeModel.prototype.getOutPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n          return !portModel.in;\n        });\n      };\n\n      return DefaultNodeModel;\n    }(NodeModel_1.NodeModel);\n\n    exports.DefaultNodeModel = DefaultNodeModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DefaultLabelWidget = function (_super) {\n      __extends(DefaultLabelWidget, _super);\n\n      function DefaultLabelWidget(props) {\n        return _super.call(this, \"srd-default-label\", props) || this;\n      }\n\n      DefaultLabelWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps()), this.props.model.label);\n      };\n\n      return DefaultLabelWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DefaultLabelWidget = DefaultLabelWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractLabelFactory = function (_super) {\n      __extends(AbstractLabelFactory, _super);\n\n      function AbstractLabelFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractLabelFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractLabelFactory = AbstractLabelFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var AbstractLabelFactory_1 = __webpack_require__(40);\n\n    var DefaultLabelModel_1 = __webpack_require__(18);\n\n    var DefaultLabelWidget_1 = __webpack_require__(39);\n\n    var DefaultLabelFactory = function (_super) {\n      __extends(DefaultLabelFactory, _super);\n\n      function DefaultLabelFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultLabelFactory.prototype.generateReactWidget = function (diagramEngine, label) {\n        return React.createElement(DefaultLabelWidget_1.DefaultLabelWidget, {\n          model: label\n        });\n      };\n\n      DefaultLabelFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLabelModel_1.DefaultLabelModel();\n      };\n\n      return DefaultLabelFactory;\n    }(AbstractLabelFactory_1.AbstractLabelFactory);\n\n    exports.DefaultLabelFactory = DefaultLabelFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var AbstractFactory_1 = __webpack_require__(8);\n\n    var AbstractPortFactory = function (_super) {\n      __extends(AbstractPortFactory, _super);\n\n      function AbstractPortFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n      }\n\n      return AbstractPortFactory;\n    }(AbstractFactory_1.AbstractFactory);\n\n    exports.AbstractPortFactory = AbstractPortFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultPortModel_1 = __webpack_require__(20);\n\n    var AbstractPortFactory_1 = __webpack_require__(42);\n\n    var DefaultPortFactory = function (_super) {\n      __extends(DefaultPortFactory, _super);\n\n      function DefaultPortFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultPortFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultPortModel_1.DefaultPortModel(true, \"unknown\");\n      };\n\n      return DefaultPortFactory;\n    }(AbstractPortFactory_1.AbstractPortFactory);\n\n    exports.DefaultPortFactory = DefaultPortFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var _ = __webpack_require__(0);\n\n    var LinkModel_1 = __webpack_require__(21);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var DiagramModel = function (_super) {\n      __extends(DiagramModel, _super);\n\n      function DiagramModel() {\n        var _this = _super.call(this) || this;\n\n        _this.links = {};\n        _this.nodes = {};\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        _this.zoom = 100;\n        _this.rendered = false;\n        _this.gridSize = 0;\n        return _this;\n      }\n\n      DiagramModel.prototype.setGridSize = function (size) {\n        if (size === void 0) {\n          size = 0;\n        }\n\n        this.gridSize = size;\n        this.iterateListeners(function (listener, event) {\n          if (listener.gridUpdated) {\n            listener.gridUpdated(__assign({}, event, {\n              size: size\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getGridPosition = function (pos) {\n        if (this.gridSize === 0) {\n          return pos;\n        }\n\n        return this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n      };\n\n      DiagramModel.prototype.deSerializeDiagram = function (object, diagramEngine) {\n        var _this = this;\n\n        this.deSerialize(object, diagramEngine);\n        this.offsetX = object.offsetX;\n        this.offsetY = object.offsetY;\n        this.zoom = object.zoom;\n        this.gridSize = object.gridSize;\n\n        _.forEach(object.nodes, function (node) {\n          var nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n          nodeOb.setParent(_this);\n          nodeOb.deSerialize(node, diagramEngine);\n\n          _this.addNode(nodeOb);\n        });\n\n        _.forEach(object.links, function (link) {\n          var linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n          linkOb.setParent(_this);\n          linkOb.deSerialize(link, diagramEngine);\n\n          _this.addLink(linkOb);\n        });\n      };\n\n      DiagramModel.prototype.serializeDiagram = function () {\n        return _.merge(this.serialize(), {\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          zoom: this.zoom,\n          gridSize: this.gridSize,\n          links: _.map(this.links, function (link) {\n            return link.serialize();\n          }),\n          nodes: _.map(this.nodes, function (node) {\n            return node.serialize();\n          })\n        });\n      };\n\n      DiagramModel.prototype.clearSelection = function (ignore) {\n        if (ignore === void 0) {\n          ignore = null;\n        }\n\n        _.forEach(this.getSelectedItems(), function (element) {\n          if (ignore && ignore.getID() === element.getID()) {\n            return;\n          }\n\n          element.setSelected(false);\n        });\n      };\n\n      DiagramModel.prototype.getSelectedItems = function () {\n        var filters = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          filters[_i] = arguments[_i];\n        }\n\n        if (!Array.isArray(filters)) {\n          filters = [filters];\n        }\n\n        var items = [];\n        items = items.concat(_.flatMap(this.nodes, function (node) {\n          return node.getSelectedEntities();\n        }));\n        items = items.concat(_.flatMap(this.links, function (link) {\n          return link.getSelectedEntities();\n        }));\n        items = items.concat(_.flatMap(this.links, function (link) {\n          return _.flatMap(link.points, function (point) {\n            return point.getSelectedEntities();\n          });\n        }));\n        items = _.uniq(items);\n\n        if (filters.length > 0) {\n          items = _.filter(_.uniq(items), function (item) {\n            if (_.includes(filters, \"node\") && item instanceof NodeModel_1.NodeModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"link\") && item instanceof LinkModel_1.LinkModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"port\") && item instanceof PortModel_1.PortModel) {\n              return true;\n            }\n\n            if (_.includes(filters, \"point\") && item instanceof PointModel_1.PointModel) {\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        return items;\n      };\n\n      DiagramModel.prototype.setZoomLevel = function (zoom) {\n        this.zoom = zoom;\n        this.iterateListeners(function (listener, event) {\n          if (listener.zoomUpdated) {\n            listener.zoomUpdated(__assign({}, event, {\n              zoom: zoom\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffset = function (offsetX, offsetY) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: offsetX,\n              offsetY: offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffsetX = function (offsetX) {\n        var _this = this;\n\n        this.offsetX = offsetX;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: offsetX,\n              offsetY: _this.offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.setOffsetY = function (offsetY) {\n        var _this = this;\n\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n          if (listener.offsetUpdated) {\n            listener.offsetUpdated(__assign({}, event, {\n              offsetX: _this.offsetX,\n              offsetY: _this.offsetY\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getOffsetY = function () {\n        return this.offsetY;\n      };\n\n      DiagramModel.prototype.getOffsetX = function () {\n        return this.offsetX;\n      };\n\n      DiagramModel.prototype.getZoomLevel = function () {\n        return this.zoom;\n      };\n\n      DiagramModel.prototype.getNode = function (node) {\n        if (node instanceof NodeModel_1.NodeModel) {\n          return node;\n        }\n\n        if (!this.nodes[node]) {\n          return null;\n        }\n\n        return this.nodes[node];\n      };\n\n      DiagramModel.prototype.getLink = function (link) {\n        if (link instanceof LinkModel_1.LinkModel) {\n          return link;\n        }\n\n        if (!this.links[link]) {\n          return null;\n        }\n\n        return this.links[link];\n      };\n\n      DiagramModel.prototype.addAll = function () {\n        var _this = this;\n\n        var models = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          models[_i] = arguments[_i];\n        }\n\n        _.forEach(models, function (model) {\n          if (model instanceof LinkModel_1.LinkModel) {\n            _this.addLink(model);\n          } else if (model instanceof NodeModel_1.NodeModel) {\n            _this.addNode(model);\n          }\n        });\n\n        return models;\n      };\n\n      DiagramModel.prototype.addLink = function (link) {\n        var _this = this;\n\n        link.addListener({\n          entityRemoved: function () {\n            _this.removeLink(link);\n          }\n        });\n        this.links[link.getID()] = link;\n        this.iterateListeners(function (listener, event) {\n          if (listener.linksUpdated) {\n            listener.linksUpdated(__assign({}, event, {\n              link: link,\n              isCreated: true\n            }));\n          }\n        });\n        return link;\n      };\n\n      DiagramModel.prototype.addNode = function (node) {\n        var _this = this;\n\n        node.addListener({\n          entityRemoved: function () {\n            _this.removeNode(node);\n          }\n        });\n        this.nodes[node.getID()] = node;\n        this.iterateListeners(function (listener, event) {\n          if (listener.nodesUpdated) {\n            listener.nodesUpdated(__assign({}, event, {\n              node: node,\n              isCreated: true\n            }));\n          }\n        });\n        return node;\n      };\n\n      DiagramModel.prototype.removeLink = function (link) {\n        link = this.getLink(link);\n        delete this.links[link.getID()];\n        this.iterateListeners(function (listener, event) {\n          if (listener.linksUpdated) {\n            listener.linksUpdated(__assign({}, event, {\n              link: link,\n              isCreated: false\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.removeNode = function (node) {\n        node = this.getNode(node);\n        delete this.nodes[node.getID()];\n        this.iterateListeners(function (listener, event) {\n          if (listener.nodesUpdated) {\n            listener.nodesUpdated(__assign({}, event, {\n              node: node,\n              isCreated: false\n            }));\n          }\n        });\n      };\n\n      DiagramModel.prototype.getLinks = function () {\n        return this.links;\n      };\n\n      DiagramModel.prototype.getNodes = function () {\n        return this.nodes;\n      };\n\n      return DiagramModel;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.DiagramModel = DiagramModel;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function __export(m) {\n      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    __export(__webpack_require__(7));\n\n    __export(__webpack_require__(13));\n\n    __export(__webpack_require__(49));\n\n    __export(__webpack_require__(38));\n\n    __export(__webpack_require__(20));\n\n    __export(__webpack_require__(19));\n\n    __export(__webpack_require__(18));\n\n    __export(__webpack_require__(48));\n\n    __export(__webpack_require__(47));\n\n    __export(__webpack_require__(43));\n\n    __export(__webpack_require__(41));\n\n    __export(__webpack_require__(37));\n\n    __export(__webpack_require__(39));\n\n    __export(__webpack_require__(35));\n\n    __export(__webpack_require__(34));\n\n    __export(__webpack_require__(8));\n\n    __export(__webpack_require__(40));\n\n    __export(__webpack_require__(36));\n\n    __export(__webpack_require__(32));\n\n    __export(__webpack_require__(42));\n\n    __export(__webpack_require__(16));\n\n    __export(__webpack_require__(11));\n\n    __export(__webpack_require__(31));\n\n    __export(__webpack_require__(30));\n\n    __export(__webpack_require__(29));\n\n    __export(__webpack_require__(6));\n\n    __export(__webpack_require__(44));\n\n    __export(__webpack_require__(21));\n\n    __export(__webpack_require__(9));\n\n    __export(__webpack_require__(5));\n\n    __export(__webpack_require__(12));\n\n    __export(__webpack_require__(17));\n\n    __export(__webpack_require__(46));\n\n    __export(__webpack_require__(27));\n\n    __export(__webpack_require__(25));\n\n    __export(__webpack_require__(33));\n\n    __export(__webpack_require__(3));\n\n    __export(__webpack_require__(28));\n\n    __export(__webpack_require__(26));\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    var __assign = this && this.__assign || Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var _ = __webpack_require__(0);\n\n    var LinkLayerWidget_1 = __webpack_require__(28);\n\n    var NodeLayerWidget_1 = __webpack_require__(26);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var MoveCanvasAction_1 = __webpack_require__(31);\n\n    var MoveItemsAction_1 = __webpack_require__(30);\n\n    var SelectingAction_1 = __webpack_require__(29);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var PortModel_1 = __webpack_require__(12);\n\n    var BaseWidget_1 = __webpack_require__(3);\n\n    var DiagramWidget = function (_super) {\n      __extends(DiagramWidget, _super);\n\n      function DiagramWidget(props) {\n        var _this = _super.call(this, \"srd-diagram\", props) || this;\n\n        _this.onKeyUpPointer = null;\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        _this.state = {\n          action: null,\n          wasMoved: false,\n          renderedNodes: false,\n          windowListener: null,\n          diagramEngineListener: null,\n          document: null\n        };\n        return _this;\n      }\n\n      DiagramWidget.prototype.componentWillUnmount = function () {\n        this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n        this.props.diagramEngine.setCanvas(null);\n        window.removeEventListener(\"keyup\", this.onKeyUpPointer);\n        window.removeEventListener(\"mouseUp\", this.onMouseUp);\n        window.removeEventListener(\"mouseMove\", this.onMouseMove);\n      };\n\n      DiagramWidget.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n\n        if (this.props.diagramEngine !== nextProps.diagramEngine) {\n          this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n          var diagramEngineListener = nextProps.diagramEngine.addListener({\n            repaintCanvas: function () {\n              return _this.forceUpdate();\n            }\n          });\n          this.setState({\n            diagramEngineListener: diagramEngineListener\n          });\n        }\n      };\n\n      DiagramWidget.prototype.componentWillUpdate = function (nextProps) {\n        if (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n          this.setState({\n            renderedNodes: false\n          });\n          nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n\n        if (!nextProps.diagramEngine.diagramModel.rendered) {\n          this.setState({\n            renderedNodes: false\n          });\n          nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n      };\n\n      DiagramWidget.prototype.componentDidUpdate = function () {\n        if (!this.state.renderedNodes) {\n          this.setState({\n            renderedNodes: true\n          });\n        }\n      };\n\n      DiagramWidget.prototype.componentDidMount = function () {\n        var _this = this;\n\n        this.onKeyUpPointer = this.onKeyUp.bind(this);\n        this.setState({\n          document: document,\n          renderedNodes: true,\n          diagramEngineListener: this.props.diagramEngine.addListener({\n            repaintCanvas: function () {\n              _this.forceUpdate();\n            }\n          })\n        });\n        window.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n\n        if (true) {\n          window.focus();\n        }\n      };\n\n      DiagramWidget.prototype.getMouseElement = function (event) {\n        var target = event.target;\n        var diagramModel = this.props.diagramEngine.diagramModel;\n        var element = Toolkit_1.Toolkit.closest(target, \".port[data-name]\");\n\n        if (element) {\n          var nodeElement = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n          return {\n            model: diagramModel.getNode(nodeElement.getAttribute(\"data-nodeid\")).getPort(element.getAttribute(\"data-name\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \".point[data-id]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getLink(element.getAttribute(\"data-linkid\")).getPointModel(element.getAttribute(\"data-id\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \"[data-linkid]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n            element: element\n          };\n        }\n\n        element = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n\n        if (element) {\n          return {\n            model: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n            element: element\n          };\n        }\n\n        return null;\n      };\n\n      DiagramWidget.prototype.fireAction = function () {\n        if (this.state.action && this.props.actionStillFiring) {\n          this.props.actionStillFiring(this.state.action);\n        }\n      };\n\n      DiagramWidget.prototype.stopFiringAction = function (shouldSkipEvent) {\n        if (this.props.actionStoppedFiring && !shouldSkipEvent) {\n          this.props.actionStoppedFiring(this.state.action);\n        }\n\n        this.setState({\n          action: null\n        });\n      };\n\n      DiagramWidget.prototype.startFiringAction = function (action) {\n        var setState = true;\n\n        if (this.props.actionStartedFiring) {\n          setState = this.props.actionStartedFiring(action);\n        }\n\n        if (setState) {\n          this.setState({\n            action: action\n          });\n        }\n      };\n\n      DiagramWidget.prototype.onMouseMove = function (event) {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n        var diagramModel = diagramEngine.getDiagramModel();\n\n        if (this.state.action instanceof SelectingAction_1.SelectingAction) {\n          var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n          _.forEach(diagramModel.getNodes(), function (node) {\n            if (_this.state.action.containsElement(node.x, node.y, diagramModel)) {\n              node.setSelected(true);\n            }\n          });\n\n          _.forEach(diagramModel.getLinks(), function (link) {\n            var allSelected = true;\n\n            _.forEach(link.points, function (point) {\n              if (_this.state.action.containsElement(point.x, point.y, diagramModel)) {\n                point.setSelected(true);\n              } else {\n                allSelected = false;\n              }\n            });\n\n            if (allSelected) {\n              link.setSelected(true);\n            }\n          });\n\n          this.state.action.mouseX2 = relative.x;\n          this.state.action.mouseY2 = relative.y;\n          this.fireAction();\n          this.setState({\n            action: this.state.action\n          });\n          return;\n        } else if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n          var amountX_1 = event.clientX - this.state.action.mouseX;\n          var amountY_1 = event.clientY - this.state.action.mouseY;\n          var amountZoom_1 = diagramModel.getZoomLevel() / 100;\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (model.model instanceof NodeModel_1.NodeModel || model.model instanceof PointModel_1.PointModel && !model.model.isConnectedToPort()) {\n              model.model.x = diagramModel.getGridPosition(model.initialX + amountX_1 / amountZoom_1);\n              model.model.y = diagramModel.getGridPosition(model.initialY + amountY_1 / amountZoom_1);\n\n              if (model.model instanceof NodeModel_1.NodeModel) {\n                _.forEach(model.model.getPorts(), function (port) {\n                  var portCoords = _this.props.diagramEngine.getPortCoords(port);\n\n                  port.updateCoords(portCoords);\n                });\n              }\n\n              if (diagramEngine.isSmartRoutingEnabled()) {\n                diagramEngine.calculateRoutingMatrix();\n              }\n            } else if (model.model instanceof PointModel_1.PointModel) {\n              model.model.x = model.initialX + diagramModel.getGridPosition(amountX_1 / amountZoom_1);\n              model.model.y = model.initialY + diagramModel.getGridPosition(amountY_1 / amountZoom_1);\n            }\n          });\n\n          if (diagramEngine.isSmartRoutingEnabled()) {\n            diagramEngine.calculateCanvasMatrix();\n          }\n\n          this.fireAction();\n\n          if (!this.state.wasMoved) {\n            this.setState({\n              wasMoved: true\n            });\n          } else {\n            this.forceUpdate();\n          }\n        } else if (this.state.action instanceof MoveCanvasAction_1.MoveCanvasAction) {\n          if (this.props.allowCanvasTranslation) {\n            diagramModel.setOffset(this.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX), this.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY));\n            this.fireAction();\n            this.forceUpdate();\n          }\n        }\n      };\n\n      DiagramWidget.prototype.onKeyUp = function (event) {\n        var _this = this;\n\n        if (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n          _.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), function (element) {\n            if (!_this.props.diagramEngine.isModelLocked(element)) {\n              element.remove();\n            }\n          });\n\n          this.forceUpdate();\n        }\n      };\n\n      DiagramWidget.prototype.onMouseUp = function (event) {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n\n        if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n          var element = this.getMouseElement(event);\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (!(model.model instanceof PointModel_1.PointModel)) {\n              return;\n            }\n\n            if (element && element.model instanceof PortModel_1.PortModel && !diagramEngine.isModelLocked(element.model)) {\n              var link = model.model.getLink();\n\n              if (link.getTargetPort() !== null) {\n                if (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n                  var targetPort = link.getTargetPort();\n                  var newLink = link.clone({});\n                  newLink.setSourcePort(element.model);\n                  newLink.setTargetPort(targetPort);\n                  link.setTargetPort(element.model);\n                  targetPort.removeLink(link);\n                  newLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n                  link.removePointsAfter(model.model);\n                  diagramEngine.getDiagramModel().addLink(newLink);\n                } else if (link.getTargetPort() === element.model) {\n                  link.removePointsAfter(model.model);\n                } else if (link.getSourcePort() === element.model) {\n                  link.removePointsBefore(model.model);\n                }\n              } else {\n                link.setTargetPort(element.model);\n              }\n\n              delete _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n            }\n          });\n\n          if (!this.props.allowLooseLinks && this.state.wasMoved) {\n            _.forEach(this.state.action.selectionModels, function (model) {\n              if (!(model.model instanceof PointModel_1.PointModel)) {\n                return;\n              }\n\n              var selectedPoint = model.model;\n              var link = selectedPoint.getLink();\n\n              if (link.getSourcePort() === null || link.getTargetPort() === null) {\n                link.remove();\n              }\n            });\n          }\n\n          _.forEach(this.state.action.selectionModels, function (model) {\n            if (!(model.model instanceof PointModel_1.PointModel)) {\n              return;\n            }\n\n            var link = model.model.getLink();\n            var sourcePort = link.getSourcePort();\n            var targetPort = link.getTargetPort();\n\n            if (sourcePort !== null && targetPort !== null) {\n              if (!sourcePort.canLinkToPort(targetPort)) {\n                link.remove();\n              } else if (_.some(_.values(targetPort.getLinks()), function (l) {\n                return l !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort);\n              })) {\n                link.remove();\n              }\n            }\n          });\n\n          diagramEngine.clearRepaintEntities();\n          this.stopFiringAction(!this.state.wasMoved);\n        } else {\n          diagramEngine.clearRepaintEntities();\n          this.stopFiringAction();\n        }\n\n        this.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n      };\n\n      DiagramWidget.prototype.drawSelectionBox = function () {\n        var dimensions = this.state.action.getBoxDimensions();\n        return React.createElement(\"div\", {\n          className: this.bem(\"__selector\"),\n          style: {\n            top: dimensions.top,\n            left: dimensions.left,\n            width: dimensions.width,\n            height: dimensions.height\n          }\n        });\n      };\n\n      DiagramWidget.prototype.render = function () {\n        var _this = this;\n\n        var diagramEngine = this.props.diagramEngine;\n        diagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n        diagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n        var diagramModel = diagramEngine.getDiagramModel();\n        return React.createElement(\"div\", __assign({}, this.getProps(), {\n          ref: function (ref) {\n            if (ref) {\n              _this.props.diagramEngine.setCanvas(ref);\n            }\n          },\n          onWheel: function (event) {\n            if (_this.props.allowCanvasZoom) {\n              event.preventDefault();\n              event.stopPropagation();\n              var oldZoomFactor = diagramModel.getZoomLevel() / 100;\n              var scrollDelta = _this.props.inverseZoom ? -event.deltaY : event.deltaY;\n\n              if (event.ctrlKey && scrollDelta % 1 !== 0) {\n                scrollDelta /= 3;\n              } else {\n                scrollDelta /= 60;\n              }\n\n              if (diagramModel.getZoomLevel() + scrollDelta > 10) {\n                diagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n              }\n\n              var zoomFactor = diagramModel.getZoomLevel() / 100;\n              var boundingRect = event.currentTarget.getBoundingClientRect();\n              var clientWidth = boundingRect.width;\n              var clientHeight = boundingRect.height;\n              var widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n              var heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n              var clientX = event.clientX - boundingRect.left;\n              var clientY = event.clientY - boundingRect.top;\n              var xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n              var yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n              diagramModel.setOffset(diagramModel.getOffsetX() - widthDiff * xFactor, diagramModel.getOffsetY() - heightDiff * yFactor);\n              diagramEngine.enableRepaintEntities([]);\n\n              _this.forceUpdate();\n            }\n          },\n          onMouseDown: function (event) {\n            _this.setState(__assign({}, _this.state, {\n              wasMoved: false\n            }));\n\n            diagramEngine.clearRepaintEntities();\n\n            var model = _this.getMouseElement(event);\n\n            if (model === null) {\n              if (event.shiftKey) {\n                var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n                _this.startFiringAction(new SelectingAction_1.SelectingAction(relative.x, relative.y));\n              } else {\n                diagramModel.clearSelection();\n\n                _this.startFiringAction(new MoveCanvasAction_1.MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n              }\n            } else if (model.model instanceof PortModel_1.PortModel) {\n              if (!_this.props.diagramEngine.isModelLocked(model.model)) {\n                var relative = diagramEngine.getRelativeMousePoint(event);\n                var sourcePort = model.model;\n                var link = sourcePort.createLinkModel();\n                link.setSourcePort(sourcePort);\n\n                if (link) {\n                  link.removeMiddlePoints();\n\n                  if (link.getSourcePort() !== sourcePort) {\n                    link.setSourcePort(sourcePort);\n                  }\n\n                  link.setTargetPort(null);\n                  link.getFirstPoint().updateLocation(relative);\n                  link.getLastPoint().updateLocation(relative);\n                  diagramModel.clearSelection();\n                  link.getLastPoint().setSelected(true);\n                  diagramModel.addLink(link);\n\n                  _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n                }\n              } else {\n                diagramModel.clearSelection();\n              }\n            } else {\n              if (!event.shiftKey && !model.model.isSelected()) {\n                diagramModel.clearSelection();\n              }\n\n              model.model.setSelected(true);\n\n              _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n            }\n\n            _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n\n            _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n          }\n        }), this.state.renderedNodes && React.createElement(LinkLayerWidget_1.LinkLayerWidget, {\n          diagramEngine: diagramEngine,\n          pointAdded: function (point, event) {\n            _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n\n            _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n\n            event.stopPropagation();\n            diagramModel.clearSelection(point);\n\n            _this.setState({\n              action: new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n            });\n          }\n        }), React.createElement(NodeLayerWidget_1.NodeLayerWidget, {\n          diagramEngine: diagramEngine\n        }), this.state.action instanceof SelectingAction_1.SelectingAction && this.drawSelectionBox());\n      };\n\n      DiagramWidget.defaultProps = {\n        diagramEngine: null,\n        allowLooseLinks: true,\n        allowCanvasTranslation: true,\n        allowCanvasZoom: true,\n        inverseZoom: false,\n        maxNumberPointsPerLink: Infinity,\n        smartRouting: false,\n        deleteKeys: [46, 8]\n      };\n      return DiagramWidget;\n    }(BaseWidget_1.BaseWidget);\n\n    exports.DiagramWidget = DiagramWidget;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var DefaultNodeModel_1 = __webpack_require__(38);\n\n    var React = __webpack_require__(1);\n\n    var DefaultNodeWidget_1 = __webpack_require__(35);\n\n    var AbstractNodeFactory_1 = __webpack_require__(32);\n\n    var DefaultNodeFactory = function (_super) {\n      __extends(DefaultNodeFactory, _super);\n\n      function DefaultNodeFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultNodeFactory.prototype.generateReactWidget = function (diagramEngine, node) {\n        return React.createElement(DefaultNodeWidget_1.DefaultNodeWidget, {\n          node: node,\n          diagramEngine: diagramEngine\n        });\n      };\n\n      DefaultNodeFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultNodeModel_1.DefaultNodeModel();\n      };\n\n      return DefaultNodeFactory;\n    }(AbstractNodeFactory_1.AbstractNodeFactory);\n\n    exports.DefaultNodeFactory = DefaultNodeFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var React = __webpack_require__(1);\n\n    var DefaultLinkWidget_1 = __webpack_require__(37);\n\n    var AbstractLinkFactory_1 = __webpack_require__(36);\n\n    var DefaultLinkModel_1 = __webpack_require__(19);\n\n    var DefaultLinkFactory = function (_super) {\n      __extends(DefaultLinkFactory, _super);\n\n      function DefaultLinkFactory() {\n        return _super.call(this, \"default\") || this;\n      }\n\n      DefaultLinkFactory.prototype.generateReactWidget = function (diagramEngine, link) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, {\n          link: link,\n          diagramEngine: diagramEngine\n        });\n      };\n\n      DefaultLinkFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n      };\n\n      DefaultLinkFactory.prototype.generateLinkSegment = function (model, widget, selected, path) {\n        return React.createElement(\"path\", {\n          className: selected ? widget.bem(\"--path-selected\") : \"\",\n          strokeWidth: model.width,\n          stroke: model.color,\n          d: path\n        });\n      };\n\n      return DefaultLinkFactory;\n    }(AbstractLinkFactory_1.AbstractLinkFactory);\n\n    exports.DefaultLinkFactory = DefaultLinkFactory;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __extends = this && this.__extends || function () {\n      var extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n\n      return function (d, b) {\n        extendStatics(d, b);\n\n        function __() {\n          this.constructor = d;\n        }\n\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n      };\n    }();\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var BaseEntity_1 = __webpack_require__(13);\n\n    var DiagramModel_1 = __webpack_require__(44);\n\n    var _ = __webpack_require__(0);\n\n    var NodeModel_1 = __webpack_require__(9);\n\n    var PointModel_1 = __webpack_require__(5);\n\n    var main_1 = __webpack_require__(45);\n\n    var PathFinding_1 = __webpack_require__(16);\n\n    var DefaultPortFactory_1 = __webpack_require__(43);\n\n    var DefaultLabelFactory_1 = __webpack_require__(41);\n\n    var Toolkit_1 = __webpack_require__(7);\n\n    var DiagramEngine = function (_super) {\n      __extends(DiagramEngine, _super);\n\n      function DiagramEngine() {\n        var _this = _super.call(this) || this;\n\n        _this.canvasMatrix = [];\n        _this.routingMatrix = [];\n        _this.hAdjustmentFactor = 0;\n        _this.vAdjustmentFactor = 0;\n\n        _this.calculateMatrixDimensions = function () {\n          var allNodesCoords = _.values(_this.diagramModel.nodes).map(function (item) {\n            return {\n              x: item.x,\n              width: item.width,\n              y: item.y,\n              height: item.height\n            };\n          });\n\n          var allLinks = _.values(_this.diagramModel.links);\n\n          var allPortsCoords = _.flatMap(allLinks.map(function (link) {\n            return [link.sourcePort, link.targetPort];\n          })).filter(function (port) {\n            return port !== null;\n          }).map(function (item) {\n            return {\n              x: item.x,\n              width: item.width,\n              y: item.y,\n              height: item.height\n            };\n          });\n\n          var allPointsCoords = _.flatMap(allLinks.map(function (link) {\n            return link.points;\n          })).map(function (item) {\n            return {\n              x: item.x,\n              width: 0,\n              y: item.y,\n              height: 0\n            };\n          });\n\n          var canvas = _this.canvas;\n          var minX = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.x;\n          }).x, 0) / PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n\n          var maxXElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.x + item.width;\n          });\n\n          var maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n          var minY = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.y;\n          }).y, 0) / PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n\n          var maxYElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) {\n            return item.y + item.height;\n          });\n\n          var maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n          return {\n            width: Math.ceil(Math.abs(minX) + maxX),\n            hAdjustmentFactor: Math.abs(minX) / PathFinding_1.ROUTING_SCALING_FACTOR + 1,\n            height: Math.ceil(Math.abs(minY) + maxY),\n            vAdjustmentFactor: Math.abs(minY) / PathFinding_1.ROUTING_SCALING_FACTOR + 1\n          };\n        };\n\n        _this.markNodes = function (matrix) {\n          _.values(_this.diagramModel.nodes).forEach(function (node) {\n            var startX = Math.floor(node.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endX = Math.ceil((node.x + node.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var startY = Math.floor(node.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endY = Math.ceil((node.y + node.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n\n            for (var x = startX - 1; x <= endX + 1; x++) {\n              for (var y = startY - 1; y < endY + 1; y++) {\n                _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n              }\n            }\n          });\n        };\n\n        _this.markPorts = function (matrix) {\n          var allElements = _.flatMap(_.values(_this.diagramModel.links).map(function (link) {\n            return [].concat(link.sourcePort, link.targetPort);\n          }));\n\n          allElements.filter(function (port) {\n            return port !== null;\n          }).forEach(function (port) {\n            var startX = Math.floor(port.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endX = Math.ceil((port.x + port.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var startY = Math.floor(port.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n            var endY = Math.ceil((port.y + port.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n\n            for (var x = startX - 1; x <= endX + 1; x++) {\n              for (var y = startY - 1; y < endY + 1; y++) {\n                _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n              }\n            }\n          });\n        };\n\n        _this.markMatrixPoint = function (matrix, x, y) {\n          if (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n            matrix[y][x] = 1;\n          }\n        };\n\n        _this.diagramModel = new DiagramModel_1.DiagramModel();\n        _this.nodeFactories = {};\n        _this.linkFactories = {};\n        _this.portFactories = {};\n        _this.labelFactories = {};\n        _this.canvas = null;\n        _this.paintableWidgets = null;\n        _this.linksThatHaveInitiallyRendered = {};\n\n        if (Toolkit_1.Toolkit.TESTING) {\n          Toolkit_1.Toolkit.TESTING_UID = 0;\n\n          if (window) {\n            window[\"diagram_instance\"] = _this;\n          }\n        }\n\n        return _this;\n      }\n\n      DiagramEngine.prototype.installDefaultFactories = function () {\n        this.registerNodeFactory(new main_1.DefaultNodeFactory());\n        this.registerLinkFactory(new main_1.DefaultLinkFactory());\n        this.registerPortFactory(new DefaultPortFactory_1.DefaultPortFactory());\n        this.registerLabelFactory(new DefaultLabelFactory_1.DefaultLabelFactory());\n      };\n\n      DiagramEngine.prototype.repaintCanvas = function () {\n        this.iterateListeners(function (listener) {\n          if (listener.repaintCanvas) {\n            listener.repaintCanvas();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.clearRepaintEntities = function () {\n        this.paintableWidgets = null;\n      };\n\n      DiagramEngine.prototype.enableRepaintEntities = function (entities) {\n        var _this = this;\n\n        this.paintableWidgets = {};\n        entities.forEach(function (entity) {\n          if (entity instanceof NodeModel_1.NodeModel) {\n            _.forEach(entity.getPorts(), function (port) {\n              _.forEach(port.getLinks(), function (link) {\n                _this.paintableWidgets[link.getID()] = true;\n              });\n            });\n          }\n\n          if (entity instanceof PointModel_1.PointModel) {\n            _this.paintableWidgets[entity.getLink().getID()] = true;\n          }\n\n          _this.paintableWidgets[entity.getID()] = true;\n        });\n      };\n\n      DiagramEngine.prototype.isModelLocked = function (model) {\n        if (this.diagramModel.isLocked()) {\n          return true;\n        }\n\n        return model.isLocked();\n      };\n\n      DiagramEngine.prototype.recalculatePortsVisually = function () {\n        this.nodesRendered = false;\n        this.linksThatHaveInitiallyRendered = {};\n      };\n\n      DiagramEngine.prototype.canEntityRepaint = function (baseModel) {\n        if (this.paintableWidgets === null) {\n          return true;\n        }\n\n        return this.paintableWidgets[baseModel.getID()] !== undefined;\n      };\n\n      DiagramEngine.prototype.setCanvas = function (canvas) {\n        this.canvas = canvas;\n      };\n\n      DiagramEngine.prototype.setDiagramModel = function (model) {\n        this.diagramModel = model;\n        this.recalculatePortsVisually();\n      };\n\n      DiagramEngine.prototype.getDiagramModel = function () {\n        return this.diagramModel;\n      }; //!-------------- FACTORIES ------------\n\n\n      DiagramEngine.prototype.getNodeFactories = function () {\n        return this.nodeFactories;\n      };\n\n      DiagramEngine.prototype.getLinkFactories = function () {\n        return this.linkFactories;\n      };\n\n      DiagramEngine.prototype.getLabelFactories = function () {\n        return this.labelFactories;\n      };\n\n      DiagramEngine.prototype.registerLabelFactory = function (factory) {\n        this.labelFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.labelFactoriesUpdated) {\n            listener.labelFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerPortFactory = function (factory) {\n        this.portFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.portFactoriesUpdated) {\n            listener.portFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerNodeFactory = function (factory) {\n        this.nodeFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.nodeFactoriesUpdated) {\n            listener.nodeFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.registerLinkFactory = function (factory) {\n        this.linkFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n          if (listener.linkFactoriesUpdated) {\n            listener.linkFactoriesUpdated();\n          }\n        });\n      };\n\n      DiagramEngine.prototype.getPortFactory = function (type) {\n        if (this.portFactories[type]) {\n          return this.portFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for port of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getNodeFactory = function (type) {\n        if (this.nodeFactories[type]) {\n          return this.nodeFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for node of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getLinkFactory = function (type) {\n        if (this.linkFactories[type]) {\n          return this.linkFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for link of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getLabelFactory = function (type) {\n        if (this.labelFactories[type]) {\n          return this.labelFactories[type];\n        }\n\n        throw new Error(\"cannot find factory for label of type: [\" + type + \"]\");\n      };\n\n      DiagramEngine.prototype.getFactoryForNode = function (node) {\n        return this.getNodeFactory(node.getType());\n      };\n\n      DiagramEngine.prototype.getFactoryForLink = function (link) {\n        return this.getLinkFactory(link.getType());\n      };\n\n      DiagramEngine.prototype.getFactoryForLabel = function (label) {\n        return this.getLabelFactory(label.getType());\n      };\n\n      DiagramEngine.prototype.generateWidgetForLink = function (link) {\n        var linkFactory = this.getFactoryForLink(link);\n\n        if (!linkFactory) {\n          throw new Error(\"Cannot find link factory for link: \" + link.getType());\n        }\n\n        return linkFactory.generateReactWidget(this, link);\n      };\n\n      DiagramEngine.prototype.generateWidgetForNode = function (node) {\n        var nodeFactory = this.getFactoryForNode(node);\n\n        if (!nodeFactory) {\n          throw new Error(\"Cannot find widget factory for node: \" + node.getType());\n        }\n\n        return nodeFactory.generateReactWidget(this, node);\n      };\n\n      DiagramEngine.prototype.getRelativeMousePoint = function (event) {\n        var point = this.getRelativePoint(event.clientX, event.clientY);\n        return {\n          x: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100),\n          y: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100)\n        };\n      };\n\n      DiagramEngine.prototype.getRelativePoint = function (x, y) {\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return {\n          x: x - canvasRect.left,\n          y: y - canvasRect.top\n        };\n      };\n\n      DiagramEngine.prototype.getNodeElement = function (node) {\n        var selector = this.canvas.querySelector('.node[data-nodeid=\"' + node.getID() + '\"]');\n\n        if (selector === null) {\n          throw new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n        }\n\n        return selector;\n      };\n\n      DiagramEngine.prototype.getNodePortElement = function (port) {\n        var selector = this.canvas.querySelector('.port[data-name=\"' + port.getName() + '\"][data-nodeid=\"' + port.getParent().getID() + '\"]');\n\n        if (selector === null) {\n          throw new Error(\"Cannot find Node Port element with nodeID: [\" + port.getParent().getID() + \"] and name: [\" + port.getName() + \"]\");\n        }\n\n        return selector;\n      };\n\n      DiagramEngine.prototype.getPortCenter = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n        return {\n          x: sourceElement.offsetWidth / 2 + (rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100),\n          y: sourceElement.offsetHeight / 2 + (rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100)\n        };\n      };\n\n      DiagramEngine.prototype.getPortCoords = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return {\n          x: (sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100) - canvasRect.left,\n          y: (sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100) - canvasRect.top,\n          width: sourceRect.width,\n          height: sourceRect.height\n        };\n      };\n\n      DiagramEngine.prototype.getNodeDimensions = function (node) {\n        if (!this.canvas) {\n          return {\n            width: 0,\n            height: 0\n          };\n        }\n\n        var nodeElement = this.getNodeElement(node);\n        var nodeRect = nodeElement.getBoundingClientRect();\n        return {\n          width: nodeRect.width,\n          height: nodeRect.height\n        };\n      };\n\n      DiagramEngine.prototype.getMaxNumberPointsPerLink = function () {\n        return this.maxNumberPointsPerLink;\n      };\n\n      DiagramEngine.prototype.setMaxNumberPointsPerLink = function (max) {\n        this.maxNumberPointsPerLink = max;\n      };\n\n      DiagramEngine.prototype.isSmartRoutingEnabled = function () {\n        return !!this.smartRouting;\n      };\n\n      DiagramEngine.prototype.setSmartRoutingStatus = function (status) {\n        this.smartRouting = status;\n      };\n\n      DiagramEngine.prototype.getCanvasMatrix = function () {\n        if (this.canvasMatrix.length === 0) {\n          this.calculateCanvasMatrix();\n        }\n\n        return this.canvasMatrix;\n      };\n\n      DiagramEngine.prototype.calculateCanvasMatrix = function () {\n        var _a = this.calculateMatrixDimensions(),\n            canvasWidth = _a.width,\n            hAdjustmentFactor = _a.hAdjustmentFactor,\n            canvasHeight = _a.height,\n            vAdjustmentFactor = _a.vAdjustmentFactor;\n\n        this.hAdjustmentFactor = hAdjustmentFactor;\n        this.vAdjustmentFactor = vAdjustmentFactor;\n        var matrixWidth = Math.ceil(canvasWidth / PathFinding_1.ROUTING_SCALING_FACTOR);\n        var matrixHeight = Math.ceil(canvasHeight / PathFinding_1.ROUTING_SCALING_FACTOR);\n        this.canvasMatrix = _.range(0, matrixHeight).map(function () {\n          return new Array(matrixWidth).fill(0);\n        });\n      };\n\n      DiagramEngine.prototype.getRoutingMatrix = function () {\n        if (this.routingMatrix.length === 0) {\n          this.calculateRoutingMatrix();\n        }\n\n        return this.routingMatrix;\n      };\n\n      DiagramEngine.prototype.calculateRoutingMatrix = function () {\n        var matrix = _.cloneDeep(this.getCanvasMatrix());\n\n        this.markNodes(matrix);\n        this.markPorts(matrix);\n        this.routingMatrix = matrix;\n      };\n\n      DiagramEngine.prototype.translateRoutingX = function (x, reverse) {\n        if (reverse === void 0) {\n          reverse = false;\n        }\n\n        return x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n      };\n\n      DiagramEngine.prototype.translateRoutingY = function (y, reverse) {\n        if (reverse === void 0) {\n          reverse = false;\n        }\n\n        return y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n      };\n\n      DiagramEngine.prototype.zoomToFit = function () {\n        var xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n        var yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n        var zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n        this.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n        this.diagramModel.setOffset(0, 0);\n        this.repaintCanvas();\n      };\n\n      return DiagramEngine;\n    }(BaseEntity_1.BaseEntity);\n\n    exports.DiagramEngine = DiagramEngine;\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n\n        return _arr;\n      }\n\n      return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }();\n\n    var sq = function sq(x) {\n      return x * x;\n    };\n\n    var distPointToPoint = function distPointToPoint(_ref, _ref3) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var ax = _ref2[0];\n      var ay = _ref2[1];\n\n      var _ref32 = _slicedToArray(_ref3, 2);\n\n      var bx = _ref32[0];\n      var by = _ref32[1];\n      return Math.sqrt(sq(ax - bx) + sq(ay - by));\n    };\n\n    var distPointToParabol = function distPointToParabol(a, f) {\n      var p = distPointToPoint(a, f);\n      return p == 0 ? Infinity : sq(p) / (2 * Math.abs(a[1] - f[1]));\n    };\n\n    var circumCenter = function circumCenter(a, b, c) {\n      var d = (a[0] - c[0]) * (b[1] - c[1]) - (b[0] - c[0]) * (a[1] - c[1]);\n      if (d == 0) return [Infinity, Infinity];\n      var xc = (((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[1] - c[1]) - ((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[1] - c[1])) / d;\n      var yc = (((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[0] - c[0]) - ((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[0] - c[0])) / d;\n      return [xc, yc];\n    };\n\n    var parabolsCrossX = function parabolsCrossX(fa, fb, q) {\n      if (fa[1] === fb[1]) return [(fa[0] + fb[0]) / 2, (fa[0] + fb[0]) / 2];\n      var s1 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q + Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n      var s2 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q - Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n      return s1 < s2 ? [s1, s2] : [s2, s1];\n    };\n\n    var doHalflinesCross = function doHalflinesCross(sa, sb) {\n      var approx = arguments.length <= 2 || arguments[2] === undefined ? 1e-10 : arguments[2];\n      var dx = sb.ps[0] - sa.ps[0];\n      var dy = sb.ps[1] - sa.ps[1];\n      if (sa.m == Infinity) return sa.hp * (sb.m * dx - dy) <= approx && sb.vec[0] * dx <= approx;\n      if (sb.m == Infinity) return sb.hp * (sa.m * dx - dy) >= -approx && sa.vec[0] * dx >= -approx;\n      var det = sb.vec[0] * sa.vec[1] - sb.vec[1] * sa.vec[0];\n      if (det === 0) return false;\n      var u = (dy * sb.vec[0] - dx * sb.vec[1]) / det;\n      var v = (dy * sa.vec[0] - dx * sa.vec[1]) / det;\n      return u >= -approx && v >= approx || u >= approx && v >= -approx;\n    };\n\n    var matrixTransform = function matrixTransform(points, matrix) {\n      return points.map(function (point) {\n        return {\n          x: point.x * matrix[0] + point.y * matrix[2] + matrix[4],\n          y: point.x * matrix[1] + point.y * matrix[3] + matrix[5]\n        };\n      });\n    };\n\n    var transformEllipse = function transformEllipse(rx, ry, ax, m) {\n      var torad = Math.PI / 180;\n      var epsilon = 1e-10;\n      var c = Math.cos(ax * torad),\n          s = Math.sin(ax * torad);\n      var ma = [rx * (m[0] * c + m[2] * s), rx * (m[1] * c + m[3] * s), ry * (-m[0] * s + m[2] * c), ry * (-m[1] * s + m[3] * c)];\n      var J = ma[0] * ma[0] + ma[2] * ma[2],\n          K = ma[1] * ma[1] + ma[3] * ma[3];\n      var D = ((ma[0] - ma[3]) * (ma[0] - ma[3]) + (ma[2] + ma[1]) * (ma[2] + ma[1])) * ((ma[0] + ma[3]) * (ma[0] + ma[3]) + (ma[2] - ma[1]) * (ma[2] - ma[1]));\n      var JK = (J + K) / 2;\n\n      if (D < epsilon * JK) {\n        return {\n          rx: Math.sqrt(JK),\n          ry: Math.sqrt(JK),\n          ax: 0,\n          isDegenerate: false\n        };\n      }\n\n      var L = ma[0] * ma[1] + ma[2] * ma[3];\n      D = Math.sqrt(D);\n      var l1 = JK + D / 2,\n          l2 = JK - D / 2;\n      var newAx = undefined,\n          newRx = undefined,\n          newRy = undefined;\n      newAx = Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon ? 90 : Math.atan(Math.abs(L) > Math.abs(l1 - K) ? (l1 - J) / L : L / (l1 - K)) * 180 / Math.PI;\n\n      if (newAx >= 0) {\n        newRx = Math.sqrt(l1);\n        newRy = Math.sqrt(l2);\n      } else {\n        newAx += 90;\n        newRx = Math.sqrt(l2);\n        newRy = Math.sqrt(l1);\n      }\n\n      return {\n        rx: newRx,\n        ry: newRy,\n        ax: newAx,\n        isDegenerate: newRx < epsilon * newRy || newRy < epsilon * newRx\n      };\n    };\n\n    exports[\"default\"] = {\n      distPointToPoint: distPointToPoint,\n      distPointToParabol: distPointToParabol,\n      circumCenter: circumCenter,\n      parabolsCrossX: parabolsCrossX,\n      doHalflinesCross: doHalflinesCross,\n      matrixTransform: matrixTransform,\n      transformEllipse: transformEllipse\n    };\n    module.exports = exports[\"default\"];\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n\n        return _arr;\n      }\n\n      return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }();\n\n    var _geom = __webpack_require__(50);\n\n    var Path = function Path(init) {\n      var _instructions = init || [];\n\n      var push = function push(arr, el) {\n        var copy = arr.slice(0, arr.length);\n        copy.push(el);\n        return copy;\n      };\n\n      var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var a1 = _ref2[0];\n        var b1 = _ref2[1];\n\n        var _ref32 = _slicedToArray(_ref3, 2);\n\n        var a2 = _ref32[0];\n        var b2 = _ref32[1];\n        return a1 === a2 && b1 === b2;\n      };\n\n      var trimZeros = function trimZeros(string, char) {\n        var l = string.length;\n\n        while (string.charAt(l - 1) === \"0\") {\n          l = l - 1;\n        }\n\n        if (string.charAt(l - 1) === \".\") {\n          l = l - 1;\n        }\n\n        return string.substr(0, l);\n      };\n\n      var round = function round(number, digits) {\n        var str = number.toFixed(digits);\n        return trimZeros(str);\n      };\n\n      var printInstrunction = function printInstrunction(_ref4) {\n        var command = _ref4.command;\n        var params = _ref4.params;\n        var numbers = params.map(function (param) {\n          return round(param, 6);\n        });\n        return command + \" \" + numbers.join(\" \");\n      };\n\n      var point = function point(_ref5, prev) {\n        var command = _ref5.command;\n        var params = _ref5.params;\n\n        switch (command) {\n          case \"M\":\n            return [params[0], params[1]];\n\n          case \"L\":\n            return [params[0], params[1]];\n\n          case \"H\":\n            return [params[0], prev[1]];\n\n          case \"V\":\n            return [prev[0], params[0]];\n\n          case \"Z\":\n            return null;\n\n          case \"C\":\n            return [params[4], params[5]];\n\n          case \"S\":\n            return [params[2], params[3]];\n\n          case \"Q\":\n            return [params[2], params[3]];\n\n          case \"T\":\n            return [params[0], params[1]];\n\n          case \"A\":\n            return [params[5], params[6]];\n        }\n      };\n\n      var transformParams = function transformParams(instruction, matrix, prev) {\n        var p = instruction.params;\n        var transformer = {\n          V: function V(instruction, matrix, prev) {\n            var pts = [{\n              x: prev[0],\n              y: p[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (newPts[0].x === (0, _geom.matrixTransform)([{\n              x: prev[0],\n              y: prev[1]\n            }])[0].x) {\n              return {\n                command: \"V\",\n                params: [newPts[0].y]\n              };\n            } else {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          H: function H(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: prev[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (newPts[0].y === (0, _geom.matrixTransform)([{\n              x: prev[0],\n              y: prev[1]\n            }])[0].y) {\n              return {\n                command: \"H\",\n                params: [newPts[0].x]\n              };\n            } else {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          A: function A(instruction, matrix, prev) {\n            var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n            var sweepFlag = p[4];\n\n            if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n              sweepFlag = sweepFlag ? \"0\" : \"1\";\n            }\n\n            var pts = [{\n              x: p[5],\n              y: p[6]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n            if (r.isDegenerate) {\n              return {\n                command: \"L\",\n                params: [newPts[0].x, newPts[0].y]\n              };\n            } else {\n              return {\n                command: \"A\",\n                params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n              };\n            }\n          },\n          C: function C(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: p[1]\n            }, {\n              x: p[2],\n              y: p[3]\n            }, {\n              x: p[4],\n              y: p[5]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n            return {\n              command: \"C\",\n              params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n            };\n          },\n          Z: function Z(instruction, matrix, prev) {\n            return {\n              command: \"Z\",\n              params: []\n            };\n          },\n          default: function _default(instruction, matrix, prev) {\n            var pts = [{\n              x: p[0],\n              y: p[1]\n            }];\n            var newPts = (0, _geom.matrixTransform)(pts, matrix);\n            var newParams = instruction.params.slice(0, instruction.params.length);\n            newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n            return {\n              command: instruction.command,\n              params: newParams\n            };\n          }\n        };\n\n        if (transformer[instruction.command]) {\n          return transformer[instruction.command](instruction, matrix, prev);\n        } else {\n          return transformer[\"default\"](instruction, matrix, prev);\n        }\n      };\n\n      var verbosify = function verbosify(keys, f) {\n        return function (a) {\n          var args = typeof a === \"object\" ? keys.map(function (k) {\n            return a[k];\n          }) : arguments;\n          return f.apply(null, args);\n        };\n      };\n\n      var plus = function plus(instruction) {\n        return Path(push(_instructions, instruction));\n      };\n\n      return {\n        moveto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"M\",\n            params: [x, y]\n          });\n        }),\n        lineto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"L\",\n            params: [x, y]\n          });\n        }),\n        hlineto: verbosify([\"x\"], function (x) {\n          return plus({\n            command: \"H\",\n            params: [x]\n          });\n        }),\n        vlineto: verbosify([\"y\"], function (y) {\n          return plus({\n            command: \"V\",\n            params: [y]\n          });\n        }),\n        closepath: function closepath() {\n          return plus({\n            command: \"Z\",\n            params: []\n          });\n        },\n        curveto: verbosify([\"x1\", \"y1\", \"x2\", \"y2\", \"x\", \"y\"], function (x1, y1, x2, y2, x, y) {\n          return plus({\n            command: \"C\",\n            params: [x1, y1, x2, y2, x, y]\n          });\n        }),\n        smoothcurveto: verbosify([\"x2\", \"y2\", \"x\", \"y\"], function (x2, y2, x, y) {\n          return plus({\n            command: \"S\",\n            params: [x2, y2, x, y]\n          });\n        }),\n        qcurveto: verbosify([\"x1\", \"y1\", \"x\", \"y\"], function (x1, y1, x, y) {\n          return plus({\n            command: \"Q\",\n            params: [x1, y1, x, y]\n          });\n        }),\n        smoothqcurveto: verbosify([\"x\", \"y\"], function (x, y) {\n          return plus({\n            command: \"T\",\n            params: [x, y]\n          });\n        }),\n        arc: verbosify([\"rx\", \"ry\", \"xrot\", \"largeArcFlag\", \"sweepFlag\", \"x\", \"y\"], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n          return plus({\n            command: \"A\",\n            params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n          });\n        }),\n        translate: verbosify([\"dx\", \"dy\"], function () {\n          var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n          var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n          if (dx !== 0 || dx !== 0) {\n            var _ret = function () {\n              var prev = [0, 0];\n              var matrix = [1, 0, 0, 1, dx, dy];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret === \"object\") return _ret.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        rotate: verbosify([\"angle\", \"rx\", \"ry\"], function (angle) {\n          var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n          var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n          if (angle !== 0) {\n            var _ret2 = function () {\n              var prev = undefined;\n              var matrix = undefined;\n              var newInstructions = _instructions;\n\n              if (rx !== 0 && ry !== 0) {\n                prev = [0, 0];\n                matrix = [1, 0, 0, 1, -rx, -ry];\n                newInstructions = newInstructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n              }\n\n              var rad = angle * Math.PI / 180;\n              var cos = Math.cos(rad);\n              var sin = Math.sin(rad);\n              prev = [0, 0];\n              matrix = [cos, sin, -sin, cos, 0, 0];\n              newInstructions = newInstructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              if (rx !== 0 && ry !== 0) {\n                prev = [0, 0];\n                matrix = [1, 0, 0, 1, rx, ry];\n                newInstructions = newInstructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n              }\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret2 === \"object\") return _ret2.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        scale: verbosify([\"sx\", \"sy\"], function () {\n          var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n          var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n          return function () {\n            if (sx !== 1 || sy !== 1) {\n              var _ret3 = function () {\n                var prev = [0, 0];\n                var matrix = [sx, 0, 0, sy, 0, 0];\n\n                var newInstructions = _instructions.map(function (instruction) {\n                  var p = transformParams(instruction, matrix, prev);\n                  prev = point(instruction, prev);\n                  return p;\n                });\n\n                return {\n                  v: Path(newInstructions)\n                };\n              }();\n\n              if (typeof _ret3 === \"object\") return _ret3.v;\n            } else {\n              return Path(_instructions);\n            }\n          }();\n        }),\n        shearX: verbosify([\"angle\"], function () {\n          var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n          if (angle !== 0) {\n            var _ret4 = function () {\n              var prev = [0, 0];\n              var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret4 === \"object\") return _ret4.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        shearY: verbosify([\"angle\"], function () {\n          var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n          if (angle !== 0) {\n            var _ret5 = function () {\n              var prev = [0, 0];\n              var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n\n              var newInstructions = _instructions.map(function (instruction) {\n                var p = transformParams(instruction, matrix, prev);\n                prev = point(instruction, prev);\n                return p;\n              });\n\n              return {\n                v: Path(newInstructions)\n              };\n            }();\n\n            if (typeof _ret5 === \"object\") return _ret5.v;\n          } else {\n            return Path(_instructions);\n          }\n        }),\n        print: function print() {\n          return _instructions.map(printInstrunction).join(\" \");\n        },\n        toString: function toString() {\n          return undefined.print();\n        },\n        points: function points() {\n          var ps = [];\n          var prev = [0, 0];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var instruction = _step.value;\n              var p = point(instruction, prev);\n              prev = p;\n\n              if (p) {\n                ps.push(p);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return ps;\n        },\n        instructions: function instructions() {\n          return _instructions.slice(0, _instructions.length);\n        },\n        connect: function connect(path) {\n          var ps = this.points();\n          var last = ps[ps.length - 1];\n          var first = path.points()[0];\n          var newInstructions = undefined;\n\n          if (_instructions[_instructions.length - 1].command !== \"Z\") {\n            newInstructions = path.instructions().slice(1);\n\n            if (!areEqualPoints(last, first)) {\n              newInstructions.unshift({\n                command: \"L\",\n                params: first\n              });\n            }\n          } else {\n            newInstructions = path.instructions();\n          }\n\n          return Path(this.instructions().concat(newInstructions));\n        }\n      };\n    };\n\n    exports[\"default\"] = function () {\n      return Path();\n    };\n\n    module.exports = exports[\"default\"];\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y) || grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1) || grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1)) {\n            return [x, y];\n          }\n        } else {\n          if (grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y) || grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y)) {\n            return [x, y];\n          }\n        }\n      }\n\n      if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\n        return this._jump(x + dx, y + dy, x, y);\n      } else {\n        return null;\n      }\n    };\n\n    JPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x - dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y - dy]);\n          }\n        } else {\n          if (dx === 0) {\n            if (grid.isWalkableAt(x, y + dy)) {\n              neighbors.push([x, y + dy]);\n\n              if (!grid.isWalkableAt(x + 1, y)) {\n                neighbors.push([x + 1, y + dy]);\n              }\n\n              if (!grid.isWalkableAt(x - 1, y)) {\n                neighbors.push([x - 1, y + dy]);\n              }\n            }\n          } else {\n            if (grid.isWalkableAt(x + dx, y)) {\n              neighbors.push([x + dx, y]);\n\n              if (!grid.isWalkableAt(x, y + 1)) {\n                neighbors.push([x + dx, y + 1]);\n              }\n\n              if (!grid.isWalkableAt(x, y - 1)) {\n                neighbors.push([x + dx, y - 1]);\n              }\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFMoveDiagonallyIfNoObstacles(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\n    JPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\n\n    JPFMoveDiagonallyIfNoObstacles.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1) || grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1)) {\n            return [x, y];\n          }\n        } else if (dy !== 0) {\n          if (grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy) || grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy)) {\n            return [x, y];\n          }\n        }\n      }\n\n      if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\n        return this._jump(x + dx, y + dy, x, y);\n      } else {\n        return null;\n      }\n    };\n\n    JPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n        } else {\n          var isNextWalkable;\n\n          if (dx !== 0) {\n            isNextWalkable = grid.isWalkableAt(x + dx, y);\n            var isTopWalkable = grid.isWalkableAt(x, y + 1);\n            var isBottomWalkable = grid.isWalkableAt(x, y - 1);\n\n            if (isNextWalkable) {\n              neighbors.push([x + dx, y]);\n\n              if (isTopWalkable) {\n                neighbors.push([x + dx, y + 1]);\n              }\n\n              if (isBottomWalkable) {\n                neighbors.push([x + dx, y - 1]);\n              }\n            }\n\n            if (isTopWalkable) {\n              neighbors.push([x, y + 1]);\n            }\n\n            if (isBottomWalkable) {\n              neighbors.push([x, y - 1]);\n            }\n          } else if (dy !== 0) {\n            isNextWalkable = grid.isWalkableAt(x, y + dy);\n            var isRightWalkable = grid.isWalkableAt(x + 1, y);\n            var isLeftWalkable = grid.isWalkableAt(x - 1, y);\n\n            if (isNextWalkable) {\n              neighbors.push([x, y + dy]);\n\n              if (isRightWalkable) {\n                neighbors.push([x + 1, y + dy]);\n              }\n\n              if (isLeftWalkable) {\n                neighbors.push([x - 1, y + dy]);\n              }\n            }\n\n            if (isRightWalkable) {\n              neighbors.push([x + 1, y]);\n            }\n\n            if (isLeftWalkable) {\n              neighbors.push([x - 1, y]);\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFMoveDiagonallyIfNoObstacles;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFAlwaysMoveDiagonally(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\n    JPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\n\n    JPFAlwaysMoveDiagonally.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0 && dy !== 0) {\n        if (grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y) || grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\n          return [x, y];\n        }\n      } else {\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1) || grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1)) {\n            return [x, y];\n          }\n        } else {\n          if (grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y) || grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y)) {\n            return [x, y];\n          }\n        }\n      }\n\n      return this._jump(x + dx, y + dy, x, y);\n    };\n\n    JPFAlwaysMoveDiagonally.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0 && dy !== 0) {\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y + dy)) {\n            neighbors.push([x + dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x - dx, y)) {\n            neighbors.push([x - dx, y + dy]);\n          }\n\n          if (!grid.isWalkableAt(x, y - dy)) {\n            neighbors.push([x + dx, y - dy]);\n          }\n        } else {\n          if (dx === 0) {\n            if (grid.isWalkableAt(x, y + dy)) {\n              neighbors.push([x, y + dy]);\n            }\n\n            if (!grid.isWalkableAt(x + 1, y)) {\n              neighbors.push([x + 1, y + dy]);\n            }\n\n            if (!grid.isWalkableAt(x - 1, y)) {\n              neighbors.push([x - 1, y + dy]);\n            }\n          } else {\n            if (grid.isWalkableAt(x + dx, y)) {\n              neighbors.push([x + dx, y]);\n            }\n\n            if (!grid.isWalkableAt(x, y + 1)) {\n              neighbors.push([x + dx, y + 1]);\n            }\n\n            if (!grid.isWalkableAt(x, y - 1)) {\n              neighbors.push([x + dx, y - 1]);\n            }\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFAlwaysMoveDiagonally;\n  }, function (module, exports, __webpack_require__) {\n    var JumpPointFinderBase = __webpack_require__(14);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function JPFNeverMoveDiagonally(opt) {\n      JumpPointFinderBase.call(this, opt);\n    }\n\n    JPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\n    JPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\n\n    JPFNeverMoveDiagonally.prototype._jump = function (x, y, px, py) {\n      var grid = this.grid,\n          dx = x - px,\n          dy = y - py;\n\n      if (!grid.isWalkableAt(x, y)) {\n        return null;\n      }\n\n      if (this.trackJumpRecursion === true) {\n        grid.getNodeAt(x, y).tested = true;\n      }\n\n      if (grid.getNodeAt(x, y) === this.endNode) {\n        return [x, y];\n      }\n\n      if (dx !== 0) {\n        if (grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1) || grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1)) {\n          return [x, y];\n        }\n      } else if (dy !== 0) {\n        if (grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy) || grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy)) {\n          return [x, y];\n        }\n\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\n          return [x, y];\n        }\n      } else {\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\n      }\n\n      return this._jump(x + dx, y + dy, x, y);\n    };\n\n    JPFNeverMoveDiagonally.prototype._findNeighbors = function (node) {\n      var parent = node.parent,\n          x = node.x,\n          y = node.y,\n          grid = this.grid,\n          px,\n          py,\n          nx,\n          ny,\n          dx,\n          dy,\n          neighbors = [],\n          neighborNodes,\n          neighborNode,\n          i,\n          l;\n\n      if (parent) {\n        px = parent.x;\n        py = parent.y;\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\n\n        if (dx !== 0) {\n          if (grid.isWalkableAt(x, y - 1)) {\n            neighbors.push([x, y - 1]);\n          }\n\n          if (grid.isWalkableAt(x, y + 1)) {\n            neighbors.push([x, y + 1]);\n          }\n\n          if (grid.isWalkableAt(x + dx, y)) {\n            neighbors.push([x + dx, y]);\n          }\n        } else if (dy !== 0) {\n          if (grid.isWalkableAt(x - 1, y)) {\n            neighbors.push([x - 1, y]);\n          }\n\n          if (grid.isWalkableAt(x + 1, y)) {\n            neighbors.push([x + 1, y]);\n          }\n\n          if (grid.isWalkableAt(x, y + dy)) {\n            neighbors.push([x, y + dy]);\n          }\n        }\n      } else {\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\n\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\n          neighborNode = neighborNodes[i];\n          neighbors.push([neighborNode.x, neighborNode.y]);\n        }\n      }\n\n      return neighbors;\n    };\n\n    module.exports = JPFNeverMoveDiagonally;\n  }, function (module, exports, __webpack_require__) {\n    var DiagonalMovement = __webpack_require__(2);\n\n    var JPFNeverMoveDiagonally = __webpack_require__(55);\n\n    var JPFAlwaysMoveDiagonally = __webpack_require__(54);\n\n    var JPFMoveDiagonallyIfNoObstacles = __webpack_require__(53);\n\n    var JPFMoveDiagonallyIfAtMostOneObstacle = __webpack_require__(52);\n\n    function JumpPointFinder(opt) {\n      opt = opt || {};\n\n      if (opt.diagonalMovement === DiagonalMovement.Never) {\n        return new JPFNeverMoveDiagonally(opt);\n      } else if (opt.diagonalMovement === DiagonalMovement.Always) {\n        return new JPFAlwaysMoveDiagonally(opt);\n      } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\n      } else {\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\n      }\n    }\n\n    module.exports = JumpPointFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var Heuristic = __webpack_require__(10);\n\n    var Node = __webpack_require__(24);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function IDAStarFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n      this.heuristic = opt.heuristic || Heuristic.manhattan;\n      this.weight = opt.weight || 1;\n      this.trackRecursion = opt.trackRecursion || false;\n      this.timeLimit = opt.timeLimit || Infinity;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n\n      if (this.diagonalMovement === DiagonalMovement.Never) {\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\n      } else {\n        this.heuristic = opt.heuristic || Heuristic.octile;\n      }\n    }\n\n    IDAStarFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var nodesVisited = 0;\n      var startTime = new Date().getTime();\n\n      var h = function (a, b) {\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n      }.bind(this);\n\n      var cost = function (a, b) {\n        return a.x === b.x || a.y === b.y ? 1 : Math.SQRT2;\n      };\n\n      var search = function (node, g, cutoff, route, depth) {\n        nodesVisited++;\n\n        if (this.timeLimit > 0 && new Date().getTime() - startTime > this.timeLimit * 1e3) {\n          return Infinity;\n        }\n\n        var f = g + h(node, end) * this.weight;\n\n        if (f > cutoff) {\n          return f;\n        }\n\n        if (node == end) {\n          route[depth] = [node.x, node.y];\n          return node;\n        }\n\n        var min, t, k, neighbour;\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\n\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\n          if (this.trackRecursion) {\n            neighbour.retainCount = neighbour.retainCount + 1 || 1;\n\n            if (neighbour.tested !== true) {\n              neighbour.tested = true;\n            }\n          }\n\n          t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\n\n          if (t instanceof Node) {\n            route[depth] = [node.x, node.y];\n            return t;\n          }\n\n          if (this.trackRecursion && --neighbour.retainCount === 0) {\n            neighbour.tested = false;\n          }\n\n          if (t < min) {\n            min = t;\n          }\n        }\n\n        return min;\n      }.bind(this);\n\n      var start = grid.getNodeAt(startX, startY);\n      var end = grid.getNodeAt(endX, endY);\n      var cutOff = h(start, end);\n      var j, route, t;\n\n      for (j = 0; true; ++j) {\n        route = [];\n        t = search(start, 0, cutOff, route, 0);\n\n        if (t === Infinity) {\n          return [];\n        }\n\n        if (t instanceof Node) {\n          return route;\n        }\n\n        cutOff = t;\n      }\n\n      return [];\n    };\n\n    module.exports = IDAStarFinder;\n  }, function (module, exports, __webpack_require__) {\n    var BiAStarFinder = __webpack_require__(22);\n\n    function BiDijkstraFinder(opt) {\n      BiAStarFinder.call(this, opt);\n\n      this.heuristic = function (dx, dy) {\n        return 0;\n      };\n    }\n\n    BiDijkstraFinder.prototype = new BiAStarFinder();\n    BiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\n    module.exports = BiDijkstraFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BiBreadthFirstFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n    }\n\n    BiBreadthFirstFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          startOpenList = [],\n          endOpenList = [],\n          neighbors,\n          neighbor,\n          node,\n          diagonalMovement = this.diagonalMovement,\n          BY_START = 0,\n          BY_END = 1,\n          i,\n          l;\n      startOpenList.push(startNode);\n      startNode.opened = true;\n      startNode.by = BY_START;\n      endOpenList.push(endNode);\n      endNode.opened = true;\n      endNode.by = BY_END;\n\n      while (startOpenList.length && endOpenList.length) {\n        node = startOpenList.shift();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened) {\n            if (neighbor.by === BY_END) {\n              return Util.biBacktrace(node, neighbor);\n            }\n\n            continue;\n          }\n\n          startOpenList.push(neighbor);\n          neighbor.parent = node;\n          neighbor.opened = true;\n          neighbor.by = BY_START;\n        }\n\n        node = endOpenList.shift();\n        node.closed = true;\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed) {\n            continue;\n          }\n\n          if (neighbor.opened) {\n            if (neighbor.by === BY_START) {\n              return Util.biBacktrace(neighbor, node);\n            }\n\n            continue;\n          }\n\n          endOpenList.push(neighbor);\n          neighbor.parent = node;\n          neighbor.opened = true;\n          neighbor.by = BY_END;\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BiBreadthFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var BiAStarFinder = __webpack_require__(22);\n\n    function BiBestFirstFinder(opt) {\n      BiAStarFinder.call(this, opt);\n      var orig = this.heuristic;\n\n      this.heuristic = function (dx, dy) {\n        return orig(dx, dy) * 1e6;\n      };\n    }\n\n    BiBestFirstFinder.prototype = new BiAStarFinder();\n    BiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\n    module.exports = BiBestFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var AStarFinder = __webpack_require__(23);\n\n    function DijkstraFinder(opt) {\n      AStarFinder.call(this, opt);\n\n      this.heuristic = function (dx, dy) {\n        return 0;\n      };\n    }\n\n    DijkstraFinder.prototype = new AStarFinder();\n    DijkstraFinder.prototype.constructor = DijkstraFinder;\n    module.exports = DijkstraFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Util = __webpack_require__(4);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function BreadthFirstFinder(opt) {\n      opt = opt || {};\n      this.allowDiagonal = opt.allowDiagonal;\n      this.dontCrossCorners = opt.dontCrossCorners;\n      this.diagonalMovement = opt.diagonalMovement;\n\n      if (!this.diagonalMovement) {\n        if (!this.allowDiagonal) {\n          this.diagonalMovement = DiagonalMovement.Never;\n        } else {\n          if (this.dontCrossCorners) {\n            this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\n          } else {\n            this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\n          }\n        }\n      }\n    }\n\n    BreadthFirstFinder.prototype.findPath = function (startX, startY, endX, endY, grid) {\n      var openList = [],\n          diagonalMovement = this.diagonalMovement,\n          startNode = grid.getNodeAt(startX, startY),\n          endNode = grid.getNodeAt(endX, endY),\n          neighbors,\n          neighbor,\n          node,\n          i,\n          l;\n      openList.push(startNode);\n      startNode.opened = true;\n\n      while (openList.length) {\n        node = openList.shift();\n        node.closed = true;\n\n        if (node === endNode) {\n          return Util.backtrace(endNode);\n        }\n\n        neighbors = grid.getNeighbors(node, diagonalMovement);\n\n        for (i = 0, l = neighbors.length; i < l; ++i) {\n          neighbor = neighbors[i];\n\n          if (neighbor.closed || neighbor.opened) {\n            continue;\n          }\n\n          openList.push(neighbor);\n          neighbor.opened = true;\n          neighbor.parent = node;\n        }\n      }\n\n      return [];\n    };\n\n    module.exports = BreadthFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var AStarFinder = __webpack_require__(23);\n\n    function BestFirstFinder(opt) {\n      AStarFinder.call(this, opt);\n      var orig = this.heuristic;\n\n      this.heuristic = function (dx, dy) {\n        return orig(dx, dy) * 1e6;\n      };\n    }\n\n    BestFirstFinder.prototype = new AStarFinder();\n    BestFirstFinder.prototype.constructor = BestFirstFinder;\n    module.exports = BestFirstFinder;\n  }, function (module, exports, __webpack_require__) {\n    var Node = __webpack_require__(24);\n\n    var DiagonalMovement = __webpack_require__(2);\n\n    function Grid(width_or_matrix, height, matrix) {\n      var width;\n\n      if (typeof width_or_matrix !== \"object\") {\n        width = width_or_matrix;\n      } else {\n        height = width_or_matrix.length;\n        width = width_or_matrix[0].length;\n        matrix = width_or_matrix;\n      }\n\n      this.width = width;\n      this.height = height;\n      this.nodes = this._buildNodes(width, height, matrix);\n    }\n\n    Grid.prototype._buildNodes = function (width, height, matrix) {\n      var i,\n          j,\n          nodes = new Array(height);\n\n      for (i = 0; i < height; ++i) {\n        nodes[i] = new Array(width);\n\n        for (j = 0; j < width; ++j) {\n          nodes[i][j] = new Node(j, i);\n        }\n      }\n\n      if (matrix === undefined) {\n        return nodes;\n      }\n\n      if (matrix.length !== height || matrix[0].length !== width) {\n        throw new Error(\"Matrix size does not fit\");\n      }\n\n      for (i = 0; i < height; ++i) {\n        for (j = 0; j < width; ++j) {\n          if (matrix[i][j]) {\n            nodes[i][j].walkable = false;\n          }\n        }\n      }\n\n      return nodes;\n    };\n\n    Grid.prototype.getNodeAt = function (x, y) {\n      return this.nodes[y][x];\n    };\n\n    Grid.prototype.isWalkableAt = function (x, y) {\n      return this.isInside(x, y) && this.nodes[y][x].walkable;\n    };\n\n    Grid.prototype.isInside = function (x, y) {\n      return x >= 0 && x < this.width && y >= 0 && y < this.height;\n    };\n\n    Grid.prototype.setWalkableAt = function (x, y, walkable) {\n      this.nodes[y][x].walkable = walkable;\n    };\n\n    Grid.prototype.getNeighbors = function (node, diagonalMovement) {\n      var x = node.x,\n          y = node.y,\n          neighbors = [],\n          s0 = false,\n          d0 = false,\n          s1 = false,\n          d1 = false,\n          s2 = false,\n          d2 = false,\n          s3 = false,\n          d3 = false,\n          nodes = this.nodes;\n\n      if (this.isWalkableAt(x, y - 1)) {\n        neighbors.push(nodes[y - 1][x]);\n        s0 = true;\n      }\n\n      if (this.isWalkableAt(x + 1, y)) {\n        neighbors.push(nodes[y][x + 1]);\n        s1 = true;\n      }\n\n      if (this.isWalkableAt(x, y + 1)) {\n        neighbors.push(nodes[y + 1][x]);\n        s2 = true;\n      }\n\n      if (this.isWalkableAt(x - 1, y)) {\n        neighbors.push(nodes[y][x - 1]);\n        s3 = true;\n      }\n\n      if (diagonalMovement === DiagonalMovement.Never) {\n        return neighbors;\n      }\n\n      if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\n        d0 = s3 && s0;\n        d1 = s0 && s1;\n        d2 = s1 && s2;\n        d3 = s2 && s3;\n      } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\n        d0 = s3 || s0;\n        d1 = s0 || s1;\n        d2 = s1 || s2;\n        d3 = s2 || s3;\n      } else if (diagonalMovement === DiagonalMovement.Always) {\n        d0 = true;\n        d1 = true;\n        d2 = true;\n        d3 = true;\n      } else {\n        throw new Error(\"Incorrect value of diagonalMovement\");\n      }\n\n      if (d0 && this.isWalkableAt(x - 1, y - 1)) {\n        neighbors.push(nodes[y - 1][x - 1]);\n      }\n\n      if (d1 && this.isWalkableAt(x + 1, y - 1)) {\n        neighbors.push(nodes[y - 1][x + 1]);\n      }\n\n      if (d2 && this.isWalkableAt(x + 1, y + 1)) {\n        neighbors.push(nodes[y + 1][x + 1]);\n      }\n\n      if (d3 && this.isWalkableAt(x - 1, y + 1)) {\n        neighbors.push(nodes[y + 1][x - 1]);\n      }\n\n      return neighbors;\n    };\n\n    Grid.prototype.clone = function () {\n      var i,\n          j,\n          width = this.width,\n          height = this.height,\n          thisNodes = this.nodes,\n          newGrid = new Grid(width, height),\n          newNodes = new Array(height);\n\n      for (i = 0; i < height; ++i) {\n        newNodes[i] = new Array(width);\n\n        for (j = 0; j < width; ++j) {\n          newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\n        }\n      }\n\n      newGrid.nodes = newNodes;\n      return newGrid;\n    };\n\n    module.exports = Grid;\n  }, function (module, exports) {\n    module.exports = function (module) {\n      if (!module.webpackPolyfill) {\n        module.deprecate = function () {};\n\n        module.paths = [];\n        if (!module.children) module.children = [];\n        Object.defineProperty(module, \"loaded\", {\n          enumerable: true,\n          get: function () {\n            return module.l;\n          }\n        });\n        Object.defineProperty(module, \"id\", {\n          enumerable: true,\n          get: function () {\n            return module.i;\n          }\n        });\n        module.webpackPolyfill = 1;\n      }\n\n      return module;\n    };\n  }, function (module, exports, __webpack_require__) {\n    (function (module) {\n      (function () {\n        var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n        floor = Math.floor, min = Math.min;\n\n        defaultCmp = function (x, y) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        };\n\n        insort = function (a, x, lo, hi, cmp) {\n          var mid;\n\n          if (lo == null) {\n            lo = 0;\n          }\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (lo < 0) {\n            throw new Error(\"lo must be non-negative\");\n          }\n\n          if (hi == null) {\n            hi = a.length;\n          }\n\n          while (lo < hi) {\n            mid = floor((lo + hi) / 2);\n\n            if (cmp(x, a[mid]) < 0) {\n              hi = mid;\n            } else {\n              lo = mid + 1;\n            }\n          }\n\n          return [].splice.apply(a, [lo, lo - lo].concat(x)), x;\n        };\n\n        heappush = function (array, item, cmp) {\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          array.push(item);\n          return _siftdown(array, 0, array.length - 1, cmp);\n        };\n\n        heappop = function (array, cmp) {\n          var lastelt, returnitem;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          lastelt = array.pop();\n\n          if (array.length) {\n            returnitem = array[0];\n            array[0] = lastelt;\n\n            _siftup(array, 0, cmp);\n          } else {\n            returnitem = lastelt;\n          }\n\n          return returnitem;\n        };\n\n        heapreplace = function (array, item, cmp) {\n          var returnitem;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          returnitem = array[0];\n          array[0] = item;\n\n          _siftup(array, 0, cmp);\n\n          return returnitem;\n        };\n\n        heappushpop = function (array, item, cmp) {\n          var _ref;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (array.length && cmp(array[0], item) < 0) {\n            _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n\n            _siftup(array, 0, cmp);\n          }\n\n          return item;\n        };\n\n        heapify = function (array, cmp) {\n          var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          _ref1 = function () {\n            _results1 = [];\n\n            for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--) {\n              _results1.push(_j);\n            }\n\n            return _results1;\n          }.apply(this).reverse();\n\n          _results = [];\n\n          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n            i = _ref1[_i];\n\n            _results.push(_siftup(array, i, cmp));\n          }\n\n          return _results;\n        };\n\n        updateItem = function (array, item, cmp) {\n          var pos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          pos = array.indexOf(item);\n\n          if (pos === -1) {\n            return;\n          }\n\n          _siftdown(array, 0, pos, cmp);\n\n          return _siftup(array, pos, cmp);\n        };\n\n        nlargest = function (array, n, cmp) {\n          var elem, result, _i, _len, _ref;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          result = array.slice(0, n);\n\n          if (!result.length) {\n            return result;\n          }\n\n          heapify(result, cmp);\n          _ref = array.slice(n);\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            elem = _ref[_i];\n            heappushpop(result, elem, cmp);\n          }\n\n          return result.sort(cmp).reverse();\n        };\n\n        nsmallest = function (array, n, cmp) {\n          var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          if (n * 10 <= array.length) {\n            result = array.slice(0, n).sort(cmp);\n\n            if (!result.length) {\n              return result;\n            }\n\n            los = result[result.length - 1];\n            _ref = array.slice(n);\n\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              elem = _ref[_i];\n\n              if (cmp(elem, los) < 0) {\n                insort(result, elem, 0, null, cmp);\n                result.pop();\n                los = result[result.length - 1];\n              }\n            }\n\n            return result;\n          }\n\n          heapify(array, cmp);\n          _results = [];\n\n          for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n            _results.push(heappop(array, cmp));\n          }\n\n          return _results;\n        };\n\n        _siftdown = function (array, startpos, pos, cmp) {\n          var newitem, parent, parentpos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          newitem = array[pos];\n\n          while (pos > startpos) {\n            parentpos = pos - 1 >> 1;\n            parent = array[parentpos];\n\n            if (cmp(newitem, parent) < 0) {\n              array[pos] = parent;\n              pos = parentpos;\n              continue;\n            }\n\n            break;\n          }\n\n          return array[pos] = newitem;\n        };\n\n        _siftup = function (array, pos, cmp) {\n          var childpos, endpos, newitem, rightpos, startpos;\n\n          if (cmp == null) {\n            cmp = defaultCmp;\n          }\n\n          endpos = array.length;\n          startpos = pos;\n          newitem = array[pos];\n          childpos = 2 * pos + 1;\n\n          while (childpos < endpos) {\n            rightpos = childpos + 1;\n\n            if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n              childpos = rightpos;\n            }\n\n            array[pos] = array[childpos];\n            pos = childpos;\n            childpos = 2 * pos + 1;\n          }\n\n          array[pos] = newitem;\n          return _siftdown(array, startpos, pos, cmp);\n        };\n\n        Heap = function () {\n          Heap.push = heappush;\n          Heap.pop = heappop;\n          Heap.replace = heapreplace;\n          Heap.pushpop = heappushpop;\n          Heap.heapify = heapify;\n          Heap.updateItem = updateItem;\n          Heap.nlargest = nlargest;\n          Heap.nsmallest = nsmallest;\n\n          function Heap(cmp) {\n            this.cmp = cmp != null ? cmp : defaultCmp;\n            this.nodes = [];\n          }\n\n          Heap.prototype.push = function (x) {\n            return heappush(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.pop = function () {\n            return heappop(this.nodes, this.cmp);\n          };\n\n          Heap.prototype.peek = function () {\n            return this.nodes[0];\n          };\n\n          Heap.prototype.contains = function (x) {\n            return this.nodes.indexOf(x) !== -1;\n          };\n\n          Heap.prototype.replace = function (x) {\n            return heapreplace(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.pushpop = function (x) {\n            return heappushpop(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.heapify = function () {\n            return heapify(this.nodes, this.cmp);\n          };\n\n          Heap.prototype.updateItem = function (x) {\n            return updateItem(this.nodes, x, this.cmp);\n          };\n\n          Heap.prototype.clear = function () {\n            return this.nodes = [];\n          };\n\n          Heap.prototype.empty = function () {\n            return this.nodes.length === 0;\n          };\n\n          Heap.prototype.size = function () {\n            return this.nodes.length;\n          };\n\n          Heap.prototype.clone = function () {\n            var heap;\n            heap = new Heap();\n            heap.nodes = this.nodes.slice(0);\n            return heap;\n          };\n\n          Heap.prototype.toArray = function () {\n            return this.nodes.slice(0);\n          };\n\n          Heap.prototype.insert = Heap.prototype.push;\n          Heap.prototype.top = Heap.prototype.peek;\n          Heap.prototype.front = Heap.prototype.peek;\n          Heap.prototype.has = Heap.prototype.contains;\n          Heap.prototype.copy = Heap.prototype.clone;\n          return Heap;\n        }();\n\n        if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n          module.exports = Heap;\n        } else {\n          window.Heap = Heap;\n        }\n      }).call(this);\n    }).call(this, __webpack_require__(65)(module));\n  }, function (module, exports, __webpack_require__) {\n    module.exports = {\n      Heap: __webpack_require__(15),\n      Node: __webpack_require__(24),\n      Grid: __webpack_require__(64),\n      Util: __webpack_require__(4),\n      DiagonalMovement: __webpack_require__(2),\n      Heuristic: __webpack_require__(10),\n      AStarFinder: __webpack_require__(23),\n      BestFirstFinder: __webpack_require__(63),\n      BreadthFirstFinder: __webpack_require__(62),\n      DijkstraFinder: __webpack_require__(61),\n      BiAStarFinder: __webpack_require__(22),\n      BiBestFirstFinder: __webpack_require__(60),\n      BiBreadthFirstFinder: __webpack_require__(59),\n      BiDijkstraFinder: __webpack_require__(58),\n      IDAStarFinder: __webpack_require__(57),\n      JumpPointFinder: __webpack_require__(56)\n    };\n  }, function (module, exports, __webpack_require__) {\n    module.exports = __webpack_require__(67);\n  }, function (module, exports) {\n    var proto = Element.prototype;\n    var vendor = proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n    module.exports = match;\n\n    function match(el, selector) {\n      if (vendor) return vendor.call(el, selector);\n      var nodes = el.parentNode.querySelectorAll(selector);\n\n      for (var i = 0; i < nodes.length; ++i) {\n        if (nodes[i] == el) return true;\n      }\n\n      return false;\n    }\n  }, function (module, exports, __webpack_require__) {\n    var matches = __webpack_require__(69);\n\n    module.exports = function (element, selector, checkYoSelf) {\n      var parent = checkYoSelf ? element : element.parentNode;\n\n      while (parent && parent !== document) {\n        if (matches(parent, selector)) return parent;\n        parent = parent.parentNode;\n      }\n    };\n  }]);\n});","map":{"version":3,"sources":["webpack://storm-react-diagrams/webpack/universalModuleDefinition","webpack://storm-react-diagrams/webpack/bootstrap","webpack:/storm-react-diagrams/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}","webpack://storm-react-diagrams/node_modules/pathfinding/src/core/DiagonalMovement.js","webpack://storm-react-diagrams/src/widgets/BaseWidget.tsx","webpack://storm-react-diagrams/node_modules/pathfinding/src/core/Util.js","webpack://storm-react-diagrams/src/models/PointModel.ts","webpack://storm-react-diagrams/src/models/BaseModel.ts","webpack://storm-react-diagrams/src/Toolkit.ts","webpack://storm-react-diagrams/src/factories/AbstractFactory.ts","webpack://storm-react-diagrams/src/models/NodeModel.ts","webpack://storm-react-diagrams/node_modules/pathfinding/src/core/Heuristic.js","webpack://storm-react-diagrams/src/actions/BaseAction.ts","webpack://storm-react-diagrams/src/models/PortModel.ts","webpack://storm-react-diagrams/src/BaseEntity.ts","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack://storm-react-diagrams/node_modules/heap/index.js","webpack://storm-react-diagrams/src/routing/PathFinding.ts","webpack://storm-react-diagrams/src/models/LabelModel.ts","webpack://storm-react-diagrams/src/defaults/models/DefaultLabelModel.tsx","webpack://storm-react-diagrams/src/defaults/models/DefaultLinkModel.ts","webpack://storm-react-diagrams/src/defaults/models/DefaultPortModel.ts","webpack://storm-react-diagrams/src/models/LinkModel.ts","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/AStarFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/core/Node.js","webpack://storm-react-diagrams/src/widgets/NodeWidget.tsx","webpack://storm-react-diagrams/src/widgets/layers/NodeLayerWidget.tsx","webpack://storm-react-diagrams/src/widgets/LinkWidget.tsx","webpack://storm-react-diagrams/src/widgets/layers/LinkLayerWidget.tsx","webpack://storm-react-diagrams/src/actions/SelectingAction.ts","webpack://storm-react-diagrams/src/actions/MoveItemsAction.ts","webpack://storm-react-diagrams/src/actions/MoveCanvasAction.ts","webpack://storm-react-diagrams/src/factories/AbstractNodeFactory.ts","webpack://storm-react-diagrams/src/widgets/PortWidget.tsx","webpack://storm-react-diagrams/src/defaults/widgets/DefaultPortLabelWidget.tsx","webpack://storm-react-diagrams/src/defaults/widgets/DefaultNodeWidget.tsx","webpack://storm-react-diagrams/src/factories/AbstractLinkFactory.ts","webpack://storm-react-diagrams/src/defaults/widgets/DefaultLinkWidget.tsx","webpack://storm-react-diagrams/src/defaults/models/DefaultNodeModel.ts","webpack://storm-react-diagrams/src/defaults/widgets/DefaultLabelWidget.tsx","webpack://storm-react-diagrams/src/factories/AbstractLabelFactory.ts","webpack://storm-react-diagrams/src/defaults/factories/DefaultLabelFactory.tsx","webpack://storm-react-diagrams/src/factories/AbstractPortFactory.ts","webpack://storm-react-diagrams/src/defaults/factories/DefaultPortFactory.tsx","webpack://storm-react-diagrams/src/models/DiagramModel.ts","webpack://storm-react-diagrams/src/main.ts","webpack://storm-react-diagrams/src/widgets/DiagramWidget.tsx","webpack://storm-react-diagrams/src/defaults/factories/DefaultNodeFactory.ts","webpack://storm-react-diagrams/src/defaults/factories/DefaultLinkFactory.tsx","webpack://storm-react-diagrams/src/DiagramEngine.ts","webpack://storm-react-diagrams/node_modules/paths-js/geom.js","webpack://storm-react-diagrams/node_modules/paths-js/path.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/core/Grid.js","webpack://storm-react-diagrams/(webpack)/buildin/module.js","webpack://storm-react-diagrams/node_modules/heap/lib/heap.js","webpack://storm-react-diagrams/node_modules/pathfinding/src/PathFinding.js","webpack://storm-react-diagrams/node_modules/pathfinding/index.js","webpack://storm-react-diagrams/node_modules/matches-selector/index.js","webpack://storm-react-diagrams/node_modules/closest/index.js"],"names":["module","define","exports","root","window","i","l","modules","__webpack_require__","Object","configurable","enumerable","get","value","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","__extends","Component","name","props","_super","this","_this","className","BaseWidget","selector","baseClass","extraProps","getClassName","node","path","pathB","a","b","dx","dy","sum","line","sx","sy","err","e2","x0","y0","len","coord0","interpolated","interpolatedLen","coord1","j","expanded","x1","y1","ex","newPath","coord","ey","blocked","testCoord","lastValidCoord","px","py","lx","ldx","sq","compressed","ly","ldy","link","points","x","y","parent","PointModel","isSelected","call","isConnectedToPort","getPortForPoint","getParent","ob","engine","deSerialize","_","merge","serialize","removePoint","remove","isLocked","type","id","selected","BaseModel","iterateListeners","listener","event","selectionChanged","__assign","entityRemoved","Toolkit","TESTING","TESTING_UID","replace","r","Math","random","v","c","toString","element","document","body","closest","firstPoint","lastPoint","curvy","isHorizontal","abs","curvyX","curvyY","pathCoords","Path","moveto","PathFinding_1","slice","forEach","lineto","coords","print","AbstractFactory","nodeType","extras","ports","NodeModel","oldX","oldY","port","getLinks","point","getPointForPort","entities","getSelectedEntities","concat","map","portOb","getPortFactory","getNewInstance","addPort","lookupTable","clone","setParent","_a","width","height","manhattan","euclidean","octile","chebyshev","mouseX","mouseY","ms","Date","getTime","maximumLinks","links","PortModel","parentNode","getID","isFinite","numberOfLinks","size","values","listeners","Toolkit_1","UID","locked","BaseEntity","clearListeners","doClone","data","cb","firing","entity","stopPropagation","hasOwnProperty","uid","lockChanged","opt","JumpPointFinderBase","startNode","endNode","openList","heuristic","endX","endY","neighbors","jumpPoint","jx","neighbor","jy","jumpNode","d","ng","pathFinderInstance","PF","JumpPointFinder","Heuristic","diagonalMovement","DiagonalMovement","diagramEngine","instance","PathFinding","from","to","matrix","getCanvasMatrix","grid","Grid","findPath","translateRoutingX","floor","translateRoutingY","startIndex","findIndex","endIndex","length","reverse","undefined","pathToStart","pathToEnd","start","end","routingMatrix","dynamicPath","Util","compressPath","offsetX","offsetY","LabelModel","DefaultLabelModel","label","color","curvyness","DefaultLinkModel","LabelModel_1","addLabel","labelOb","DefaultLabelModel_1","setLabel","widthChanged","colorChanged","isInput","in","DefaultPortModel","object","createLinkModel","setSourcePort","setTargetPort","DefaultLinkModel_1","linkType","PointModel_1","sourcePort","targetPort","labels","LinkModel","p","getLabelFactory","target","getNode","getPortFromID","source","setPoints","getPoints","removeLink","index","getPointIndex","indexOf","getFirstPoint","getLastPoint","addLink","sourcePortChanged","targetPortChanged","addPoint","generatePoint","push","pointModel","splice","BiAStarFinder","startOpenList","endOpenList","weight","BY_START","AStarFinder","state","NodeWidget","canEntityRepaint","bem","React","getProps","data-nodeid","style","top","left","children","nodesRendered","diagramModel","getDiagramModel","getNodes","updateDimensions","getNodeDimensions","NodeLayerWidget","updateNodeDimensions","transform","getOffsetX","getOffsetY","getZoomLevel","createElement","NodeWidget_1","key","generateWidgetForNode","LinkWidget","LinkLayerWidget","canvas","linksThatHaveInitiallyRendered","portCenter","getPortCenter","updateLocation","portCoords","getPortCoords","updateCoords","ignore","last","generatedLink","generateWidgetForLink","Error","getType","LinkWidget_1","cloneElement","pointAdded","mouseX2","mouseY2","SelectingAction","right","bottom","z","dimensions","getBoxDimensions","moved","enableRepaintEntities","getSelectedItems","selectedItems","filter","isModelLocked","item","selectionModels","model","initialX","initialY","initialOffsetX","initialOffsetY","PortWidget","onMouseEnter","setState","onMouseLeave","data-name","DefaultPortLabel","PortWidget_1","DefaultNodeWidget","DefaultPortLabelWidget_1","background","getInPorts","generatePort","bind","getOutPorts","DefaultLinkWidget","smooth","refLabels","refPaths","isSmartRoutingEnabled","pathFinding","calculateLabelPosition","requestAnimationFrame","calculateAllLabelPosition","shiftKey","getMaxNumberPointsPerLink","getRelativeMousePoint","setSelected","forceUpdate","pointIndex","cx","cy","data-id","data-linkid","opacity","offsetWidth","offsetHeight","ref","getFactoryForLabel","generateReactWidget","Bottom","getFactoryForLink","generateLinkSegment","Top","strokeLinecap","strokeOpacity","strokeWidth","onContextMenu","preventDefault","lengths","getTotalLength","labelPosition","reduce","previousValue","currentValue","pathIndex","position","labelDimensions","pathCentre","getPointAtLength","labelCoordinates","setAttribute","paths","isSmartRoutingApplicable","directPathCoords","calculateDirectPath","first","getRoutingMatrix","smartLink","calculateLinkStartEndCoords","simplifiedPath","calculateDynamicPath","generateLink","generateDynamicPath","onMouseDown","addPointToLink","xOrY","margin","pointLeft","pointRight","generateCurvePath","this_1","generateLinePath","data-point","generateLabel","labelModel","DefaultNodeModel","DefaultPortModel_1","portModel","DefaultLabelWidget","DefaultLabelFactory","DefaultLabelWidget_1","initialConfig","DefaultPortFactory","nodes","zoom","rendered","gridSize","DiagramModel","gridUpdated","pos","nodeOb","getNodeFactory","addNode","linkOb","getLinkFactory","Array","isArray","filters","items","flatMap","uniq","includes","NodeModel_1","LinkModel_1","PortModel_1","zoomUpdated","offsetUpdated","models","addListener","linksUpdated","isCreated","removeNode","nodesUpdated","getLink","__export","DiagramWidget","allowLooseLinks","allowCanvasTranslation","allowCanvasZoom","inverseZoom","maxNumberPointsPerLink","Infinity","smartRouting","deleteKeys","onMouseMove","onMouseUp","action","wasMoved","renderedNodes","windowListener","diagramEngineListener","removeListener","setCanvas","removeEventListener","onKeyUpPointer","nextProps","repaintCanvas","onKeyUp","addEventListener","focus","nodeElement","getAttribute","getPort","getPointModel","actionStillFiring","shouldSkipEvent","actionStoppedFiring","actionStartedFiring","SelectingAction_1","relative","getRelativePoint","clientX","clientY","containsElement","allSelected","fireAction","MoveItemsAction_1","amountX_1","amountY_1","amountZoom_1","getGridPosition","getPorts","calculateRoutingMatrix","calculateCanvasMatrix","MoveCanvasAction_1","setOffset","keyCode","getMouseElement","getTargetPort","getSourcePort","newLink","removePointsBefore","removePointsAfter","selectedPoint","canLinkToPort","some","clearRepaintEntities","stopFiringAction","setMaxNumberPointsPerLink","setSmartRoutingStatus","onWheel","oldZoomFactor","scrollDelta","deltaY","ctrlKey","setZoomLevel","zoomFactor","boundingRect","currentTarget","getBoundingClientRect","clientWidth","clientHeight","widthDiff","heightDiff","xFactor","yFactor","startFiringAction","clearSelection","removeMiddlePoints","LinkLayerWidget_1","NodeLayerWidget_1","drawSelectionBox","DefaultNodeFactory","DefaultNodeWidget_1","DefaultNodeModel_1","DefaultLinkFactory","DefaultLinkWidget_1","widget","stroke","BaseEntity_1","DiagramModel_1","nodeFactories","linkFactories","portFactories","labelFactories","paintableWidgets","DiagramEngine","registerNodeFactory","main_1","registerLinkFactory","registerPortFactory","DefaultPortFactory_1","registerLabelFactory","DefaultLabelFactory_1","baseModel","recalculatePortsVisually","prototype","factory","labelFactoriesUpdated","portFactoriesUpdated","nodeFactoriesUpdated","linkFactoriesUpdated","linkFactory","nodeFactory","getFactoryForNode","canvasRect","querySelector","getName","sourceElement","getNodePortElement","sourceRect","rel","getNodeElement","nodeRect","max","status","canvasMatrix","canvasWidth","hAdjustmentFactor","canvasHeight","vAdjustmentFactor","matrixWidth","ceil","matrixHeight","range","fill","cloneDeep","markNodes","markPorts","allNodesCoords","allLinks","allPortsCoords","allPointsCoords","minX","min","minBy","maxXElement","maxBy","maxX","minY","maxYElement","maxY","startX","startY","markMatrixPoint","allElements","scrollWidth","scrollHeight","_n","_arr","_d","_e","s","K","rx","ry","ax","isDegenerate","D","l2","newRx","newRy","newAx","distPointToPoint","parabolsCrossX","copy","V","command","params","H","A","sweepFlag","C","Z","default","newParams","arguments","hlineto","vlineto","closepath","curveto","smoothcurveto","qcurveto","smoothqcurveto","arc","translate","prev","rotate","newInstructions","scale","shearX","shearY","_iteratorNormalCompletion","ps","_didIteratorError","_iteratorError","_iterator","instructions","connect","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","JPFMoveDiagonallyIfNoObstacles","isNextWalkable","JPFAlwaysMoveDiagonally","JPFNeverMoveDiagonally","IDAStarFinder","nodesVisited","route","neighbour","k","t","cutOff","BiDijkstraFinder","BiBreadthFirstFinder","BiBestFirstFinder","DijkstraFinder","BreadthFirstFinder","BestFirstFinder","s0","s1","s2","s3","d0","d1","d2","d3","thisNodes","newGrid","newNodes","defaultCmp","insort","lo","cmp","hi","mid","heappush","array","heappop","lastelt","returnitem","_siftup","heapreplace","heappushpop","_ref","heapify","_ref1","_results1","apply","_results","_i","updateItem","_siftdown","nlargest","result","elem","nsmallest","los","newitem","parentpos","endpos","startpos","childpos","rightpos","Heap","heap","Node","proto"],"mappings":"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,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAGAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,CAAAA;;AAEAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACAA,IAAAA,QAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAAAA,G7CeA,E6CfAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AAAAA,QAAAA,SAAAA,GAAAA,QAAAA,KAAAA,SAAAA,IAAAA,YAAAA;AAAAA,UAAAA,aAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA;AAAAA,QAAAA,SAAAA,EAAAA;AAAAA,mBAAAA,KAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA;AAAAA,OAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,aAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,cAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA,OAAAA;;AAAAA,aAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAAAA,iBAAAA,EAAAA,GAAAA;AAAAA,eaAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,MAAAA,CAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA;;AAAAA,aAAAA,CAAAA;AAAAA,KAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA;AAAAA,KAAAA;;ACpDA,QAAA,KAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEA,QAAA,CAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,iBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,iBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,SAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEA,QAAA,kBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,iBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,iBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,WAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,YAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,WAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAKA,QAAA,YAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AA+BA,QAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmCnd,MAAAA,SAAAA,CAAAA,aAAAA,EAAAA,MAAAA,CAAAA;;AAclC,eAAA,aAAA,CAAYG,KAAZ,EAAYA;AAAZ,YAAA,KAAA,GACCC,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAM,aAANA,EAAqBD,KAArBC,KAA2BC,IAD5B;;AAFAC,QAAAA,KAAAA,CAAAA,cAAAA,GAA4D,IAA5DA;AAICA,QAAAA,KAAAA,CAAKud,WAALvd,GAAmBA,KAAAA,CAAKud,WAALvd,CAAiB6V,IAAjB7V,CAAsBA,KAAtBA,CAAnBA;AACAA,QAAAA,KAAAA,CAAKwd,SAALxd,GAAiBA,KAAAA,CAAKwd,SAALxd,CAAe6V,IAAf7V,CAAoBA,KAApBA,CAAjBA;AACAA,QAAAA,KAAAA,CAAK8Q,KAAL9Q,GAAK8Q;AACJ2M,UAAAA,MAAAA,EAAQ,IADJ3M;AAEJ4M,UAAAA,QAAAA,EAAU,KAFN5M;AAGJ6M,UAAAA,aAAAA,EAAe,KAHX7M;AAIJ8M,UAAAA,cAAAA,EAAgB,IAJZ9M;AAKJ+M,UAAAA,qBAAAA,EAAuB,IALnB/M;AAMJvL,UAAAA,QAAAA,EAAU;AANNuL,SAAL9Q;AAMW,eAAA,KAAA;AAIZ8c;;AAAAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,GAAAA,YAAAA;AACC/c,aAAKF,KAALE,CAAW2L,aAAX3L,CAAyB+d,cAAzB/d,CAAwCA,KAAK+Q,KAAL/Q,CAAW8d,qBAAnD9d;AACAA,aAAKF,KAALE,CAAW2L,aAAX3L,CAAyBge,SAAzBhe,CAAmC,IAAnCA;AACAnB,QAAAA,MAAAA,CAAOof,mBAAPpf,CAA2B,OAA3BA,EAAoCmB,KAAKke,cAAzCrf;AACAA,QAAAA,MAAAA,CAAOof,mBAAPpf,CAA2B,SAA3BA,EAAsCmB,KAAKyd,SAA3C5e;AACAA,QAAAA,MAAAA,CAAOof,mBAAPpf,CAA2B,WAA3BA,EAAwCmB,KAAKwd,WAA7C3e;AAA6C2e,OAL9CT;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,yBAAAA,GAAAA,UAA0BoB,SAA1BpB,EAA0BoB;AAA1BpB,YAAAA,KAAAA,GAAAA,IAAAA;;AACC,YAAI/c,KAAKF,KAALE,CAAW2L,aAAX3L,KAA6Bme,SAAAA,CAAUxS,aAA3C,EAA0D;AACzD3L,eAAKF,KAALE,CAAW2L,aAAX3L,CAAyB+d,cAAzB/d,CAAwCA,KAAK+Q,KAAL/Q,CAAW8d,qBAAnD9d;AACA,cAAM8d,qBAAAA,GAAwBK,SAAAA,CAAUxS,aAAVwS,CAAwB3B,WAAxB2B,CAAwB3B;AACrD4B,YAAAA,aAAAA,EAAe,YAAA;AAAM,qBAAA,KAAA,CAAKvH,WAAL,EAAA;AAAKA;AAD2B2F,WAAxB2B,CAA9B;AAGAne,eAAKoV,QAALpV,CAAKoV;AAAW0I,YAAAA,qBAAAA,EAAqBA;AAAhC1I,WAALpV;AAAqC8d;AAAAA,OANvCf;;AAUAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoBoB,SAApBpB,EAAoBoB;AACnB,YAAIne,KAAKF,KAALE,CAAW2L,aAAX3L,CAAyB2R,YAAzB3R,CAAsCoE,EAAtCpE,KAA6Cme,SAAAA,CAAUxS,aAAVwS,CAAwBxM,YAAxBwM,CAAqC/Z,EAAtF,EAA0F;AACzFpE,eAAKoV,QAALpV,CAAKoV;AAAWwI,YAAAA,aAAAA,EAAe;AAA1BxI,WAALpV;AACAme,UAAAA,SAAAA,CAAUxS,aAAVwS,CAAwBxM,YAAxBwM,CAAqClD,QAArCkD,GAAgD,IAAhDA;AAED;;AAAA,YAAA,CAAKA,SAAAA,CAAUxS,aAAVwS,CAAwBxM,YAAxBwM,CAAqClD,QAA1C,EAAoD;AACnDjb,eAAKoV,QAALpV,CAAKoV;AAAWwI,YAAAA,aAAAA,EAAe;AAA1BxI,WAALpV;AACAme,UAAAA,SAAAA,CAAUxS,aAAVwS,CAAwBxM,YAAxBwM,CAAqClD,QAArCkD,GAAgD,IAAhDA;AAAgD;AAAA,OAPlDpB;;AAWAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAAA,YAAAA;AACC,YAAA,CAAK/c,KAAK+Q,KAAL/Q,CAAW4d,aAAhB,EAA+B;AAC9B5d,eAAKoV,QAALpV,CAAKoV;AACJwI,YAAAA,aAAAA,EAAe;AADXxI,WAALpV;AACgB;AAAA,OAHlB+c;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,YAAAA;AAAAA,YAAAA,KAAAA,GAAAA,IAAAA;;AACC/c,aAAKke,cAALle,GAAsBA,KAAKqe,OAALre,CAAa8V,IAAb9V,CAAkBA,IAAlBA,CAAtBA;AAGAA,aAAKoV,QAALpV,CAAKoV;AACJ5P,UAAAA,QAAAA,EAAUA,QADN4P;AAEJwI,UAAAA,aAAAA,EAAe,IAFXxI;AAGJ0I,UAAAA,qBAAAA,EAAuB9d,KAAKF,KAALE,CAAW2L,aAAX3L,CAAyBwc,WAAzBxc,CAAyBwc;AAC/C4B,YAAAA,aAAAA,EAAe,YAAA;AACdne,cAAAA,KAAAA,CAAK4W,WAAL5W;AAAK4W;AAFyC2F,WAAzBxc;AAHnBoV,SAALpV;AAUAnB,QAAAA,MAAAA,CAAOyf,gBAAPzf,CAAwB,OAAxBA,EAAiCmB,KAAKke,cAAtCrf,EAAsD,KAAtDA;;AAGA,YAAI,IAAJ,EAAqC;AACpCA,UAAAA,MAAAA,CAAO0f,KAAP1f;AAAO0f;AAAAA,OAlBTxB;;AAyBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,UAAgBtY,KAAhBsY,EAAgBtY;AACf,YAAI4K,MAAAA,GAAS5K,KAAAA,CAAM4K,MAAnB;AACA,YAAIsC,YAAAA,GAAe3R,KAAKF,KAALE,CAAW2L,aAAX3L,CAAyB2R,YAA5C;AAGA,YAAIpM,OAAAA,GAAUgE,SAAAA,CAAAA,OAAAA,CAAQ7D,OAAR6D,CAAgB8F,MAAhB9F,EAAwB,kBAAxBA,CAAd;;AACA,YAAIhE,OAAJ,EAAa;AACZ,cAAIiZ,WAAAA,GAAcjV,SAAAA,CAAAA,OAAAA,CAAQ7D,OAAR6D,CAAgB8F,MAAhB9F,EAAwB,oBAAxBA,CAAlB;AACA,iBAAA;AACCsL,YAAAA,KAAAA,EAAOlD,YAAAA,CACLrC,OADKqC,CACG6M,WAAAA,CAAYC,YAAZD,CAAyB,aAAzBA,CADH7M,EAEL+M,OAFK/M,CAEGpM,OAAAA,CAAQkZ,YAARlZ,CAAqB,WAArBA,CAFHoM,CADR;AAICpM,YAAAA,OAAAA,EAASA;AAJV,WAAA;AASDA;;AAAAA,QAAAA,OAAAA,GAAUgE,SAAAA,CAAAA,OAAAA,CAAQ7D,OAAR6D,CAAgB8F,MAAhB9F,EAAwB,iBAAxBA,CAAVhE;;AACA,YAAIA,OAAJ,EAAa;AACZ,iBAAA;AACCsP,YAAAA,KAAAA,EAAOlD,YAAAA,CACLkL,OADKlL,CACGpM,OAAAA,CAAQkZ,YAARlZ,CAAqB,aAArBA,CADHoM,EAELgN,aAFKhN,CAESpM,OAAAA,CAAQkZ,YAARlZ,CAAqB,SAArBA,CAFToM,CADR;AAICpM,YAAAA,OAAAA,EAASA;AAJV,WAAA;AASDA;;AAAAA,QAAAA,OAAAA,GAAUgE,SAAAA,CAAAA,OAAAA,CAAQ7D,OAAR6D,CAAgB8F,MAAhB9F,EAAwB,eAAxBA,CAAVhE;;AACA,YAAIA,OAAJ,EAAa;AACZ,iBAAA;AACCsP,YAAAA,KAAAA,EAAOlD,YAAAA,CAAakL,OAAblL,CAAqBpM,OAAAA,CAAQkZ,YAARlZ,CAAqB,aAArBA,CAArBoM,CADR;AAECpM,YAAAA,OAAAA,EAASA;AAFV,WAAA;AAODA;;AAAAA,QAAAA,OAAAA,GAAUgE,SAAAA,CAAAA,OAAAA,CAAQ7D,OAAR6D,CAAgB8F,MAAhB9F,EAAwB,oBAAxBA,CAAVhE;;AACA,YAAIA,OAAJ,EAAa;AACZ,iBAAA;AACCsP,YAAAA,KAAAA,EAAOlD,YAAAA,CAAarC,OAAbqC,CAAqBpM,OAAAA,CAAQkZ,YAARlZ,CAAqB,aAArBA,CAArBoM,CADR;AAECpM,YAAAA,OAAAA,EAASA;AAFV,WAAA;AAMD;;AAAA,eAAO,IAAP;AAAO,OA7CRwX;;AAgDAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,UAAAA,GAAAA,YAAAA;AACC,YAAI/c,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,IAAqBA,KAAKF,KAALE,CAAW4e,iBAApC,EAAuD;AACtD5e,eAAKF,KAALE,CAAW4e,iBAAX5e,CAA6BA,KAAK+Q,KAAL/Q,CAAW0d,MAAxC1d;AAAwC0d;AAAAA,OAF1CX;;AAMAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,UAAiB8B,eAAjB9B,EAAiB8B;AAChB,YAAI7e,KAAKF,KAALE,CAAW8e,mBAAX9e,IAAW8e,CAAwBD,eAAvC,EAAwD;AACvD7e,eAAKF,KAALE,CAAW8e,mBAAX9e,CAA+BA,KAAK+Q,KAAL/Q,CAAW0d,MAA1C1d;AAEDA;;AAAAA,aAAKoV,QAALpV,CAAKoV;AAAWsI,UAAAA,MAAAA,EAAQ;AAAnBtI,SAALpV;AAAwB,OAJzB+c;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkBW,MAAlBX,EAAkBW;AACjB,YAAItI,QAAAA,GAAW,IAAf;;AACA,YAAIpV,KAAKF,KAALE,CAAW+e,mBAAf,EAAoC;AACnC3J,UAAAA,QAAAA,GAAWpV,KAAKF,KAALE,CAAW+e,mBAAX/e,CAA+B0d,MAA/B1d,CAAXoV;AAED;;AAAA,YAAIA,QAAJ,EAAc;AACbpV,eAAKoV,QAALpV,CAAKoV;AAAWsI,YAAAA,MAAAA,EAAQA;AAAnBtI,WAALpV;AAAwB0d;AAAAA,OAN1BX;;AAUAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,UAAYtY,KAAZsY,EAAYtY;AAAZsY,YAAAA,KAAAA,GAAAA,IAAAA;;AACC,YAAIpR,aAAAA,GAAgB3L,KAAKF,KAALE,CAAW2L,aAA/B;AACA,YAAIgG,YAAAA,GAAehG,aAAAA,CAAciG,eAAdjG,EAAnB;;AAEA,YAAI3L,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,YAA6Bgf,iBAAAA,CAAAA,eAAjC,EAAkD;AACjD,cAAIC,QAAAA,GAAWtT,aAAAA,CAAcuT,gBAAdvT,CAA+BlH,KAAAA,CAAM0a,OAArCxT,EAA8ClH,KAAAA,CAAM2a,OAApDzT,CAAf;;AAEA9H,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU8N,YAAAA,CAAaE,QAAbF,EAAV9N,EAAmC,UAAA,IAAA,EAAA;AAClC,gBAAK5D,KAAAA,CAAK8Q,KAAL9Q,CAAWyd,MAAXzd,CAAsCof,eAAtCpf,CAAsDO,IAAAA,CAAKyC,CAA3DhD,EAA8DO,IAAAA,CAAK0C,CAAnEjD,EAAsE0R,YAAtE1R,CAAL,EAA0F;AACzFO,cAAAA,IAAAA,CAAKoW,WAALpW,CAAiB,IAAjBA;AAAiB;AAAA,WAFnBqD;;AAMAA,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU8N,YAAAA,CAAaxK,QAAbwK,EAAV9N,EAAmC,UAAA,IAAA,EAAA;AAClC,gBAAIyb,WAAAA,GAAc,IAAlB;;AACAzb,YAAAA,CAAAA,CAAE0C,OAAF1C,CAAUd,IAAAA,CAAKC,MAAfa,EAAuB,UAAA,KAAA,EAAA;AACtB,kBAAK5D,KAAAA,CAAK8Q,KAAL9Q,CAAWyd,MAAXzd,CAAsCof,eAAtCpf,CAAsDmH,KAAAA,CAAMnE,CAA5DhD,EAA+DmH,KAAAA,CAAMlE,CAArEjD,EAAwE0R,YAAxE1R,CAAL,EAA4F;AAC3FmH,gBAAAA,KAAAA,CAAMwP,WAANxP,CAAkB,IAAlBA;AAAkB,eADnB,MAEO;AACNkY,gBAAAA,WAAAA,GAAc,KAAdA;AAAc;AAAA,aAJhBzb;;AAQA,gBAAIyb,WAAJ,EAAiB;AAChBvc,cAAAA,IAAAA,CAAK6T,WAAL7T,CAAiB,IAAjBA;AAAiB;AAAA,WAXnBc;;AAeA7D,eAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB6T,OAAlB7T,GAA4Bif,QAAAA,CAAShc,CAArCjD;AACAA,eAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB8T,OAAlB9T,GAA4Bif,QAAAA,CAAS/b,CAArClD;AAEAA,eAAKuf,UAALvf;AACAA,eAAKoV,QAALpV,CAAKoV;AAAWsI,YAAAA,MAAAA,EAAQ1d,KAAK+Q,KAAL/Q,CAAW0d;AAA9BtI,WAALpV;AACA;AAAA,SA7BD,MA8BO,IAAIA,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,YAA6Bwf,iBAAAA,CAAAA,eAAjC,EAAkD;AACxD,cAAIC,SAAAA,GAAUhb,KAAAA,CAAM0a,OAAN1a,GAAgBzE,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkBwI,MAAhD;AACA,cAAIkX,SAAAA,GAAUjb,KAAAA,CAAM2a,OAAN3a,GAAgBzE,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkByI,MAAhD;AACA,cAAIkX,YAAAA,GAAahO,YAAAA,CAAaU,YAAbV,KAA8B,GAA/C;;AAEA9N,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU7D,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB4U,eAA5B/Q,EAA6C,UAAA,KAAA,EAAA;AAE5C,gBACCgR,KAAAA,CAAMA,KAANA,YAAuBqH,WAAAA,CAAAA,SAAvBrH,IACCA,KAAAA,CAAMA,KAANA,YAAuB/F,YAAAA,CAAAA,UAAvB+F,IAAuB/F,CAAe+F,KAAAA,CAAMA,KAANA,CAAYtR,iBAAZsR,EAFxC,EAGE;AACDA,cAAAA,KAAAA,CAAMA,KAANA,CAAY5R,CAAZ4R,GAAgBlD,YAAAA,CAAaiO,eAAbjO,CAA6BkD,KAAAA,CAAMC,QAAND,GAAiB4K,SAAAA,GAAUE,YAAxDhO,CAAhBkD;AACAA,cAAAA,KAAAA,CAAMA,KAANA,CAAY3R,CAAZ2R,GAAgBlD,YAAAA,CAAaiO,eAAbjO,CAA6BkD,KAAAA,CAAME,QAANF,GAAiB6K,SAAAA,GAAUC,YAAxDhO,CAAhBkD;;AAGA,kBAAIA,KAAAA,CAAMA,KAANA,YAAuBqH,WAAAA,CAAAA,SAA3B,EAAsC;AACrCrY,gBAAAA,CAAAA,CAAE0C,OAAF1C,CAAUgR,KAAAA,CAAMA,KAANA,CAAYgL,QAAZhL,EAAVhR,EAAkC,UAAA,IAAA,EAAA;AACjC,sBAAMoP,UAAAA,GAAahT,KAAAA,CAAKH,KAALG,CAAW0L,aAAX1L,CAAyBiT,aAAzBjT,CAAuCiH,IAAvCjH,CAAnB;;AACAiH,kBAAAA,IAAAA,CAAKiM,YAALjM,CAAkB+L,UAAlB/L;AAAkB+L,iBAFnBpP;AAMD;;AAAA,kBAAI8H,aAAAA,CAAcyK,qBAAdzK,EAAJ,EAA2C;AAC1CA,gBAAAA,aAAAA,CAAcmU,sBAAdnU;AAAcmU;AAAAA,aAhBhB,MAkBO,IAAIjL,KAAAA,CAAMA,KAANA,YAAuB/F,YAAAA,CAAAA,UAA3B,EAAuC;AAG7C+F,cAAAA,KAAAA,CAAMA,KAANA,CAAY5R,CAAZ4R,GAAgBA,KAAAA,CAAMC,QAAND,GAAiBlD,YAAAA,CAAaiO,eAAbjO,CAA6B8N,SAAAA,GAAUE,YAAvChO,CAAjCkD;AACAA,cAAAA,KAAAA,CAAMA,KAANA,CAAY3R,CAAZ2R,GAAgBA,KAAAA,CAAME,QAANF,GAAiBlD,YAAAA,CAAaiO,eAAbjO,CAA6B+N,SAAAA,GAAUC,YAAvChO,CAAjCkD;AAAwE8K;AAAAA,WAxB1E9b;;AA4BA,cAAI8H,aAAAA,CAAcyK,qBAAdzK,EAAJ,EAA2C;AAC1CA,YAAAA,aAAAA,CAAcoU,qBAAdpU;AAGD3L;;AAAAA,eAAKuf,UAALvf;;AACA,cAAA,CAAKA,KAAK+Q,KAAL/Q,CAAW2d,QAAhB,EAA0B;AACzB3d,iBAAKoV,QAALpV,CAAKoV;AAAWuI,cAAAA,QAAAA,EAAU;AAArBvI,aAALpV;AAA0B,WAD3B,MAEO;AACNA,iBAAK6W,WAAL7W;AAAK6W;AAAAA,SAzCA,MA2CA,IAAI7W,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,YAA6BggB,kBAAAA,CAAAA,gBAAjC,EAAmD;AAEzD,cAAIhgB,KAAKF,KAALE,CAAWid,sBAAf,EAAuC;AACtCtL,YAAAA,YAAAA,CAAasO,SAAbtO,CACC3R,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkBgV,cAAlBhV,IAAoCyE,KAAAA,CAAM0a,OAAN1a,GAAgBzE,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkBwI,MAAtExI,CADD2R,EAEC3R,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkBiV,cAAlBjV,IAAoCyE,KAAAA,CAAM2a,OAAN3a,GAAgBzE,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkByI,MAAtEzI,CAFD2R;AAIA3R,iBAAKuf,UAALvf;AACAA,iBAAK6W,WAAL7W;AAAK6W;AAAAA;AAAAA,OArFRkG;;AA0FAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UAAQtY,KAARsY,EAAQtY;AAARsY,YAAAA,KAAAA,GAAAA,IAAAA;;AAEC,YAAI/c,KAAKF,KAALE,CAAWud,UAAXvd,CAAsB8P,OAAtB9P,CAA8ByE,KAAAA,CAAMyb,OAApClgB,MAAoCkgB,CAAc,CAAtD,EAAyD;AACxDrc,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU7D,KAAKF,KAALE,CAAW2L,aAAX3L,CAAyB4R,eAAzB5R,GAA2CuU,gBAA3CvU,EAAV6D,EAAyE,UAAA,OAAA,EAAA;AAExE,gBAAA,CAAK5D,KAAAA,CAAKH,KAALG,CAAW0L,aAAX1L,CAAyByU,aAAzBzU,CAAuCsF,OAAvCtF,CAAL,EAAsD;AACrDsF,cAAAA,OAAAA,CAAQtB,MAARsB;AAAQtB;AAAAA,WAHVJ;;AAMA7D,eAAK6W,WAAL7W;AAAK6W;AAAAA,OATPkG;;AAaAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,UAAUtY,KAAVsY,EAAUtY;AAAVsY,YAAAA,KAAAA,GAAAA,IAAAA;;AACC,YAAIpR,aAAAA,GAAgB3L,KAAKF,KAALE,CAAW2L,aAA/B;;AAEA,YAAI3L,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,YAA6Bwf,iBAAAA,CAAAA,eAAjC,EAAkD;AACjD,cAAIja,OAAAA,GAAUvF,KAAKmgB,eAALngB,CAAqByE,KAArBzE,CAAd;;AACA6D,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU7D,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB4U,eAA5B/Q,EAA6C,UAAA,KAAA,EAAA;AAE5C,gBAAA,EAAMgR,KAAAA,CAAMA,KAANA,YAAuB/F,YAAAA,CAAAA,UAA7B,CAAA,EAA0C;AACzC;AAED;;AAAA,gBAAIvJ,OAAAA,IAAWA,OAAAA,CAAQsP,KAARtP,YAAyB6W,WAAAA,CAAAA,SAApC7W,IAAoC6W,CAAczQ,aAAAA,CAAc+I,aAAd/I,CAA4BpG,OAAAA,CAAQsP,KAApClJ,CAAtD,EAAkG;AACjG,kBAAI5I,IAAAA,GAAO8R,KAAAA,CAAMA,KAANA,CAAYgI,OAAZhI,EAAX;;AACA,kBAAI9R,IAAAA,CAAKqd,aAALrd,OAAyB,IAA7B,EAAmC;AAElC,oBAAIA,IAAAA,CAAKqd,aAALrd,OAAyBwC,OAAAA,CAAQsP,KAAjC9R,IAA0CA,IAAAA,CAAKsd,aAALtd,OAAyBwC,OAAAA,CAAQsP,KAA/E,EAAsF;AACrF,sBAAM7F,UAAAA,GAAajM,IAAAA,CAAKqd,aAALrd,EAAnB;AACA,sBAAIud,OAAAA,GAAUvd,IAAAA,CAAKgF,KAALhF,CAAKgF,EAALhF,CAAd;AACAud,kBAAAA,OAAAA,CAAQ5R,aAAR4R,CAAsB/a,OAAAA,CAAQsP,KAA9ByL;AACAA,kBAAAA,OAAAA,CAAQ3R,aAAR2R,CAAsBtR,UAAtBsR;AACAvd,kBAAAA,IAAAA,CAAK4L,aAAL5L,CAAmBwC,OAAAA,CAAQsP,KAA3B9R;AACAiM,kBAAAA,UAAAA,CAAWW,UAAXX,CAAsBjM,IAAtBiM;AACAsR,kBAAAA,OAAAA,CAAQC,kBAARD,CAA2BA,OAAAA,CAAQ5Q,SAAR4Q,GAAoBvd,IAAAA,CAAK8M,aAAL9M,CAAmB8R,KAAAA,CAAMA,KAAzB9R,CAApBud,CAA3BA;AACAvd,kBAAAA,IAAAA,CAAKyd,iBAALzd,CAAuB8R,KAAAA,CAAMA,KAA7B9R;AACA4I,kBAAAA,aAAAA,CAAciG,eAAdjG,GAAgCsE,OAAhCtE,CAAwC2U,OAAxC3U;AAAwC2U,iBATzC,MAWO,IAAIvd,IAAAA,CAAKqd,aAALrd,OAAyBwC,OAAAA,CAAQsP,KAArC,EAA4C;AAClD9R,kBAAAA,IAAAA,CAAKyd,iBAALzd,CAAuB8R,KAAAA,CAAMA,KAA7B9R;AAA6B8R,iBADvB,MAEA,IAAI9R,IAAAA,CAAKsd,aAALtd,OAAyBwC,OAAAA,CAAQsP,KAArC,EAA4C;AAClD9R,kBAAAA,IAAAA,CAAKwd,kBAALxd,CAAwB8R,KAAAA,CAAMA,KAA9B9R;AAA8B8R;AAAAA,eAhBhC,MAkBO;AACN9R,gBAAAA,IAAAA,CAAK4L,aAAL5L,CAAmBwC,OAAAA,CAAQsP,KAA3B9R;AAA2B8R;;AAAAA,qBAErB5U,KAAAA,CAAKH,KAALG,CAAW0L,aAAX1L,CAAyB4S,8BAAzB5S,CAAwD8C,IAAAA,CAAKkG,KAALlG,EAAxD9C,CAFqB4U;AAEwC5L;AAAAA,WA5BtEpF;;AAiCA,cAAA,CAAK7D,KAAKF,KAALE,CAAWgd,eAAhB,IAAmChd,KAAK+Q,KAAL/Q,CAAW2d,QAA9C,EAAwD;AACvD9Z,YAAAA,CAAAA,CAAE0C,OAAF1C,CAAU7D,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB4U,eAA5B/Q,EAA6C,UAAA,KAAA,EAAA;AAE5C,kBAAA,EAAMgR,KAAAA,CAAMA,KAANA,YAAuB/F,YAAAA,CAAAA,UAA7B,CAAA,EAA0C;AACzC;AAGD;;AAAA,kBAAI2R,aAAAA,GAA4B5L,KAAAA,CAAMA,KAAtC;AACA,kBAAI9R,IAAAA,GAAkB0d,aAAAA,CAAc5D,OAAd4D,EAAtB;;AACA,kBAAI1d,IAAAA,CAAKsd,aAALtd,OAAyB,IAAzBA,IAAiCA,IAAAA,CAAKqd,aAALrd,OAAyB,IAA9D,EAAoE;AACnEA,gBAAAA,IAAAA,CAAKkB,MAALlB;AAAKkB;AAAAA,aATPJ;AAeDA;;AAAAA,UAAAA,CAAAA,CAAE0C,OAAF1C,CAAU7D,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAkB4U,eAA5B/Q,EAA6C,UAAA,KAAA,EAAA;AAE5C,gBAAA,EAAMgR,KAAAA,CAAMA,KAANA,YAAuB/F,YAAAA,CAAAA,UAA7B,CAAA,EAA0C;AACzC;AAGD;;AAAA,gBAAI/L,IAAAA,GAAkB8R,KAAAA,CAAMA,KAANA,CAAYgI,OAAZhI,EAAtB;AACA,gBAAI9F,UAAAA,GAAwBhM,IAAAA,CAAKsd,aAALtd,EAA5B;AACA,gBAAIiM,UAAAA,GAAwBjM,IAAAA,CAAKqd,aAALrd,EAA5B;;AACA,gBAAIgM,UAAAA,KAAe,IAAfA,IAAuBC,UAAAA,KAAe,IAA1C,EAAgD;AAC/C,kBAAA,CAAKD,UAAAA,CAAW2R,aAAX3R,CAAyBC,UAAzBD,CAAL,EAA2C;AAE1ChM,gBAAAA,IAAAA,CAAKkB,MAALlB;AAAKkB,eAFN,MAGO,IACNJ,CAAAA,CAAE8c,IAAF9c,CACCA,CAAAA,CAAEwF,MAAFxF,CAASmL,UAAAA,CAAW7H,QAAX6H,EAATnL,CADDA,EAEC,UAAC9E,CAAD,EAACA;AACA,uBAAA,CAAA,KAAMgE,IAAN,KAAehE,CAAAA,CAAEshB,aAAFthB,OAAsBgQ,UAAtBhQ,IAAoCA,CAAAA,CAAEqhB,aAAFrhB,OAAsBgQ,UAAzE,CAAA;AAAyEA,eAH3ElL,CADM,EAML;AAEDd,gBAAAA,IAAAA,CAAKkB,MAALlB;AAAKkB;AAAAA;AAAAA,WArBRJ;;AA0BA8H,UAAAA,aAAAA,CAAciV,oBAAdjV;AACA3L,eAAK6gB,gBAAL7gB,CAAK6gB,CAAkB7gB,KAAK+Q,KAAL/Q,CAAW2d,QAAlC3d;AAAkC2d,SA9EnC,MA+EO;AACNhS,UAAAA,aAAAA,CAAciV,oBAAdjV;AACA3L,eAAK6gB,gBAAL7gB;AAEDA;;AAAAA,aAAK+Q,KAAL/Q,CAAWwF,QAAXxF,CAAoBie,mBAApBje,CAAwC,WAAxCA,EAAqDA,KAAKwd,WAA1Dxd;AACAA,aAAK+Q,KAAL/Q,CAAWwF,QAAXxF,CAAoBie,mBAApBje,CAAwC,SAAxCA,EAAmDA,KAAKyd,SAAxDzd;AAAwDyd,OAvFzDV;;AA0FAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,YAAAA;AACC,YAAI5I,UAAAA,GAAcnU,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,CAAsCoU,gBAAtCpU,EAAlB;AACA,eACCmR,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACCjR,UAAAA,SAAAA,EAAWF,KAAKkR,GAALlR,CAAS,YAATA,CADZmR;AAECG,UAAAA,KAAAA,EAAAA;AACCC,YAAAA,GAAAA,EAAK4C,UAAAA,CAAW5C,GADjBD;AAECE,YAAAA,IAAAA,EAAM2C,UAAAA,CAAW3C,IAFlBF;AAGCpJ,YAAAA,KAAAA,EAAOiM,UAAAA,CAAWjM,KAHnBoJ;AAICnJ,YAAAA,MAAAA,EAAQgM,UAAAA,CAAWhM;AAJpBmJ;AAFDH,SAAAA,CADD;AAOsBhJ,OATvB4U;;AAeAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAAA,YAAAA;AAAAA,YAAAA,KAAAA,GAAAA,IAAAA;;AACC,YAAIpR,aAAAA,GAAgB3L,KAAKF,KAALE,CAAW2L,aAA/B;AACAA,QAAAA,aAAAA,CAAcmV,yBAAdnV,CAAwC3L,KAAKF,KAALE,CAAWod,sBAAnDzR;AACAA,QAAAA,aAAAA,CAAcoV,qBAAdpV,CAAoC3L,KAAKF,KAALE,CAAWsd,YAA/C3R;AACA,YAAIgG,YAAAA,GAAehG,aAAAA,CAAciG,eAAdjG,EAAnB;AAEA,eACCwF,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EACKnR,KAAKoR,QAALpR,EADLmR,EACUC;AACTkG,UAAAA,GAAAA,EAAK,UAAA,GAAA,EAAA;AACJ,gBAAIA,GAAJ,EAAS;AACRrX,cAAAA,KAAAA,CAAKH,KAALG,CAAW0L,aAAX1L,CAAyB+d,SAAzB/d,CAAmCqX,GAAnCrX;AAAmCqX;AAAAA,WAH5BlG;AAMT4P,UAAAA,OAAAA,EAAS,UAAA,KAAA,EAAA;AACR,gBAAI/gB,KAAAA,CAAKH,KAALG,CAAWid,eAAf,EAAgC;AAC/BzY,cAAAA,KAAAA,CAAMwT,cAANxT;AACAA,cAAAA,KAAAA,CAAMwF,eAANxF;AACA,kBAAMwc,aAAAA,GAAgBtP,YAAAA,CAAaU,YAAbV,KAA8B,GAApD;AACA,kBAAIuP,WAAAA,GAAcjhB,KAAAA,CAAKH,KAALG,CAAWkd,WAAXld,GAAWkd,CAAe1Y,KAAAA,CAAM0c,MAAhClhB,GAAyCwE,KAAAA,CAAM0c,MAAjE;;AAEA,kBAAI1c,KAAAA,CAAM2c,OAAN3c,IAAiByc,WAAAA,GAAc,CAAdA,KAAoB,CAAzC,EAA4C;AAK3CA,gBAAAA,WAAAA,IAAe,CAAfA;AAAe,eALhB,MAMO;AACNA,gBAAAA,WAAAA,IAAe,EAAfA;AAED;;AAAA,kBAAIvP,YAAAA,CAAaU,YAAbV,KAA8BuP,WAA9BvP,GAA4C,EAAhD,EAAoD;AACnDA,gBAAAA,YAAAA,CAAa0P,YAAb1P,CAA0BA,YAAAA,CAAaU,YAAbV,KAA8BuP,WAAxDvP;AAGD;;AAAA,kBAAM2P,UAAAA,GAAa3P,YAAAA,CAAaU,YAAbV,KAA8B,GAAjD;AAEA,kBAAM4P,YAAAA,GAAe9c,KAAAA,CAAM+c,aAAN/c,CAAoBgd,qBAApBhd,EAArB;AACA,kBAAMid,WAAAA,GAAcH,YAAAA,CAAarZ,KAAjC;AACA,kBAAMyZ,YAAAA,GAAeJ,YAAAA,CAAapZ,MAAlC;AAEA,kBAAMyZ,SAAAA,GAAYF,WAAAA,GAAcJ,UAAdI,GAA2BA,WAAAA,GAAcT,aAA3D;AACA,kBAAMY,UAAAA,GAAaF,YAAAA,GAAeL,UAAfK,GAA4BA,YAAAA,GAAeV,aAA9D;AAEA,kBAAM9B,OAAAA,GAAU1a,KAAAA,CAAM0a,OAAN1a,GAAgB8c,YAAAA,CAAa/P,IAA7C;AACA,kBAAM4N,OAAAA,GAAU3a,KAAAA,CAAM2a,OAAN3a,GAAgB8c,YAAAA,CAAahQ,GAA7C;AAGA,kBAAMuQ,OAAAA,GAAAA,CAAW3C,OAAAA,GAAUxN,YAAAA,CAAaQ,UAAbR,EAArBmQ,IAAkDb,aAAlDa,GAAkEJ,WAAxE;AACA,kBAAMK,OAAAA,GAAAA,CAAW3C,OAAAA,GAAUzN,YAAAA,CAAaS,UAAbT,EAArBoQ,IAAkDd,aAAlDc,GAAkEJ,YAAxE;AAEAhQ,cAAAA,YAAAA,CAAasO,SAAbtO,CACCA,YAAAA,CAAaQ,UAAbR,KAA4BiQ,SAAAA,GAAYE,OADzCnQ,EAECA,YAAAA,CAAaS,UAAbT,KAA4BkQ,UAAAA,GAAaE,OAF1CpQ;AAKAhG,cAAAA,aAAAA,CAAc2I,qBAAd3I,CAAc2I,EAAd3I;;AACA1L,cAAAA,KAAAA,CAAK4W,WAAL5W;AAAK4W;AAAAA,WAhDEzF;AAmDTuI,UAAAA,WAAAA,EAAa,UAAA,KAAA,EAAA;AACZ1Z,YAAAA,KAAAA,CAAKmV,QAALnV,CAAa0E,QAAAA,CAAAA,EAAAA,EAAM1E,KAAAA,CAAK8Q,KAAXpM,EAAWoM;AAAO4M,cAAAA,QAAAA,EAAU;AAAjB5M,aAAXpM,CAAb1E;;AAEA0L,YAAAA,aAAAA,CAAciV,oBAAdjV;;AACA,gBAAIkJ,KAAAA,GAAQ5U,KAAAA,CAAKkgB,eAALlgB,CAAqBwE,KAArBxE,CAAZ;;AAEA,gBAAI4U,KAAAA,KAAU,IAAd,EAAoB;AAEnB,kBAAIpQ,KAAAA,CAAMgS,QAAV,EAAoB;AACnB,oBAAIwI,QAAAA,GAAWtT,aAAAA,CAAcuT,gBAAdvT,CAA+BlH,KAAAA,CAAM0a,OAArCxT,EAA8ClH,KAAAA,CAAM2a,OAApDzT,CAAf;;AACA1L,gBAAAA,KAAAA,CAAK+hB,iBAAL/hB,CAAuB,IAAI+e,iBAAAA,CAAAA,eAAJ,CAAoBC,QAAAA,CAAShc,CAA7B,EAAgCgc,QAAAA,CAAS/b,CAAzC,CAAvBjD;AAAgEiD,eAFjE,MAGO;AAENyO,gBAAAA,YAAAA,CAAasQ,cAAbtQ;;AACA1R,gBAAAA,KAAAA,CAAK+hB,iBAAL/hB,CAAuB,IAAI+f,kBAAAA,CAAAA,gBAAJ,CAAqBvb,KAAAA,CAAM0a,OAA3B,EAAoC1a,KAAAA,CAAM2a,OAA1C,EAAmDzN,YAAnD,CAAvB1R;AAA0E0R;AAAAA,aAR5E,MAUO,IAAIkD,KAAAA,CAAMA,KAANA,YAAuBuH,WAAAA,CAAAA,SAA3B,EAAsC;AAE5C,kBAAA,CAAKnc,KAAAA,CAAKH,KAALG,CAAW0L,aAAX1L,CAAyByU,aAAzBzU,CAAuC4U,KAAAA,CAAMA,KAA7C5U,CAAL,EAA0D;AACzD,oBAAIgf,QAAAA,GAAWtT,aAAAA,CAAcgL,qBAAdhL,CAAoClH,KAApCkH,CAAf;AACA,oBAAIoD,UAAAA,GAAa8F,KAAAA,CAAMA,KAAvB;AACA,oBAAI9R,IAAAA,GAAOgM,UAAAA,CAAWN,eAAXM,EAAX;AACAhM,gBAAAA,IAAAA,CAAK2L,aAAL3L,CAAmBgM,UAAnBhM;;AAEA,oBAAIA,IAAJ,EAAU;AACTA,kBAAAA,IAAAA,CAAKmf,kBAALnf;;AACA,sBAAIA,IAAAA,CAAKsd,aAALtd,OAAyBgM,UAA7B,EAAyC;AACxChM,oBAAAA,IAAAA,CAAK2L,aAAL3L,CAAmBgM,UAAnBhM;AAEDA;;AAAAA,kBAAAA,IAAAA,CAAK4L,aAAL5L,CAAmB,IAAnBA;AAEAA,kBAAAA,IAAAA,CAAKgN,aAALhN,GAAqBiQ,cAArBjQ,CAAoCkc,QAApClc;AACAA,kBAAAA,IAAAA,CAAKiN,YAALjN,GAAoBiQ,cAApBjQ,CAAmCkc,QAAnClc;AAEA4O,kBAAAA,YAAAA,CAAasQ,cAAbtQ;AACA5O,kBAAAA,IAAAA,CAAKiN,YAALjN,GAAoB6T,WAApB7T,CAAgC,IAAhCA;AACA4O,kBAAAA,YAAAA,CAAa1B,OAAb0B,CAAqB5O,IAArB4O;;AAEA1R,kBAAAA,KAAAA,CAAK+hB,iBAAL/hB,CACC,IAAIuf,iBAAAA,CAAAA,eAAJ,CAAoB/a,KAAAA,CAAM0a,OAA1B,EAAmC1a,KAAAA,CAAM2a,OAAzC,EAAkDzT,aAAlD,CADD1L;AACmD0L;AAAAA,eArBrD,MAwBO;AACNgG,gBAAAA,YAAAA,CAAasQ,cAAbtQ;AAAasQ;AAAAA,aA3BR,MA6BA;AAEN,kBAAA,CAAKxd,KAAAA,CAAMgS,QAAX,IAAWA,CAAa5B,KAAAA,CAAMA,KAANA,CAAYxR,UAAZwR,EAAxB,EAAkD;AACjDlD,gBAAAA,YAAAA,CAAasQ,cAAbtQ;AAEDkD;;AAAAA,cAAAA,KAAAA,CAAMA,KAANA,CAAY+B,WAAZ/B,CAAwB,IAAxBA;;AAEA5U,cAAAA,KAAAA,CAAK+hB,iBAAL/hB,CAAuB,IAAIuf,iBAAAA,CAAAA,eAAJ,CAAoB/a,KAAAA,CAAM0a,OAA1B,EAAmC1a,KAAAA,CAAM2a,OAAzC,EAAkDzT,aAAlD,CAAvB1L;AAEDA;;AAAAA,YAAAA,KAAAA,CAAK8Q,KAAL9Q,CAAWuF,QAAXvF,CAAoBqe,gBAApBre,CAAqC,WAArCA,EAAkDA,KAAAA,CAAKud,WAAvDvd;;AACAA,YAAAA,KAAAA,CAAK8Q,KAAL9Q,CAAWuF,QAAXvF,CAAoBqe,gBAApBre,CAAqC,SAArCA,EAAgDA,KAAAA,CAAKwd,SAArDxd;AAAqDwd;AA1G7CrM,SADVD,CAAAA,EA8GEnR,KAAK+Q,KAAL/Q,CAAW4d,aAAX5d,IACAmR,KAAAA,CAAAA,aAAAA,CAACgR,iBAAAA,CAAAA,eAADhR,EAACgR;AACAxW,UAAAA,aAAAA,EAAeA,aADfwW;AAEAvO,UAAAA,UAAAA,EAAY,UAACxM,KAAD,EAAoB3C,KAApB,EAAoBA;AAC/BxE,YAAAA,KAAAA,CAAK8Q,KAAL9Q,CAAWuF,QAAXvF,CAAoBqe,gBAApBre,CAAqC,WAArCA,EAAkDA,KAAAA,CAAKud,WAAvDvd;;AACAA,YAAAA,KAAAA,CAAK8Q,KAAL9Q,CAAWuF,QAAXvF,CAAoBqe,gBAApBre,CAAqC,SAArCA,EAAgDA,KAAAA,CAAKwd,SAArDxd;;AACAwE,YAAAA,KAAAA,CAAMwF,eAANxF;AACAkN,YAAAA,YAAAA,CAAasQ,cAAbtQ,CAA4BvK,KAA5BuK;;AACA1R,YAAAA,KAAAA,CAAKmV,QAALnV,CAAKmV;AACJsI,cAAAA,MAAAA,EAAQ,IAAI8B,iBAAAA,CAAAA,eAAJ,CAAoB/a,KAAAA,CAAM0a,OAA1B,EAAmC1a,KAAAA,CAAM2a,OAAzC,EAAkDzT,aAAlD;AADJyJ,aAALnV;AAC2D0L;AAR5DwW,SAADhR,CA/GFA,EA4HCA,KAAAA,CAAAA,aAAAA,CAACiR,iBAAAA,CAAAA,eAADjR,EAACiR;AAAgBzW,UAAAA,aAAAA,EAAeA;AAA/ByW,SAADjR,CA5HDA,EA6HEnR,KAAK+Q,KAAL/Q,CAAW0d,MAAX1d,YAA6Bgf,iBAAAA,CAAAA,eAA7Bhf,IAAgDA,KAAKqiB,gBAALriB,EA7HlDmR,CADD;AA8HwDkR,OApIzDtF;;AAhXcA,MAAAA,aAAAA,CAAAA,YAAAA,GAAAA;AACbpR,QAAAA,aAAAA,EAAe,IADFoR;AAEbC,QAAAA,eAAAA,EAAiB,IAFJD;AAGbE,QAAAA,sBAAAA,EAAwB,IAHXF;AAIbG,QAAAA,eAAAA,EAAiB,IAJJH;AAKbI,QAAAA,WAAAA,EAAa,KALAJ;AAMbK,QAAAA,sBAAAA,EAAwBC,QANXN;AAObO,QAAAA,YAAAA,EAAc,KAPDP;AAQbQ,QAAAA,UAAAA,EAAAA,CAAa,EAAbA,EAAiB,CAAjBA;AARaR,OAAAA;AAwff,aAAA,aAAA;AAzfA,KAAA,CAAmCpd,YAAAA,CAAAA,UAAnC,CAAA;;AAAahB,IAAAA,OAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAAAA,G9CmBb,E8CnBaA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AAAAA,QAAAA,SAAAA,GAAAA,QAAAA,KAAAA,SAAAA,IAAAA,YAAAA;AAAAA,UAAAA,aAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA;AAAAA,QAAAA,SAAAA,EAAAA;AAAAA,mBAAAA,KAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA;AAAAA,OAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,aAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,cAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA,OAAAA;;AAAAA,aAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAAAA,iBAAAA,EAAAA,GAAAA;AAAAA,eAAAA,WAAAA,GAAAA,CAAAA;AAAAA;;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA,KAAAA,IAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,IAAAA,EAAAA,CAAAA,SAAAA,GAAAA,CAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAAAA;AAAAA,OAAAA;AAAAA,KAAAA,EAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA;AAAAA,KAAAA;;AChDb,QAAA,kBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,KAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,qBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAIA,QAAA,kBAAA,GAAA,UAAA,MAAA,EAAA;AAAwCgB,MAAAA,SAAAA,CAAAA,kBAAAA,EAAAA,MAAAA,CAAAA;;AACvC,eAAA,kBAAA,GAAA;AAAA,eACCI,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAM,SAANA,KAAgBC,IADjB;AAIAsiB;;AAAAA,MAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoB3W,aAApB2W,EAAkD9hB,IAAlD8hB,EAAkD9hB;AACjD,eAAO2Q,KAAAA,CAAMmB,aAANnB,CAAoBoR,mBAAAA,CAAAA,iBAApBpR,EAAoBoR;AAC1B/hB,UAAAA,IAAAA,EAAMA,IADoB+hB;AAE1B5W,UAAAA,aAAAA,EAAeA;AAFW4W,SAApBpR,CAAP;AAEgBxF,OAHjB2W;;AAOAA,MAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAezH,aAAfyH,EAAezH;AACd,eAAO,IAAI2H,kBAAAA,CAAAA,gBAAJ,EAAP;AAAWA,OADZF;;AAGD,aAAA,kBAAA;AAfA,KAAA,CAAwC3iB,qBAAAA,CAAAA,mBAAxC,CAAA;;AAAahB,IAAAA,OAAAA,CAAAA,kBAAAA,GAAAA,kBAAAA;AAAAA,G/C2Db,E+C3DaA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AAAAA,QAAAA,SAAAA,GAAAA,QAAAA,KAAAA,SAAAA,IAAAA,YAAAA;AAAAA,UAAAA,aAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA;AAAAA,QAAAA,SAAAA,EAAAA;AAAAA,mBAAAA,KAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA;AAAAA,OAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,aAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,cAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA,OAAAA;;AAAAA,aAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAAAA,iBAAAA,EAAAA,GAAAA;AAAAA,eAAAA,WAAAA,GAAAA,CAAAA;AAAAA;;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA,KAAAA,IAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,IAAAA,EAAAA,CAAAA,SAAAA,GAAAA,CAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAAAA;AAAAA,OAAAA;AAAAA,KAAAA,EAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA;AAAAA,KAAAA;;ACRb,QAAA,KAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,qBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,kBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAKA,QAAA,kBAAA,GAAA,UAAA,MAAA,EAAA;AAAwCgB,MAAAA,SAAAA,CAAAA,kBAAAA,EAAAA,MAAAA,CAAAA;;AACvC,eAAA,kBAAA,GAAA;AAAA,eACCI,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAM,SAANA,KAAgBC,IADjB;AAIAyiB;;AAAAA,MAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoB9W,aAApB8W,EAAkD1f,IAAlD0f,EAAkD1f;AACjD,eAAOoO,KAAAA,CAAMmB,aAANnB,CAAoBuR,mBAAAA,CAAAA,iBAApBvR,EAAoBuR;AAC1B3f,UAAAA,IAAAA,EAAMA,IADoB2f;AAE1B/W,UAAAA,aAAAA,EAAeA;AAFW+W,SAApBvR,CAAP;AAEgBxF,OAHjB8W;;AAOAA,MAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAe5H,aAAf4H,EAAe5H;AACd,eAAO,IAAIjM,kBAAAA,CAAAA,gBAAJ,EAAP;AAAWA,OADZ6T;;AAIAA,MAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoB5N,KAApB4N,EAA6CE,MAA7CF,EAAwEpe,QAAxEoe,EAA2FhiB,IAA3FgiB,EAA2FhiB;AAC1F,eACC0Q,KAAAA,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;AACCjR,UAAAA,SAAAA,EAAWmE,QAAAA,GAAWse,MAAAA,CAAOzR,GAAPyR,CAAW,iBAAXA,CAAXte,GAA2C,EADvD8M;AAEC4G,UAAAA,WAAAA,EAAalD,KAAAA,CAAM3M,KAFpBiJ;AAGCyR,UAAAA,MAAAA,EAAQ/N,KAAAA,CAAMlH,KAHfwD;AAIChG,UAAAA,CAAAA,EAAG1K;AAJJ0Q,SAAAA,CADD;AAKK1Q,OANNgiB;;AAUD,aAAA,kBAAA;AA1BA,KAAA,CAAwC9iB,qBAAAA,CAAAA,mBAAxC,CAAA;;AAAahB,IAAAA,OAAAA,CAAAA,kBAAAA,GAAAA,kBAAAA;AAAAA,GhD0Db,EgD1DaA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AAAAA,QAAAA,SAAAA,GAAAA,QAAAA,KAAAA,SAAAA,IAAAA,YAAAA;AAAAA,UAAAA,aAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA;AAAAA,QAAAA,SAAAA,EAAAA;AAAAA,mBAAAA,KAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA;AAAAA,OAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,aAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,cAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA,OAAAA;;AAAAA,aAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,QAAAA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAAAA,iBAAAA,EAAAA,GAAAA;AAAAA,eAAAA,WAAAA,GAAAA,CAAAA;AAAAA;;AAAAA,QAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA,KAAAA,IAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,IAAAA,EAAAA,CAAAA,SAAAA,GAAAA,CAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA,EAAAA,CAAAA;AAAAA,OAAAA;AAAAA,KAAAA,EAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AAAAA,MAAAA,KAAAA,EAAAA;AAAAA,KAAAA;;ACTb,QAAA,YAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,cAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,CAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEA,QAAA,WAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,YAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAOA,QAAA,MAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,aAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,oBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,qBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,SAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAmBA,QAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmCkkB,MAAAA,SAAAA,CAAAA,aAAAA,EAAAA,MAAAA,CAAAA;;AAqBlC,eAAA,aAAA,GAAA;AAAA,YAAA,KAAA,GACC9iB,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,KAAOC,IADR;;AANAC,QAAAA,KAAAA,CAAAA,YAAAA,GAAAA,EAAAA;AACAA,QAAAA,KAAAA,CAAAA,aAAAA,GAAAA,EAAAA;AAEAA,QAAAA,KAAAA,CAAAA,iBAAAA,GAA4B,CAA5BA;AACAA,QAAAA,KAAAA,CAAAA,iBAAAA,GAA4B,CAA5BA;;AA4ZAA,QAAAA,KAAAA,CAAAA,yBAAAA,GAA4B,YAAA;AAM3B,cAAM8lB,cAAAA,GAAiBliB,CAAAA,CAAEwF,MAAFxF,CAAS5D,KAAAA,CAAK0R,YAAL1R,CAAkB8a,KAA3BlX,EAAkC4D,GAAlC5D,CAAsC,UAAA,IAAA,EAAA;AAAQ,mBAAA;AACpEZ,cAAAA,CAAAA,EAAG0R,IAAAA,CAAK1R,CAD4D;AAEpEiF,cAAAA,KAAAA,EAAOyM,IAAAA,CAAKzM,KAFwD;AAGpEhF,cAAAA,CAAAA,EAAGyR,IAAAA,CAAKzR,CAH4D;AAIpEiF,cAAAA,MAAAA,EAAQwM,IAAAA,CAAKxM;AAJuD,aAAA;AAIvDA,WAJStE,CAAvB;;AAOA,cAAMmiB,QAAAA,GAAWniB,CAAAA,CAAEwF,MAAFxF,CAAS5D,KAAAA,CAAK0R,YAAL1R,CAAkB6I,KAA3BjF,CAAjB;;AACA,cAAMoiB,cAAAA,GAAiBpiB,CAAAA,CAAEkY,OAAFlY,CAAUmiB,QAAAA,CAASve,GAATue,CAAa,UAAA,IAAA,EAAA;AAAQ,mBAAA,CAACjjB,IAAAA,CAAKgM,UAAN,EAAkBhM,IAAAA,CAAKiM,UAAvB,CAAA;AAAuBA,WAA5CgX,CAAVniB,EACrB4Q,MADqB5Q,CACd,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,KAAS,IAAT;AAAS,WADHA,EAErB4D,GAFqB5D,CAEjB,UAAA,IAAA,EAAA;AAAQ,mBAAA;AACZZ,cAAAA,CAAAA,EAAG0R,IAAAA,CAAK1R,CADI;AAEZiF,cAAAA,KAAAA,EAAOyM,IAAAA,CAAKzM,KAFA;AAGZhF,cAAAA,CAAAA,EAAGyR,IAAAA,CAAKzR,CAHI;AAIZiF,cAAAA,MAAAA,EAAQwM,IAAAA,CAAKxM;AAJD,aAAA;AAICA,WANQtE,CAAvB;;AAQA,cAAMqiB,eAAAA,GAAkBriB,CAAAA,CAAEkY,OAAFlY,CAAUmiB,QAAAA,CAASve,GAATue,CAAa,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,CAAKhjB,MAAL;AAAKA,WAA1BgjB,CAAVniB,EAA6C4D,GAA7C5D,CAAiD,UAAA,IAAA,EAAA;AAAQ,mBAAA;AAEhFZ,cAAAA,CAAAA,EAAG0R,IAAAA,CAAK1R,CAFwE;AAGhFiF,cAAAA,KAAAA,EAAO,CAHyE;AAIhFhF,cAAAA,CAAAA,EAAGyR,IAAAA,CAAKzR,CAJwE;AAKhFiF,cAAAA,MAAAA,EAAQ;AALwE,aAAA;AAKxE,WALetE,CAAxB;;AAQA,cAAM+O,MAAAA,GAAS3S,KAAAA,CAAK2S,MAApB;AACA,cAAMuT,IAAAA,GACLjhB,IAAAA,CAAKoH,KAALpH,CACCA,IAAAA,CAAKkhB,GAALlhB,CAASrB,CAAAA,CAAEwiB,KAAFxiB,CAAQA,CAAAA,CAAE2D,MAAF3D,CAASkiB,cAATliB,EAAyBoiB,cAAzBpiB,EAAyCqiB,eAAzCriB,CAARA,EAAmE,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,CAAKZ,CAAL;AAAKA,WAAhFY,EAAmFZ,CAA5FiC,EAA+F,CAA/FA,IACCmB,aAAAA,CAAAA,sBAFFnB,IAGImB,aAAAA,CAAAA,sBAJL;;AAKA,cAAMigB,WAAAA,GAAcziB,CAAAA,CAAE0iB,KAAF1iB,CACnBA,CAAAA,CAAE2D,MAAF3D,CAASkiB,cAATliB,EAAyBoiB,cAAzBpiB,EAAyCqiB,eAAzCriB,CADmBA,EAEnB,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,CAAKZ,CAAL,GAAS0R,IAAAA,CAAKzM,KAAd;AAAcA,WAFHrE,CAApB;;AAIA,cAAM2iB,IAAAA,GAAOthB,IAAAA,CAAK8f,GAAL9f,CAASohB,WAAAA,CAAYrjB,CAAZqjB,GAAgBA,WAAAA,CAAYpe,KAArChD,EAA4C0N,MAAAA,CAAOwE,WAAnDlS,CAAb;AAEA,cAAMuhB,IAAAA,GACLvhB,IAAAA,CAAKoH,KAALpH,CACCA,IAAAA,CAAKkhB,GAALlhB,CAASrB,CAAAA,CAAEwiB,KAAFxiB,CAAQA,CAAAA,CAAE2D,MAAF3D,CAASkiB,cAATliB,EAAyBoiB,cAAzBpiB,EAAyCqiB,eAAzCriB,CAARA,EAAmE,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,CAAKX,CAAL;AAAKA,WAAhFW,EAAmFX,CAA5FgC,EAA+F,CAA/FA,IACCmB,aAAAA,CAAAA,sBAFFnB,IAGImB,aAAAA,CAAAA,sBAJL;;AAKA,cAAMqgB,WAAAA,GAAc7iB,CAAAA,CAAE0iB,KAAF1iB,CACnBA,CAAAA,CAAE2D,MAAF3D,CAASkiB,cAATliB,EAAyBoiB,cAAzBpiB,EAAyCqiB,eAAzCriB,CADmBA,EAEnB,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,CAAKX,CAAL,GAASyR,IAAAA,CAAKxM,MAAd;AAAcA,WAFHtE,CAApB;;AAIA,cAAM8iB,IAAAA,GAAOzhB,IAAAA,CAAK8f,GAAL9f,CAASwhB,WAAAA,CAAYxjB,CAAZwjB,GAAgBA,WAAAA,CAAYve,MAArCjD,EAA6C0N,MAAAA,CAAOyE,YAApDnS,CAAb;AAEA,iBAAA;AACCgD,YAAAA,KAAAA,EAAOhD,IAAAA,CAAKsgB,IAALtgB,CAAUA,IAAAA,CAAKa,GAALb,CAASihB,IAATjhB,IAAiBshB,IAA3BthB,CADR;AAECkgB,YAAAA,iBAAAA,EAAmBlgB,IAAAA,CAAKa,GAALb,CAASihB,IAATjhB,IAAiBmB,aAAAA,CAAAA,sBAAjBnB,GAA0C,CAF9D;AAGCiD,YAAAA,MAAAA,EAAQjD,IAAAA,CAAKsgB,IAALtgB,CAAUA,IAAAA,CAAKa,GAALb,CAASuhB,IAATvhB,IAAiByhB,IAA3BzhB,CAHT;AAICogB,YAAAA,iBAAAA,EAAmBpgB,IAAAA,CAAKa,GAALb,CAASuhB,IAATvhB,IAAiBmB,aAAAA,CAAAA,sBAAjBnB,GAA0C;AAJ9D,WAAA;AAI8D,SAzD/DjF;;AAgEAA,QAAAA,KAAAA,CAAAA,SAAAA,GAAY,UAAC+L,MAAD,EAACA;AACZnI,UAAAA,CAAAA,CAAEwF,MAAFxF,CAAS5D,KAAAA,CAAK0R,YAAL1R,CAAkB8a,KAA3BlX,EAAkC0C,OAAlC1C,CAA0C,UAAA,IAAA,EAAA;AACzC,gBAAM+iB,MAAAA,GAAS1hB,IAAAA,CAAKoH,KAALpH,CAAW1E,IAAAA,CAAKyC,CAALzC,GAAS6F,aAAAA,CAAAA,sBAApBnB,CAAf;AACA,gBAAMyF,IAAAA,GAAOzF,IAAAA,CAAKsgB,IAALtgB,CAAKsgB,CAAMhlB,IAAAA,CAAKyC,CAALzC,GAASA,IAAAA,CAAK0H,KAApBsd,IAA6Bnf,aAAAA,CAAAA,sBAAlCnB,CAAb;AACA,gBAAM2hB,MAAAA,GAAS3hB,IAAAA,CAAKoH,KAALpH,CAAW1E,IAAAA,CAAK0C,CAAL1C,GAAS6F,aAAAA,CAAAA,sBAApBnB,CAAf;AACA,gBAAM0F,IAAAA,GAAO1F,IAAAA,CAAKsgB,IAALtgB,CAAKsgB,CAAMhlB,IAAAA,CAAK0C,CAAL1C,GAASA,IAAAA,CAAK2H,MAApBqd,IAA8Bnf,aAAAA,CAAAA,sBAAnCnB,CAAb;;AAEA,iBAAK,IAAIjC,CAAAA,GAAI2jB,MAAAA,GAAS,CAAtB,EAAyB3jB,CAAAA,IAAK0H,IAAAA,GAAO,CAArC,EAAwC1H,CAAAA,EAAxC,EAA6C;AAC5C,mBAAK,IAAIC,CAAAA,GAAI2jB,MAAAA,GAAS,CAAtB,EAAyB3jB,CAAAA,GAAI0H,IAAAA,GAAO,CAApC,EAAuC1H,CAAAA,EAAvC,EAA4C;AAC3CjD,gBAAAA,KAAAA,CAAK6mB,eAAL7mB,CAAqB+L,MAArB/L,EAA6BA,KAAAA,CAAKoM,iBAALpM,CAAuBgD,CAAvBhD,CAA7BA,EAAwDA,KAAAA,CAAKsM,iBAALtM,CAAuBiD,CAAvBjD,CAAxDA;AAA+EiD;AAAAA;AAAAA,WARlFW;AAQkFX,SATnFjD;;AAkBAA,QAAAA,KAAAA,CAAAA,SAAAA,GAAY,UAAC+L,MAAD,EAACA;AACZ,cAAM+a,WAAAA,GAAcljB,CAAAA,CAAEkY,OAAFlY,CACnBA,CAAAA,CAAEwF,MAAFxF,CAAS5D,KAAAA,CAAK0R,YAAL1R,CAAkB6I,KAA3BjF,EAAkC4D,GAAlC5D,CAAsC,UAAA,IAAA,EAAA;AAAQ,mBAAA,GAAG2D,MAAH,CAAUzE,IAAAA,CAAKgM,UAAf,EAA2BhM,IAAAA,CAAKiM,UAAhC,CAAA;AAAgCA,WAA9EnL,CADmBA,CAApB;;AAGAkjB,UAAAA,WAAAA,CAAYtS,MAAZsS,CAAmB,UAAA,IAAA,EAAA;AAAQ,mBAAA,IAAA,KAAS,IAAT;AAAS,WAApCA,EAA0CxgB,OAA1CwgB,CAAkD,UAAA,IAAA,EAAA;AACjD,gBAAMH,MAAAA,GAAS1hB,IAAAA,CAAKoH,KAALpH,CAAWgC,IAAAA,CAAKjE,CAALiE,GAASb,aAAAA,CAAAA,sBAApBnB,CAAf;AACA,gBAAMyF,IAAAA,GAAOzF,IAAAA,CAAKsgB,IAALtgB,CAAKsgB,CAAMte,IAAAA,CAAKjE,CAALiE,GAASA,IAAAA,CAAKgB,KAApBsd,IAA6Bnf,aAAAA,CAAAA,sBAAlCnB,CAAb;AACA,gBAAM2hB,MAAAA,GAAS3hB,IAAAA,CAAKoH,KAALpH,CAAWgC,IAAAA,CAAKhE,CAALgE,GAASb,aAAAA,CAAAA,sBAApBnB,CAAf;AACA,gBAAM0F,IAAAA,GAAO1F,IAAAA,CAAKsgB,IAALtgB,CAAKsgB,CAAMte,IAAAA,CAAKhE,CAALgE,GAASA,IAAAA,CAAKiB,MAApBqd,IAA8Bnf,aAAAA,CAAAA,sBAAnCnB,CAAb;;AAEA,iBAAK,IAAIjC,CAAAA,GAAI2jB,MAAAA,GAAS,CAAtB,EAAyB3jB,CAAAA,IAAK0H,IAAAA,GAAO,CAArC,EAAwC1H,CAAAA,EAAxC,EAA6C;AAC5C,mBAAK,IAAIC,CAAAA,GAAI2jB,MAAAA,GAAS,CAAtB,EAAyB3jB,CAAAA,GAAI0H,IAAAA,GAAO,CAApC,EAAuC1H,CAAAA,EAAvC,EAA4C;AAC3CjD,gBAAAA,KAAAA,CAAK6mB,eAAL7mB,CAAqB+L,MAArB/L,EAA6BA,KAAAA,CAAKoM,iBAALpM,CAAuBgD,CAAvBhD,CAA7BA,EAAwDA,KAAAA,CAAKsM,iBAALtM,CAAuBiD,CAAvBjD,CAAxDA;AAA+EiD;AAAAA;AAAAA,WARlF6jB;AAQkF7jB,SAZnFjD;;AAkBAA,QAAAA,KAAAA,CAAAA,eAAAA,GAAkB,UAAC+L,MAAD,EAAqB/I,CAArB,EAAgCC,CAAhC,EAAgCA;AACjD,cAAI8I,MAAAA,CAAO9I,CAAP8I,CAAAA,KAAca,SAAdb,IAA2BA,MAAAA,CAAO9I,CAAP8I,CAAAA,CAAU/I,CAAV+I,MAAiBa,SAAhD,EAA2D;AAC1Db,YAAAA,MAAAA,CAAO9I,CAAP8I,CAAAA,CAAU/I,CAAV+I,IAAe,CAAfA;AAAe;AAAA,SAFjB/L;;AA5fCA,QAAAA,KAAAA,CAAK0R,YAAL1R,GAAoB,IAAI6iB,cAAAA,CAAAA,YAAJ,EAApB7iB;AACAA,QAAAA,KAAAA,CAAK8iB,aAAL9iB,GAAK8iB,EAAL9iB;AACAA,QAAAA,KAAAA,CAAK+iB,aAAL/iB,GAAK+iB,EAAL/iB;AACAA,QAAAA,KAAAA,CAAKgjB,aAALhjB,GAAKgjB,EAALhjB;AACAA,QAAAA,KAAAA,CAAKijB,cAALjjB,GAAKijB,EAALjjB;AACAA,QAAAA,KAAAA,CAAK2S,MAAL3S,GAAc,IAAdA;AACAA,QAAAA,KAAAA,CAAKkjB,gBAALljB,GAAwB,IAAxBA;AACAA,QAAAA,KAAAA,CAAK4S,8BAAL5S,GAAK4S,EAAL5S;;AAEA,YAAIsJ,SAAAA,CAAAA,OAAAA,CAAQzE,OAAZ,EAAqB;AACpByE,UAAAA,SAAAA,CAAAA,OAAAA,CAAQxE,WAARwE,GAAsB,CAAtBA;;AAGA,cAAI1K,MAAJ,EAAY;AACVA,YAAAA,MAAAA,CAAe,kBAAfA,CAAAA,GAAqCoB,KAArCpB;AAAqCoB;AAAAA;;AAAAA,eAAAA,KAAAA;AAKzCmjB;;AAAAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,uBAAAA,GAAAA,YAAAA;AACCpjB,aAAKqjB,mBAALrjB,CAAyB,IAAIsjB,MAAAA,CAAAA,kBAAJ,EAAzBtjB;AACAA,aAAKujB,mBAALvjB,CAAyB,IAAIsjB,MAAAA,CAAAA,kBAAJ,EAAzBtjB;AACAA,aAAKwjB,mBAALxjB,CAAyB,IAAIyjB,oBAAAA,CAAAA,kBAAJ,EAAzBzjB;AACAA,aAAK0jB,oBAAL1jB,CAA0B,IAAI2jB,qBAAAA,CAAAA,mBAAJ,EAA1B3jB;AAA8B2jB,OAJ/BP;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,YAAAA;AACCpjB,aAAKuE,gBAALvE,CAAsB,UAAA,QAAA,EAAA;AACrB,cAAIwE,QAAAA,CAAS4Z,aAAb,EAA4B;AAC3B5Z,YAAAA,QAAAA,CAAS4Z,aAAT5Z;AAAS4Z;AAAAA,SAFXpe;AAEWoe,OAHZgF;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,GAAAA,YAAAA;AACCpjB,aAAKmjB,gBAALnjB,GAAwB,IAAxBA;AAAwB,OADzBojB;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,UAAsB9b,QAAtB8b,EAAsB9b;AAAtB8b,YAAAA,KAAAA,GAAAA,IAAAA;;AACCpjB,aAAKmjB,gBAALnjB,GAAKmjB,EAALnjB;AACAsH,QAAAA,QAAAA,CAASf,OAATe,CAAiB,UAAA,MAAA,EAAA;AAEhB,cAAI0C,MAAAA,YAAkBkS,WAAAA,CAAAA,SAAtB,EAAiC;AAChCrY,YAAAA,CAAAA,CAAE0C,OAAF1C,CAAUmG,MAAAA,CAAO6V,QAAP7V,EAAVnG,EAA6B,UAAA,IAAA,EAAA;AAC5BA,cAAAA,CAAAA,CAAE0C,OAAF1C,CAAUqD,IAAAA,CAAKC,QAALD,EAAVrD,EAA2B,UAAA,IAAA,EAAA;AAC1B5D,gBAAAA,KAAAA,CAAKkjB,gBAALljB,CAAsB8C,IAAAA,CAAKkG,KAALlG,EAAtB9C,IAAsC,IAAtCA;AAAsC,eADvC4D;AACuC,aAFxCA;AAOD;;AAAA,cAAImG,MAAAA,YAAkB8E,YAAAA,CAAAA,UAAtB,EAAkC;AACjC7O,YAAAA,KAAAA,CAAKkjB,gBAALljB,CAAsB+J,MAAAA,CAAO6S,OAAP7S,GAAiBf,KAAjBe,EAAtB/J,IAAkD,IAAlDA;AAGDA;;AAAAA,UAAAA,KAAAA,CAAKkjB,gBAALljB,CAAsB+J,MAAAA,CAAOf,KAAPe,EAAtB/J,IAAwC,IAAxCA;AAAwC,SAdzCqH;AAcyC,OAhB1C8b;;AAwBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,UAAcvO,KAAduO,EAAcvO;AAEb,YAAI7U,KAAK2R,YAAL3R,CAAkBkE,QAAlBlE,EAAJ,EAAkC;AACjC,iBAAO,IAAP;AAGD;;AAAA,eAAO6U,KAAAA,CAAM3Q,QAAN2Q,EAAP;AAAa3Q,OANdkf;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,wBAAAA,GAAAA,YAAAA;AACCpjB,aAAK0R,aAAL1R,GAAqB,KAArBA;AACAA,aAAK6S,8BAAL7S,GAAK6S,EAAL7S;AAAK6S,OAFNuQ;;AAKAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,UAAiBQ,SAAjBR,EAAiBQ;AAEhB,YAAI5jB,KAAKmjB,gBAALnjB,KAA0B,IAA9B,EAAoC;AACnC,iBAAO,IAAP;AAGD;;AAAA,eAAOA,KAAKmjB,gBAALnjB,CAAsB4jB,SAAAA,CAAU3a,KAAV2a,EAAtB5jB,MAA6C6M,SAApD;AAAoDA,OANrDuW;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,UAAUxQ,MAAVwQ,EAAUxQ;AACT5S,aAAK4S,MAAL5S,GAAc4S,MAAd5S;AAAc4S,OADfwQ;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,UAAgBvO,KAAhBuO,EAAgBvO;AACf7U,aAAK2R,YAAL3R,GAAoB6U,KAApB7U;AACAA,aAAK6jB,wBAAL7jB;AAAK6jB,OAFNT;;AAKAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,YAAAA;AACC,eAAOpjB,KAAK2R,YAAZ;AAAYA,OADbyR,CArHD,CA2HCU;;;oBAAAA,S,CAAAA,gB,GAAAA,YAAAA;AACC,eAAO9jB,KAAK+iB,aAAZ;AAAYA,O;;AAGbK,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,YAAAA;AACC,eAAOpjB,KAAKgjB,aAAZ;AAAYA,OADbI;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,YAAAA;AACC,eAAOpjB,KAAKkjB,cAAZ;AAAYA,OADbE;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,GAAAA,UAAqBW,OAArBX,EAAqBW;AACpB/jB,aAAKkjB,cAALljB,CAAoB+jB,OAAAA,CAAQtQ,OAARsQ,EAApB/jB,IAAyC+jB,OAAzC/jB;AACAA,aAAKuE,gBAALvE,CAAsB,UAAA,QAAA,EAAA;AACrB,cAAIwE,QAAAA,CAASwf,qBAAb,EAAoC;AACnCxf,YAAAA,QAAAA,CAASwf,qBAATxf;AAASwf;AAAAA,SAFXhkB;AAEWgkB,OAJZZ;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoBW,OAApBX,EAAoBW;AACnB/jB,aAAKijB,aAALjjB,CAAmB+jB,OAAAA,CAAQtQ,OAARsQ,EAAnB/jB,IAAwC+jB,OAAxC/jB;AACAA,aAAKuE,gBAALvE,CAAsB,UAAA,QAAA,EAAA;AACrB,cAAIwE,QAAAA,CAASyf,oBAAb,EAAmC;AAClCzf,YAAAA,QAAAA,CAASyf,oBAATzf;AAASyf;AAAAA,SAFXjkB;AAEWikB,OAJZb;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoBW,OAApBX,EAAoBW;AACnB/jB,aAAK+iB,aAAL/iB,CAAmB+jB,OAAAA,CAAQtQ,OAARsQ,EAAnB/jB,IAAwC+jB,OAAxC/jB;AACAA,aAAKuE,gBAALvE,CAAsB,UAAA,QAAA,EAAA;AACrB,cAAIwE,QAAAA,CAAS0f,oBAAb,EAAmC;AAClC1f,YAAAA,QAAAA,CAAS0f,oBAAT1f;AAAS0f;AAAAA,SAFXlkB;AAEWkkB,OAJZd;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAAA,UAAoBW,OAApBX,EAAoBW;AACnB/jB,aAAKgjB,aAALhjB,CAAmB+jB,OAAAA,CAAQtQ,OAARsQ,EAAnB/jB,IAAwC+jB,OAAxC/jB;AACAA,aAAKuE,gBAALvE,CAAsB,UAAA,QAAA,EAAA;AACrB,cAAIwE,QAAAA,CAAS2f,oBAAb,EAAmC;AAClC3f,YAAAA,QAAAA,CAAS2f,oBAAT3f;AAAS2f;AAAAA,SAFXnkB;AAEWmkB,OAJZf;;AASAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAejf,IAAfif,EAAejf;AACd,YAAInE,KAAKijB,aAALjjB,CAAmBmE,IAAnBnE,CAAJ,EAA8B;AAC7B,iBAAOA,KAAKijB,aAALjjB,CAAmBmE,IAAnBnE,CAAP;AAED;;AAAA,cAAM,IAAIwT,KAAJ,CAAU,4CAA0CrP,IAA1C,GAA8C,GAAxD,CAAN;AAA8D,OAJ/Dif;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAejf,IAAfif,EAAejf;AACd,YAAInE,KAAK+iB,aAAL/iB,CAAmBmE,IAAnBnE,CAAJ,EAA8B;AAC7B,iBAAOA,KAAK+iB,aAAL/iB,CAAmBmE,IAAnBnE,CAAP;AAED;;AAAA,cAAM,IAAIwT,KAAJ,CAAU,4CAA0CrP,IAA1C,GAA8C,GAAxD,CAAN;AAA8D,OAJ/Dif;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAejf,IAAfif,EAAejf;AACd,YAAInE,KAAKgjB,aAALhjB,CAAmBmE,IAAnBnE,CAAJ,EAA8B;AAC7B,iBAAOA,KAAKgjB,aAALhjB,CAAmBmE,IAAnBnE,CAAP;AAED;;AAAA,cAAM,IAAIwT,KAAJ,CAAU,4CAA0CrP,IAA1C,GAA8C,GAAxD,CAAN;AAA8D,OAJ/Dif;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,UAAgBjf,IAAhBif,EAAgBjf;AACf,YAAInE,KAAKkjB,cAALljB,CAAoBmE,IAApBnE,CAAJ,EAA+B;AAC9B,iBAAOA,KAAKkjB,cAALljB,CAAoBmE,IAApBnE,CAAP;AAED;;AAAA,cAAM,IAAIwT,KAAJ,CAAU,6CAA2CrP,IAA3C,GAA+C,GAAzD,CAAN;AAA+D,OAJhEif;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkB5iB,IAAlB4iB,EAAkB5iB;AACjB,eAAOR,KAAKub,cAALvb,CAAoBQ,IAAAA,CAAKiT,OAALjT,EAApBR,CAAP;AAAgCyT,OADjC2P;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkBrgB,IAAlBqgB,EAAkBrgB;AACjB,eAAO/C,KAAK0b,cAAL1b,CAAoB+C,IAAAA,CAAK0Q,OAAL1Q,EAApB/C,CAAP;AAAgCyT,OADjC2P;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAAA,UAAmB1V,KAAnB0V,EAAmB1V;AAClB,eAAO1N,KAAKoP,eAALpP,CAAqB0N,KAAAA,CAAM+F,OAAN/F,EAArB1N,CAAP;AAAkCyT,OADnC2P;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,UAAsBrgB,IAAtBqgB,EAAsBrgB;AACrB,YAAIqhB,WAAAA,GAAcpkB,KAAK0X,iBAAL1X,CAAuB+C,IAAvB/C,CAAlB;;AACA,YAAA,CAAKokB,WAAL,EAAkB;AACjB,gBAAM,IAAI5Q,KAAJ,CAAU,wCAAwCzQ,IAAAA,CAAK0Q,OAAL1Q,EAAlD,CAAN;AAED;;AAAA,eAAOqhB,WAAAA,CAAY5M,mBAAZ4M,CAAgCpkB,IAAhCokB,EAAsCrhB,IAAtCqhB,CAAP;AAA6CrhB,OAL9CqgB;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,UAAsB5iB,IAAtB4iB,EAAsB5iB;AACrB,YAAI6jB,WAAAA,GAAcrkB,KAAKskB,iBAALtkB,CAAuBQ,IAAvBR,CAAlB;;AACA,YAAA,CAAKqkB,WAAL,EAAkB;AACjB,gBAAM,IAAI7Q,KAAJ,CAAU,0CAA0ChT,IAAAA,CAAKiT,OAALjT,EAApD,CAAN;AAED;;AAAA,eAAO6jB,WAAAA,CAAY7M,mBAAZ6M,CAAgCrkB,IAAhCqkB,EAAsC7jB,IAAtC6jB,CAAP;AAA6C7jB,OAL9C4iB;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,UAAsB3e,KAAtB2e,EAAsB3e;AACrB,YAAI2C,KAAAA,GAAQpH,KAAKkf,gBAALlf,CAAsByE,KAAAA,CAAM0a,OAA5Bnf,EAAqCyE,KAAAA,CAAM2a,OAA3Cpf,CAAZ;AACA,eAAA;AACCiD,UAAAA,CAAAA,EAAAA,CAAImE,KAAAA,CAAMnE,CAANmE,GAAUpH,KAAK2R,YAAL3R,CAAkBmS,UAAlBnS,EAAdiD,KAAiDjD,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GAApFiD,CADD;AAECC,UAAAA,CAAAA,EAAAA,CAAIkE,KAAAA,CAAMlE,CAANkE,GAAUpH,KAAK2R,YAAL3R,CAAkBoS,UAAlBpS,EAAdkD,KAAiDlD,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GAApFkD;AAFD,SAAA;AAEqF,OAJtFkgB;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,UAAiBngB,CAAjBmgB,EAAoBlgB,CAApBkgB,EAAoBlgB;AACnB,YAAIqhB,UAAAA,GAAavkB,KAAK4S,MAAL5S,CAAYyhB,qBAAZzhB,EAAjB;AACA,eAAA;AAASiD,UAAAA,CAAAA,EAAGA,CAAAA,GAAIshB,UAAAA,CAAW/S,IAA3B;AAAiCtO,UAAAA,CAAAA,EAAGA,CAAAA,GAAIqhB,UAAAA,CAAWhT;AAAnD,SAAA;AAAmDA,OAFpD6R;;AAKAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAe5iB,IAAf4iB,EAAe5iB;AACd,YAAMJ,QAAAA,GAAWJ,KAAK4S,MAAL5S,CAAYwkB,aAAZxkB,CAA0B,wBAAsBQ,IAAAA,CAAKyI,KAALzI,EAAtB,GAAkC,IAA5DR,CAAjB;;AACA,YAAII,QAAAA,KAAa,IAAjB,EAAuB;AACtB,gBAAM,IAAIoT,KAAJ,CAAU,4CAA4ChT,IAAAA,CAAKyI,KAALzI,EAA5C,GAA2D,GAArE,CAAN;AAED;;AAAA,eAAOJ,QAAP;AAAOA,OALRgjB;;AAQAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAAA,UAAmBlc,IAAnBkc,EAAmBlc;AAClB,YAAI9G,QAAAA,GAAWJ,KAAK4S,MAAL5S,CAAYwkB,aAAZxkB,CACd,sBAAoBkH,IAAAA,CAAKud,OAALvd,EAApB,GAAkC,kBAAlC,GAAqDA,IAAAA,CAAKzD,SAALyD,GAAiB+B,KAAjB/B,EAArD,GAA6E,IAD/DlH,CAAf;;AAGA,YAAII,QAAAA,KAAa,IAAjB,EAAuB;AACtB,gBAAM,IAAIoT,KAAJ,CACL,iDACCtM,IAAAA,CAAKzD,SAALyD,GAAiB+B,KAAjB/B,EADD,GAEC,eAFD,GAGCA,IAAAA,CAAKud,OAALvd,EAHD,GAIC,GALI,CAAN;AAQD;;AAAA,eAAO9G,QAAP;AAAOA,OAbRgjB;;AAgBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,UAAclc,IAAdkc,EAAclc;AACb,YAAIwd,aAAAA,GAAgB1kB,KAAK2kB,kBAAL3kB,CAAwBkH,IAAxBlH,CAApB;AACA,YAAI4kB,UAAAA,GAAaF,aAAAA,CAAcjD,qBAAdiD,EAAjB;AAEA,YAAIG,GAAAA,GAAM7kB,KAAKkf,gBAALlf,CAAsB4kB,UAAAA,CAAWpT,IAAjCxR,EAAuC4kB,UAAAA,CAAWrT,GAAlDvR,CAAV;AAEA,eAAA;AACCiD,UAAAA,CAAAA,EACCyhB,aAAAA,CAActN,WAAdsN,GAA4B,CAA5BA,GAA4B,CAC3BG,GAAAA,CAAI5hB,CAAJ4hB,GAAQ7kB,KAAK2R,YAAL3R,CAAkBmS,UAAlBnS,EADmB,KACgBA,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GADnD,CAF9B;AAICkD,UAAAA,CAAAA,EACCwhB,aAAAA,CAAcrN,YAAdqN,GAA6B,CAA7BA,GAA6B,CAC5BG,GAAAA,CAAI3hB,CAAJ2hB,GAAQ7kB,KAAK2R,YAAL3R,CAAkBoS,UAAlBpS,EADoB,KACeA,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GADlD;AAL/B,SAAA;AAMiF,OAZlFojB;;AAmBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,UACClc,IADDkc,EACClc;AAOA,YAAMwd,aAAAA,GAAgB1kB,KAAK2kB,kBAAL3kB,CAAwBkH,IAAxBlH,CAAtB;AACA,YAAM4kB,UAAAA,GAAaF,aAAAA,CAAcjD,qBAAdiD,EAAnB;AACA,YAAMH,UAAAA,GAAavkB,KAAK4S,MAAL5S,CAAYyhB,qBAAZzhB,EAAnB;AAEA,eAAA;AACCiD,UAAAA,CAAAA,EAAAA,CACE2hB,UAAAA,CAAW3hB,CAAX2hB,GAAe5kB,KAAK2R,YAAL3R,CAAkBmS,UAAlBnS,EADjBiD,KACoDjD,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GADvFiD,IAECshB,UAAAA,CAAW/S,IAHb;AAICtO,UAAAA,CAAAA,EAAAA,CACE0hB,UAAAA,CAAW1hB,CAAX0hB,GAAe5kB,KAAK2R,YAAL3R,CAAkBoS,UAAlBpS,EADjBkD,KACoDlD,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmC,GADvFkD,IAECqhB,UAAAA,CAAWhT,GANb;AAOCrJ,UAAAA,KAAAA,EAAO0c,UAAAA,CAAW1c,KAPnB;AAQCC,UAAAA,MAAAA,EAAQyc,UAAAA,CAAWzc;AARpB,SAAA;AAQoBA,OApBrBib;;AA4BAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkB5iB,IAAlB4iB,EAAkB5iB;AACjB,YAAA,CAAKR,KAAK4S,MAAV,EAAkB;AACjB,iBAAA;AACC1K,YAAAA,KAAAA,EAAO,CADR;AAECC,YAAAA,MAAAA,EAAQ;AAFT,WAAA;AAMD;;AAAA,YAAMqW,WAAAA,GAAcxe,KAAK8kB,cAAL9kB,CAAoBQ,IAApBR,CAApB;AACA,YAAM+kB,QAAAA,GAAWvG,WAAAA,CAAYiD,qBAAZjD,EAAjB;AAEA,eAAA;AACCtW,UAAAA,KAAAA,EAAO6c,QAAAA,CAAS7c,KADjB;AAECC,UAAAA,MAAAA,EAAQ4c,QAAAA,CAAS5c;AAFlB,SAAA;AAEkBA,OAbnBib;;AAiBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,yBAAAA,GAAAA,YAAAA;AACC,eAAOpjB,KAAKod,sBAAZ;AAAYA,OADbgG;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,yBAAAA,GAAAA,UAA0B4B,GAA1B5B,EAA0B4B;AACzBhlB,aAAKod,sBAALpd,GAA8BglB,GAA9BhlB;AAA8BglB,OAD/B5B;;AAIAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,YAAAA;AACC,eAAA,CAAA,CAASpjB,KAAKsd,YAAd;AAAcA,OADf8F;;AAGAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,UAAsB6B,MAAtB7B,EAAsB6B;AACrBjlB,aAAKsd,YAALtd,GAAoBilB,MAApBjlB;AAAoBilB,OADrB7B;;AAkBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,eAAAA,GAAAA,YAAAA;AACC,YAAIpjB,KAAKklB,YAALllB,CAAkB2M,MAAlB3M,KAA6B,CAAjC,EAAoC;AACnCA,eAAK+f,qBAAL/f;AAGD;;AAAA,eAAOA,KAAKklB,YAAZ;AAAYA,OALb9B;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,YAAAA;AACO,YAAA,EAAA,GAAA,KAAA,yBAAA,EAAA;AAAA,YACL+B,WAAAA,GAAAA,EAAAA,CAAAA,KADK;AAAA,YAELC,iBAAAA,GAAAA,EAAAA,CAAAA,iBAFK;AAAA,YAGLC,YAAAA,GAAAA,EAAAA,CAAAA,MAHK;AAAA,YAILC,iBAAAA,GAAAA,EAAAA,CAAAA,iBAJK;;AAONtlB,aAAKolB,iBAALplB,GAAyBolB,iBAAzBplB;AACAA,aAAKslB,iBAALtlB,GAAyBslB,iBAAzBtlB;AAEA,YAAMulB,WAAAA,GAAcrgB,IAAAA,CAAKsgB,IAALtgB,CAAUigB,WAAAA,GAAc9e,aAAAA,CAAAA,sBAAxBnB,CAApB;AACA,YAAMugB,YAAAA,GAAevgB,IAAAA,CAAKsgB,IAALtgB,CAAUmgB,YAAAA,GAAehf,aAAAA,CAAAA,sBAAzBnB,CAArB;AAEAlF,aAAKklB,YAALllB,GAAoB6D,CAAAA,CAAE6hB,KAAF7hB,CAAQ,CAARA,EAAW4hB,YAAX5hB,EAAyB4D,GAAzB5D,CAA6B,YAAA;AAChD,iBAAO,IAAI8X,KAAJ,CAAU4J,WAAV,EAAuBI,IAAvB,CAA4B,CAA5B,CAAP;AAAmC,SADhB9hB,CAApB7D;AACoC,OAfrCojB;;AAiCAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAAA,YAAAA;AACC,YAAIpjB,KAAKkN,aAALlN,CAAmB2M,MAAnB3M,KAA8B,CAAlC,EAAqC;AACpCA,eAAK8f,sBAAL9f;AAGD;;AAAA,eAAOA,KAAKkN,aAAZ;AAAYA,OALbkW;;AAOAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,sBAAAA,GAAAA,YAAAA;AACC,YAAMpX,MAAAA,GAASnI,CAAAA,CAAE+hB,SAAF/hB,CAAY7D,KAAKiM,eAALjM,EAAZ6D,CAAf;;AAGA7D,aAAK6lB,SAAL7lB,CAAegM,MAAfhM;AAEAA,aAAK8lB,SAAL9lB,CAAegM,MAAfhM;AAEAA,aAAKkN,aAALlN,GAAqBgM,MAArBhM;AAAqBgM,OARtBoX;;AAgBAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkBngB,CAAlBmgB,EAA6BxW,OAA7BwW,EAA6BxW;AAAAA,YAAAA,OAAAA,KAAAA,KAAAA,CAAAA,EAAAA;AAAAA,UAAAA,OAAAA,GAAAA,KAAAA;AAC5B;;AAAA,eAAO3J,CAAAA,GAAIjD,KAAKolB,iBAALplB,IAA0B4M,OAAAA,GAAAA,CAAW,CAAXA,GAAe,CAAzC5M,CAAX;AAAoD,OADrDojB;;AAGAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAAA,UAAkBlgB,CAAlBkgB,EAA6BxW,OAA7BwW,EAA6BxW;AAAAA,YAAAA,OAAAA,KAAAA,KAAAA,CAAAA,EAAAA;AAAAA,UAAAA,OAAAA,GAAAA,KAAAA;AAC5B;;AAAA,eAAO1J,CAAAA,GAAIlD,KAAKslB,iBAALtlB,IAA0B4M,OAAAA,GAAAA,CAAW,CAAXA,GAAe,CAAzC5M,CAAX;AAAoD,OADrDojB;;AAkHAA,MAAAA,aAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,YAAAA;AACC,YAAMtB,OAAAA,GAAU9hB,KAAK4S,MAAL5S,CAAY0hB,WAAZ1hB,GAA0BA,KAAK4S,MAAL5S,CAAYgnB,WAAtD;AACA,YAAMjF,OAAAA,GAAU/hB,KAAK4S,MAAL5S,CAAY2hB,YAAZ3hB,GAA2BA,KAAK4S,MAAL5S,CAAYinB,YAAvD;AACA,YAAM3F,UAAAA,GAAaQ,OAAAA,GAAUC,OAAVD,GAAoBA,OAApBA,GAA8BC,OAAjD;AAEA/hB,aAAK2R,YAAL3R,CAAkBqhB,YAAlBrhB,CAA+BA,KAAK2R,YAAL3R,CAAkBqS,YAAlBrS,KAAmCshB,UAAlEthB;AACAA,aAAK2R,YAAL3R,CAAkBigB,SAAlBjgB,CAA4B,CAA5BA,EAA+B,CAA/BA;AACAA,aAAKoe,aAALpe;AAAKoe,OAPNgF;;AASD,aAAA,aAAA;AAliBA,KAAA,CAAmCP,YAAAA,CAAAA,UAAnC,CAAA;;AAAalkB,IAAAA,OAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAAAA,GjD+Bb,EiD/BaA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AClCbO,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AACAI,MAAAA,KAAAA,EAAAA;AADAJ,KAAAA;;AAIA,QAAA,cAAA,GAAA,YAAA;AAAmC,eAAA,aAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AAAiC,YAAA,IAAA,GAAA,EAAA;AAAe,YAAA,EAAA,GAAA,IAAA;AAAe,YAAA,EAAA,GAAA,KAAA;AAAgB,YAAA,EAAA,GAAA,SAAA;;AAAoB,YAAA;AAAM,eAAA,IAAA,EAAA,GAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAA0CgoB,EAAAA,GAAAA,CAAAA,EAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,IAA1C,CAAA,EAAyEA,EAAAA,GAAAA,IAAzE,EAAyEA;AAAaC,YAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA,KAAAA;;AAAqB,gBAAA,CAAA,IAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AAAA;AAAuC,SAAxJ,CAAwJ,OAAA,GAAA,EAAA;AAAcC,UAAAA,EAAAA,GAAAA,IAAAA;AAAWC,UAAAA,EAAAA,GAAAA,GAAAA;AAAY,SAA7L,SAA6L;AAAU,cAAA;AAAM,gBAAA,CAAA,EAAA,IAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA;AAA2C,WAAjD,SAAiD;AAAU,gBAAA,EAAA,EAAA,MAAA,EAAA;AAAA;AAAsB;;AAAA,eAAA,IAAA;AAAe;;AAAA,aAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAA0B,iBAAA,GAAA;AAAA,SAA1B,MAAwC,IAAA,MAAA,CAAA,QAAA,IAAA,MAAA,CAAA,GAAA,CAAA,EAAA;AAA2C,iBAAA,aAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AAAA,SAA3C,MAA2E;AAAO,gBAAA,IAAA,SAAA,CAAA,sDAAA,CAAA;AAAA;AAAA,OAArJ;AAA7a,KAAA,EAAA;;AAEA,QAAA,EAAA,GAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AACA,aAAA,CAAA,GAAA,CAAA;AAAA,KADA;;AAIA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,EAAA;AACA,UAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;AAEA,UAAA,EAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,KAAA,CAAA,CAAA,CAAA;;AAEA,UAAA,MAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;;AAEA,UAAA,EAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AAAA,KAVA;;AAaA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAEA,aAAA,CAAA,IAAA,CAAA,GAAA,QAAA,GAAA,EAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAHA;;AAMA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,UAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AAEA,UAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AAAA,KAPA;;AAUA,QAAA,cAAA,GAAA,SAAA,caAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AAAA,KANA;;AASA,QAAA,gBAAA,GAAA,SAAA,gaAAA,CAAA,IAAA,CAAA,MAAA,IAAA,CAAA,IAAA,MAAA,IAAA,CAAA,IAAA,MAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AAAA,KAhBA;;AAmBA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,eAAA;AACApkB,UAAAA,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CADA;AAEAC,UAAAA,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAFA,SAAA;AAEAA,OAHA,CAAA;AAGAA,KAJA;;AASA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA;AACA,UAAA,OAAA,GAAA,KAAA;AAEA,UAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,EAAA,GAAA,KAAA,CAAA;AAAA,UACAokB,CAAAA,GAAAA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CADA;AAEA,UAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAEA,UAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAA,UACAC,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CADA;AAGA,UAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,UAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,OAAA,GAAA,EAAA,EAAA;AACA,eAAA;AACAC,UAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CADA;AAEAC,UAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAFA;AAGAC,UAAAA,EAAAA,EAAAA,CAHA;AAIAC,UAAAA,YAAAA,EAAAA;AAJA,SAAA;AAQA;;AAAA,UAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AACAC,MAAAA,CAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAEA,UAAA,EAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AAAA,UACAC,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,GAAAA,CADA;AAGA,UAAA,KAAA,GAAA,SAAA;AAAA,UACAC,KAAAA,GAAAA,SADA;AAAA,UAEAC,KAAAA,GAAAA,SAFA;AAGAC,MAAAA,KAAAA,GAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,IAAAA,OAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,IAAAA,OAAAA,GAAAA,EAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAAA,IAAAA,GAAAA,GAAAA,IAAAA,CAAAA,EAAAA;;AAEA,UAAA,KAAA,IAAA,CAAA,EAAA;AACAF,QAAAA,KAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA;AACAC,QAAAA,KAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA;AAAAA,OAFA,MAGG;AACHC,QAAAA,KAAAA,IAAAA,EAAAA;AACAF,QAAAA,KAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA;AACAC,QAAAA,KAAAA,GAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA;AAGA;;AAAA,aAAA;AACAP,QAAAA,EAAAA,EAAAA,KADA;AAEAC,QAAAA,EAAAA,EAAAA,KAFA;AAGAC,QAAAA,EAAAA,EAAAA,KAHA;AAIAC,QAAAA,YAAAA,EAAAA,KAAAA,GAAAA,OAAAA,GAAAA,KAAAA,IAAAA,KAAAA,GAAAA,OAAAA,GAAAA;AAJA,OAAA;AAIAA,KAhDA;;AAoDAhpB,IAAAA,OAAAA,CAAAA,SAAAA,CAAAA,GAAAA;AAAsBspB,MAAAA,gBAAAA,EAAAA,gBAAtBtpB;AAAsBspB,MAAAA,kBAAAA,EAAAA,kBAAtBtpB;AAAsBspB,MAAAA,YAAAA,EAAAA,YAAtBtpB;AACAupB,MAAAA,cAAAA,EAAAA,cADAvpB;AACAupB,MAAAA,gBAAAA,EAAAA,gBADAvpB;AACAupB,MAAAA,eAAAA,EAAAA,eADAvpB;AACAupB,MAAAA,gBAAAA,EAAAA;AADAvpB,KAAAA;AAEAF,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,OAAAA,CAAAA,SAAAA,CAAAA;AAAAA,GlDjEA,EkDiEAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AAAAA;;AClIAS,IAAAA,MAAAA,CAAAA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAAAA;AACAI,MAAAA,KAAAA,EAAAA;AADAJ,KAAAA;;AAIA,QAAA,cAAA,GAAA,YAAA;AAAmC,eAAA,aAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AAAiC,YAAA,IAAA,GAAA,EAAA;AAAe,YAAA,EAAA,GAAA,IAAA;AAAe,YAAA,EAAA,GAAA,KAAA;AAAgB,YAAA,EAAA,GAAA,SAAA;;AAAoB,YAAA;AAAM,eAAA,IAAA,EAAA,GAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAA0CgoB,EAAAA,GAAAA,CAAAA,EAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,IAA1C,CAAA,EAAyEA,EAAAA,GAAAA,IAAzE,EAAyEA;AAAaC,YAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA,CAAAA,KAAAA;;AAAqB,gBAAA,CAAA,IAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AAAA;AAAuC,SAAxJ,CAAwJ,OAAA,GAAA,EAAA;AAAcC,UAAAA,EAAAA,GAAAA,IAAAA;AAAWC,UAAAA,EAAAA,GAAAA,GAAAA;AAAY,SAA7L,SAA6L;AAAU,cAAA;AAAM,gBAAA,CAAA,EAAA,IAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA;AAA2C,WAAjD,SAAiD;AAAU,gBAAA,EAAA,EAAA,MAAA,EAAA;AAAA;AAAsB;;AAAA,eAAA,IAAA;AAAe;;AAAA,aAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAA0B,iBAAA,GAAA;AAAA,SAA1B,MAAwC,IAAA,MAAA,CAAA,QAAA,IAAA,MAAA,CAAA,GAAA,CAAA,EAAA;AAA2C,iBAAA,aAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AAAA,SAA3C,MAA2E;AAAO,gBAAA,IAAA,SAAA,CAAA,sDAAA,CAAA;AAAA;AAAA,OAArJ;AAA7a,KAAA,EAAA;;AAEA,QAAA,KAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,IAAA,GAAA,SAAA,IAAA,CAAA,IAAA,EAAA;AACA,UAAA,aAAA,GAAA,IAAA,IAAA,EAAA;;AAEA,UAAA,IAAA,GAAA,SAAA,IAAA,CAAA,GAAA,EAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA;AACAc,QAAAA,IAAAA,CAAAA,IAAAA,CAAAA,EAAAA;AACA,eAAA,IAAA;AAAA,OAHA;;AAMA,UAAA,cAAA,GAAA,SAAA,cAAA,CAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;AAEA,YAAA,EAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,YAAA,EAAA,GAAA,KAAA,CAAA,CAAA,CAAA;;AAEA,YAAA,MAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;;AAEA,YAAA,EAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,YAAA,EAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA;AAAA,OAVA;;AAaA,UAAA,SAAA,GAAA,SAAA,SAAA,CAAA,MAAA,EAAA,IAAA,EAAA;AACA,YAAA,CAAA,GAAA,MAAA,CAAA,MAAA;;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,MAAA,GAAA,EAAA;AACAppB,UAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA;AAEA;;AAAA,YAAA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA,MAAA,GAAA,EAAA;AACAA,UAAAA,CAAAA,GAAAA,CAAAA,GAAAA,CAAAA;AAEA;;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,OARA;;AAWA,UAAA,KAAA,GAAA,SAAA,KAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACA,YAAA,GAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AACA,eAAA,SAAA,CAAA,GAAA,CAAA;AAAA,OAFA;;AAKA,UAAA,iBAAA,GAAA,SAAA,iBAAA,CAAA,KAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AACA,YAAA,MAAA,GAAA,KAAA,CAAA,MAAA;AAEA,YAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,SADA,CAAA;AAGA,eAAA,OAAA,GAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OAPA;;AAUA,UAAA,KAAA,GAAA,SAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AACA,YAAA,MAAA,GAAA,KAAA,CAAA,MAAA;;AAEA,gBAAA,OAAA;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,IAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;;AACA,eAAA,GAAA;AACA,mBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AApBA;AAoBA,OAxBA;;AA4BA,UAAA,eAAA,GAAA,SAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,EAAA;AACA,YAAA,CAAA,GAAA,WAAA,CAAA,MAAA;AAEA,YAAA,WAAA,GAAA;AACAqpB,UAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACA,gBAAA,GAAA,GAAA,CAAA;AAAoBnlB,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,CAApB;AAAoBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAApB,aAAA,CAAA;AACA,gBAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,CAAA;AAAyDA,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,CAAzD;AAAyDA,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA;AAAzD,aAAA,CAAA,EAAkF,CAAlF,EAAkF,CAAlF,EAAkF;AAClF,qBAAA;AACAolB,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA,aAHA,MAKS;AACT,qBAAA;AACAD,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA;AAAAA,WAZA;AAgBAC,UAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACA,gBAAA,GAAA,GAAA,CAAA;AAAoBtlB,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAApB;AAAoBA,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA;AAApB,aAAA,CAAA;AACA,gBAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,CAAA;AAAyDA,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,CAAzD;AAAyDA,cAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA;AAAzD,aAAA,CAAA,EAAkF,CAAlF,EAAkF,CAAlF,EAAkF;AAClF,qBAAA;AACAolB,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA,aAHA,MAKS;AACT,qBAAA;AACAD,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA;AAAAA,WA3BA;AA+BAE,UAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AAEA,gBAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAEA,gBAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA;AACAC,cAAAA,SAAAA,GAAAA,SAAAA,GAAAA,GAAAA,GAAAA,GAAAA;AAIA;;AAAA,gBAAA,GAAA,GAAA,CAAA;AAAoBxlB,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAApB;AAAoBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAApB,aAAA,CAAA;AACA,gBAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA;;AAEA,gBAAA,CAAA,CAAA,YAAA,EAAA;AACA,qBAAA;AACAolB,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA,aAHA,MAKS;AACT,qBAAA;AACAD,gBAAAA,OAAAA,EAAAA,GADA;AAEAC,gBAAAA,MAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,SAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,eAAA;AAEAA;AAAAA,WApDA;AAwDAI,UAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACA,gBAAA,GAAA,GAAA,CAAA;AAAoBzlB,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAApB;AAAoBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAApB,aAAA,EAAoBA;AAAsBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAtBA;AAAsBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAAtBA,aAApB,EAA0CA;AAAsBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAtBA;AAAsBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAAtBA,aAA1C,CAAA;AACA,gBAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA;AACA,mBAAA;AACAolB,cAAAA,OAAAA,EAAAA,GADA;AAEAC,cAAAA,MAAAA,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAFA,aAAA;AAEAA,WA7DA;AAgEAK,UAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACA,mBAAA;AACAN,cAAAA,OAAAA,EAAAA,GADA;AAEAC,cAAAA,MAAAA,EAAAA;AAFA,aAAA;AAEAA,WAnEA;AAsEAM,UAAAA,OAAAA,EAAAA,SAAAA,QAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACA,gBAAA,GAAA,GAAA,CAAA;AAAoB3lB,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAApB;AAAoBA,cAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAApB,aAAA,CAAA;AACA,gBAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA;AACA,gBAAA,SAAA,GAAA,WAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,WAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA4lB,YAAAA,SAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACA,mBAAA;AACAR,cAAAA,OAAAA,EAAAA,WAAAA,CAAAA,OADA;AAEAC,cAAAA,MAAAA,EAAAA;AAFA,aAAA;AAEAA;AA7EA,SAAA;;AAkFA,YAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,EAAA;AACA,iBAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AAAA,SADA,MAEK;AACL,iBAAA,WAAA,CAAA,SAAA,CAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AAAA;AAAA,OAxFA;;AA4FA,UAAA,SAAA,GAAA,SAAA,SAAA,CAAA,IAAA,EAAA,CAAA,EAAA;AACA,eAAA,UAAA,CAAA,EAAA;AACA,cAAA,IAAA,GAAA,OAAA,CAAA,KAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,CAAA,CAAA;AAAA,WADA,CAAA,GAEOQ,SAFP;AAGA,iBAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AAAA,SAJA;AAIA,OALA;;AASA,UAAA,IAAA,GAAA,SAAA,IAAA,CAAA,WAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,aAAA,EAAA,WAAA,CAAA,CAAA;AAAA,OADA;;AAIA,aAAA;AACA1iB,QAAAA,MAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAiiB,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAliB,CADA;AAOAI,QAAAA,MAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACA6hB,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHA9hB,CAPA;AAaAuiB,QAAAA,OAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAV,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAS,CAbA;AAmBAC,QAAAA,OAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAX,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAU,CAnBA;AAyBAC,QAAAA,SAAAA,EAAAA,SAAAA,SAAAA,GAAAA;AACA,iBAAA,IAAA,CAAA;AACAZ,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA;AAFA,WAAA,CAAA;AAEAA,SA5BA;AA+BAY,QAAAA,OAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAb,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAY,CA/BA;AAqCAC,QAAAA,aAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAd,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAa,CArCA;AA2CAC,QAAAA,QAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAf,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAc,CA3CA;AAiDAC,QAAAA,cAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAhB,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAe,CAjDA;AAuDAC,QAAAA,GAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,MAAAA,EAAAA,cAAAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,YAAAA,EAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,iBAAA,IAAA,CAAA;AACAjB,YAAAA,OAAAA,EAAAA,GADA;AAEAC,YAAAA,MAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,YAAAA,EAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AAFA,WAAA,CAAA;AAEAA,SAHAgB,CAvDA;AA6DAC,QAAAA,SAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAAAA,EAAAA,YAAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,cAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,YAAA;AACA,kBAAA,IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,kBAAA,MAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA;;AACA,kBAAA,eAAA,GAAA,aAAA,CAAA,GAAA,CAAA,UAAA,WAAA,EAAA;AACA,oBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAC,gBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,uBAAA,CAAA;AAAA,eAHA,CAAA;;AAKA,qBAAA;AACApkB,gBAAAA,CAAAA,EAAAA,IAAAA,CAAAA,eAAAA;AADA,eAAA;AARA,aAAA,EAAA;;AAaA,gBAAA,OAAA,IAAA,KAAA,QAAA,EAAA,OAAA,IAAA,CAAA,CAAA;AAAA,WAdA,MAeO;AACP,mBAAA,IAAA,CAAA,aAAA,CAAA;AAAA;AAAA,SApBAmkB,CA7DA;AAoFAE,QAAAA,MAAAA,EAAAA,SAAAA,CAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,CAAAA,EAAAA,UAAAA,KAAAA,EAAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,YAAA;AACA,kBAAA,IAAA,GAAA,SAAA;AACA,kBAAA,MAAA,GAAA,SAAA;AACA,kBAAA,eAAA,GAAA,aAAA;;AAEA,kBAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACAD,gBAAAA,IAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAxd,gBAAAA,MAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AACA0d,gBAAAA,eAAAA,GAAAA,eAAAA,CAAAA,GAAAA,CAAAA,UAAAA,WAAAA,EAAAA;AACA,sBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAF,kBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,yBAAA,CAAA;AAAA,iBAHAE,CAAAA;AAOA;;AAAA,kBAAA,GAAA,GAAA,KAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA;AACA,kBAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA,kBAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAEAF,cAAAA,IAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAxd,cAAAA,MAAAA,GAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACA0d,cAAAA,eAAAA,GAAAA,eAAAA,CAAAA,GAAAA,CAAAA,UAAAA,WAAAA,EAAAA;AACA,oBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAF,gBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,uBAAA,CAAA;AAAA,eAHAE,CAAAA;;AAMA,kBAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACAF,gBAAAA,IAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAxd,gBAAAA,MAAAA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA;AACA0d,gBAAAA,eAAAA,GAAAA,eAAAA,CAAAA,GAAAA,CAAAA,UAAAA,WAAAA,EAAAA;AACA,sBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAF,kBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,yBAAA,CAAA;AAAA,iBAHAE,CAAAA;AAOA;;AAAA,qBAAA;AACAtkB,gBAAAA,CAAAA,EAAAA,IAAAA,CAAAA,eAAAA;AADA,eAAA;AArCA,aAAA,EAAA;;AA0CA,gBAAA,OAAA,KAAA,KAAA,QAAA,EAAA,OAAA,KAAA,CAAA,CAAA;AAAA,WA3CA,MA4CO;AACP,mBAAA,IAAA,CAAA,aAAA,CAAA;AAAA;AAAA,SAjDAqkB,CApFA;AAwIAE,QAAAA,KAAAA,EAAAA,SAAAA,CAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAAAA,EAAAA,YAAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,cAAA,EAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,EAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,iBAAA,YAAA;AACA,gBAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,kBAAA,KAAA,GAAA,YAAA;AACA,oBAAA,IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,oBAAA,MAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AACA,oBAAA,eAAA,GAAA,aAAA,CAAA,GAAA,CAAA,UAAA,WAAA,EAAA;AACA,sBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAH,kBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,yBAAA,CAAA;AAAA,iBAHA,CAAA;;AAKA,uBAAA;AACApkB,kBAAAA,CAAAA,EAAAA,IAAAA,CAAAA,eAAAA;AADA,iBAAA;AARA,eAAA,EAAA;;AAaA,kBAAA,OAAA,KAAA,KAAA,QAAA,EAAA,OAAA,KAAA,CAAA,CAAA;AAAA,aAdA,MAeS;AACT,qBAAA,IAAA,CAAA,aAAA,CAAA;AAAA;AAjBA,WAAA,EAAA;AAAA,SAHAukB,CAxIA;AAgKAC,QAAAA,MAAAA,EAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAAA,EAAAA,YAAAA;AACA,cAAA,KAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,YAAA;AACA,kBAAA,IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,kBAAA,MAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AACA,kBAAA,eAAA,GAAA,aAAA,CAAA,GAAA,CAAA,UAAA,WAAA,EAAA;AACA,oBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAJ,gBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,uBAAA,CAAA;AAAA,eAHA,CAAA;;AAKA,qBAAA;AACApkB,gBAAAA,CAAAA,EAAAA,IAAAA,CAAAA,eAAAA;AADA,eAAA;AARA,aAAA,EAAA;;AAaA,gBAAA,OAAA,KAAA,KAAA,QAAA,EAAA,OAAA,KAAA,CAAA,CAAA;AAAA,WAdA,MAeO;AACP,mBAAA,IAAA,CAAA,aAAA,CAAA;AAAA;AAAA,SAnBAwkB,CAhKA;AAsLAC,QAAAA,MAAAA,EAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAAA,EAAAA,YAAAA;AACA,cAAA,KAAA,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,gBAAA,KAAA,GAAA,YAAA;AACA,kBAAA,IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,kBAAA,MAAA,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AACA,kBAAA,eAAA,GAAA,aAAA,CAAA,GAAA,CAAA,UAAA,WAAA,EAAA;AACA,oBAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AACAL,gBAAAA,IAAAA,GAAAA,KAAAA,CAAAA,WAAAA,EAAAA,IAAAA,CAAAA;AACA,uBAAA,CAAA;AAAA,eAHA,CAAA;;AAKA,qBAAA;AACApkB,gBAAAA,CAAAA,EAAAA,IAAAA,CAAAA,eAAAA;AADA,eAAA;AARA,aAAA,EAAA;;AAaA,gBAAA,OAAA,KAAA,KAAA,QAAA,EAAA,OAAA,KAAA,CAAA,CAAA;AAAA,WAdA,MAeO;AACP,mBAAA,IAAA,CAAA,aAAA,CAAA;AAAA;AAAA,SAnBAykB,CAtLA;AA4MAnjB,QAAAA,KAAAA,EAAAA,SAAAA,KAAAA,GAAAA;AACA,iBAAA,aAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,IAAA,CAAA,GAAA,CAAA;AAAA,SA7MA;AA+MApB,QAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAA,SAhNA;AAkNAtC,QAAAA,MAAAA,EAAAA,SAAAA,MAAAA,GAAAA;AACA,cAAA,EAAA,GAAA,EAAA;AACA,cAAA,IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,cAAA,yBAAA,GAAA,IAAA;AACA,cAAA,iBAAA,GAAA,KAAA;AACA,cAAA,cAAA,GAAA,SAAA;;AAEA,cAAA;AACA,iBAAA,IAAA,SAAA,GAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAqE8mB,yBAAAA,GAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,IAAAA,EAAAA,EAAAA,IAArE,CAAA,EAAqIA,yBAAAA,GAAAA,IAArI,EAAqIA;AACrI,kBAAA,WAAA,GAAA,KAAA,CAAA,KAAA;AAEA,kBAAA,CAAA,GAAA,KAAA,CAAA,WAAA,EAAA,IAAA,CAAA;AACAN,cAAAA,IAAAA,GAAAA,CAAAA;;AACA,kBAAA,CAAA,EAAA;AACAO,gBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,CAAAA;AAAAA;AAAAA;AAGO,WAVP,CAUO,OAAA,GAAA,EAAA;AACPC,YAAAA,iBAAAA,GAAAA,IAAAA;AACAC,YAAAA,cAAAA,GAAAA,GAAAA;AACO,WAbP,SAaO;AACP,gBAAA;AACA,kBAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,QAAA,CAAA,EAAA;AACAC,gBAAAA,SAAAA,CAAAA,QAAAA,CAAAA;AAAAA;AAES,aAJT,SAIS;AACT,kBAAA,iBAAA,EAAA;AACA,sBAAA,cAAA;AAAA;AAAA;AAKA;;AAAA,iBAAA,EAAA;AAAA,SAlPA;AAoPAC,QAAAA,YAAAA,EAAAA,SAAAA,YAAAA,GAAAA;AACA,iBAAA,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,aAAA,CAAA,MAAA,CAAA;AAAA,SArPA;AAuPAC,QAAAA,OAAAA,EAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA;AACA,cAAA,EAAA,GAAA,KAAA,MAAA,EAAA;AACA,cAAA,IAAA,GAAA,EAAA,CAAA,EAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,cAAA,KAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,cAAA,eAAA,GAAA,SAAA;;AACA,cAAA,aAAA,CAAA,aAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,OAAA,KAAA,GAAA,EAAA;AACAV,YAAAA,eAAAA,GAAAA,IAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;;AACA,gBAAA,CAAA,cAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACAA,cAAAA,eAAAA,CAAAA,OAAAA,CAAAA;AACArB,gBAAAA,OAAAA,EAAAA,GADAqB;AAEApB,gBAAAA,MAAAA,EAAAA;AAFAoB,eAAAA;AAEApB;AAAAA,WALA,MAQO;AACPoB,YAAAA,eAAAA,GAAAA,IAAAA,CAAAA,YAAAA,EAAAA;AAEA;;AAAA,iBAAA,IAAA,CAAA,KAAA,YAAA,GAAA,MAAA,CAAA,eAAA,CAAA,CAAA;AAAA;AAvQA,OAAA;AAuQA,KA5bA;;AAicA/qB,IAAAA,OAAAA,CAAAA,SAAAA,CAAAA,GAAAA,YAAAA;AACA,aAAA,IAAA,EAAA;AAAA,KADAA;;AAIAF,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,OAAAA,CAAAA,SAAAA,CAAAA;AAAAA,GnD5YA,EmD4YAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC5cA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAMA,aAAA,oCAAA,CAAA,GAAA,EAAA;AACA6L,MAAAA,mBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAGA+f;;AAAAA,IAAAA,oCAAAA,CAAAA,SAAAA,GAAAA,IAAAA,mBAAAA,EAAAA;AACAA,IAAAA,oCAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,oCAAAA;;AASAA,IAAAA,oCAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AAAA,UACAxpB,EAAAA,GAAAA,CAAAA,GAAAA,EADA;AAAA,UACAA,EAAAA,GAAAA,CAAAA,GAAAA,EADA;;AAGA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,eAAA,IAAA;AAGA;;AAAA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACAqL,QAAAA,IAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,MAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,KAAA,OAAA,EAAA;AACA,eAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAKA;;AAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CADA,EACAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAGA;;AAAA,YAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,OAPA,MAWA;AACA,YAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,SAHA,MAMA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA;AAOA;;AAAA,UAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,KAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,OADA,MAEK;AACL,eAAA,IAAA;AAAA;AAAA,KAjDAme;;AA2DAA,IAAAA,oCAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAAA,IAAAA,EAAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UACApnB,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UACAA,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UAEAiJ,IAAAA,GAAAA,KAAAA,IAFA;AAAA,UAGA3J,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAIAsI,SAAAA,GAAAA,EAJA;AAAA,UAIAA,aAJA;AAAA,UAIAA,YAJA;AAAA,UAIAA,CAJA;AAAA,UAIAA,CAJA;;AAOA,UAAA,MAAA,EAAA;AACAtI,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAEA3B,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAGA,YAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA+J,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,IAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,IAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA,SAdA,MAkBA;AACA,cAAA,EAAA,KAAA,CAAA,EAAA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;;AACA,kBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,kBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA;AAAAA,WAPA,MAWA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;;AACA,kBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,kBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,OA7CA,MAoDA;AACAyf,QAAAA,aAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA,mBAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,aAAA,CAAA,MAAA,EAA6CxrB,CAAAA,GAAAA,CAA7C,EAA6CA,EAAOA,CAApD,EAAoDA;AACpDyrB,UAAAA,YAAAA,GAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACA1f,UAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAIA;;AAAA,aAAA,SAAA;AAAA,KApEAwf;;AAuEA5rB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,oCAAAA;AAAAA,GpDvFA,EoDuFAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;ACvJA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAMA,aAAA,8BAAA,CAAA,GAAA,EAAA;AACA6L,MAAAA,mBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAGAkgB;;AAAAA,IAAAA,8BAAAA,CAAAA,SAAAA,GAAAA,IAAAA,mBAAAA,EAAAA;AACAA,IAAAA,8BAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,8BAAAA;;AASAA,IAAAA,8BAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AAAA,UACA3pB,EAAAA,GAAAA,CAAAA,GAAAA,EADA;AAAA,UACAA,EAAAA,GAAAA,CAAAA,GAAAA,EADA;;AAGA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,eAAA,IAAA;AAGA;;AAAA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACAqL,QAAAA,IAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,MAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,KAAA,OAAA,EAAA;AACA,eAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAKA;;AAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AAMA,YAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,OAPA,MAWA;AACA,YAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,SAHA,MAMA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA;AAWA;;AAAA,UAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,KAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,OADA,MAEK;AACL,eAAA,IAAA;AAAA;AAAA,KArDAse;;AA+DAA,IAAAA,8BAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAAA,IAAAA,EAAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UACAvnB,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UACAA,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UAEAiJ,IAAAA,GAAAA,KAAAA,IAFA;AAAA,UAGA3J,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAIAsI,SAAAA,GAAAA,EAJA;AAAA,UAIAA,aAJA;AAAA,UAIAA,YAJA;AAAA,UAIAA,CAJA;AAAA,UAIAA,CAJA;;AAOA,UAAA,MAAA,EAAA;AACAtI,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAEA3B,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAGA,YAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA+J,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA,SARA,MAYA;AACA,cAAA,cAAA;;AACA,cAAA,EAAA,KAAA,CAAA,EAAA;AACA4f,YAAAA,cAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AACA,gBAAA,aAAA,GAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA;AACA,gBAAA,gBAAA,GAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA;;AAEA,gBAAA,cAAA,EAAA;AACA5f,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;;AACA,kBAAA,aAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,kBAAA,gBAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAAAA;AAGA;;AAAA,gBAAA,aAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,gBAAA,gBAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAAAA;AAAAA,WAlBA,MAqBA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA4f,YAAAA,cAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AACA,gBAAA,eAAA,GAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACA,gBAAA,cAAA,GAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;;AAEA,gBAAA,cAAA,EAAA;AACA5f,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;;AACA,kBAAA,eAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,kBAAA,cAAA,EAAA;AACAA,gBAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAGA;;AAAA,gBAAA,eAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,gBAAA,cAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAAAA;AAAAA;AAAAA;AAAAA,OA7DA,MAmEA;AACAyf,QAAAA,aAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA,mBAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,aAAA,CAAA,MAAA,EAA6CxrB,CAAAA,GAAAA,CAA7C,EAA6CA,EAAOA,CAApD,EAAoDA;AACpDyrB,UAAAA,YAAAA,GAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACA1f,UAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAIA;;AAAA,aAAA,SAAA;AAAA,KAnFA2f;;AAsFA/rB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,8BAAAA;AAAAA,GrD1GA,EqD0GAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC1KA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAMA,aAAA,uBAAA,CAAA,GAAA,EAAA;AACA6L,MAAAA,mBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAGAogB;;AAAAA,IAAAA,uBAAAA,CAAAA,SAAAA,GAAAA,IAAAA,mBAAAA,EAAAA;AACAA,IAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,uBAAAA;;AASAA,IAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AAAA,UACA7pB,EAAAA,GAAAA,CAAAA,GAAAA,EADA;AAAA,UACAA,EAAAA,GAAAA,CAAAA,GAAAA,EADA;;AAGA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,eAAA,IAAA;AAGA;;AAAA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACAqL,QAAAA,IAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,MAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,KAAA,OAAA,EAAA;AACA,eAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAKA;;AAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CADA,EACAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAGA;;AAAA,YAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,OAPA,MAWA;AACA,YAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,SAHA,MAMA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CADA,EACAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA;AAKA;;AAAA,aAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,KA5CAwe;;AAqDAA,IAAAA,uBAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAAA,IAAAA,EAAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UACAznB,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UACAA,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UAEAiJ,IAAAA,GAAAA,KAAAA,IAFA;AAAA,UAGA3J,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAIAsI,SAAAA,GAAAA,EAJA;AAAA,UAIAA,aAJA;AAAA,UAIAA,YAJA;AAAA,UAIAA,CAJA;AAAA,UAIAA,CAJA;;AAOA,UAAA,MAAA,EAAA;AACAtI,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAEA3B,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAGA,YAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA+J,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,cAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA,SAdA,MAkBA;AACA,cAAA,EAAA,KAAA,CAAA,EAAA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,gBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAEA;;AAAA,gBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA,WARA,MAWA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,gBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,gBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAAAA;AAAAA;AAAAA;AAAAA,OA9CA,MAoDA;AACAyf,QAAAA,aAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA,MAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,aAAA,CAAA,MAAA,EAA6CxrB,CAAAA,GAAAA,CAA7C,EAA6CA,EAAOA,CAApD,EAAoDA;AACpDyrB,UAAAA,YAAAA,GAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACA1f,UAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAIA;;AAAA,aAAA,SAAA;AAAA,KApEA6f;;AAuEAjsB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,uBAAAA;AAAAA,GtDjFA,EsDiFAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;ACjJA,QAAA,mBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAMA,aAAA,sBAAA,CAAA,GAAA,EAAA;AACA6L,MAAAA,mBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAGAqgB;;AAAAA,IAAAA,sBAAAA,CAAAA,SAAAA,GAAAA,IAAAA,mBAAAA,EAAAA;AACAA,IAAAA,sBAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,sBAAAA;;AASAA,IAAAA,sBAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AAAA,UACA9pB,EAAAA,GAAAA,CAAAA,GAAAA,EADA;AAAA,UACAA,EAAAA,GAAAA,CAAAA,GAAAA,EADA;;AAGA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,eAAA,IAAA;AAGA;;AAAA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACAqL,QAAAA,IAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,MAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA,KAAA,OAAA,EAAA;AACA,eAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAGA;;AAAA,UAAA,EAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CADA,EACAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,OAHA,MAMA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,IACAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CADA,EACAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAGA;;AAAA,YAAA,KAAA,KAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA;AAAA,OAPA,MAUA;AACA,cAAA,IAAA,KAAA,CAAA,oDAAA,CAAA;AAGA;;AAAA,aAAA,KAAA,KAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,KApCAye;;AA6CAA,IAAAA,sBAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAAA,IAAAA,EAAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AAAA,UACA1nB,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UACAA,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UAEAiJ,IAAAA,GAAAA,KAAAA,IAFA;AAAA,UAGA3J,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAGAA,EAHA;AAAA,UAIAsI,SAAAA,GAAAA,EAJA;AAAA,UAIAA,aAJA;AAAA,UAIAA,YAJA;AAAA,UAIAA,CAJA;AAAA,UAIAA,CAJA;;AAOA,UAAA,MAAA,EAAA;AACAtI,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAEA3B,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACAC,QAAAA,EAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AAEA,YAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACA+J,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AAAAA;AAAAA,SARA,MAWA,IAAA,EAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAEA;;AAAA,cAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACAA,YAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA;AAAAA;AAAAA;AAAAA,OA1BA,MA+BA;AACAyf,QAAAA,aAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA,KAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,aAAA,CAAA,MAAA,EAA6CxrB,CAAAA,GAAAA,CAA7C,EAA6CA,EAAOA,CAApD,EAAoDA;AACpDyrB,UAAAA,YAAAA,GAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACA1f,UAAAA,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAIA;;AAAA,aAAA,SAAA;AAAA,KA/CA8f;;AAkDAlsB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,sBAAAA;AAAAA,GvDpDA,EuDoDAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;ACpHA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,sBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,uBAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,8BAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,oCAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAUA,aAAA,eAAA,CAAA,GAAA,EAAA;AACA4L,MAAAA,GAAAA,GAAAA,GAAAA,IAAAA,EAAAA;;AACA,UAAA,GAAA,CAAA,gBAAA,KAAA,gBAAA,CAAA,KAAA,EAAA;AACA,eAAA,IAAA,sBAAA,CAAA,GAAA,CAAA;AAAA,OADA,MAEK,IAAA,GAAA,CAAA,gBAAA,KAAA,gBAAA,CAAA,MAAA,EAAA;AACL,eAAA,IAAA,uBAAA,CAAA,GAAA,CAAA;AAAA,OADK,MAEA,IAAA,GAAA,CAAA,gBAAA,KAAA,gBAAA,CAAA,mBAAA,EAAA;AACL,eAAA,IAAA,8BAAA,CAAA,GAAA,CAAA;AAAA,OADK,MAEA;AACL,eAAA,IAAA,oCAAA,CAAA,GAAA,CAAA;AAAA;AAIA5L;;AAAAA,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,eAAAA;AAAAA,GxDqCA,EwDrCAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC9BA,QAAA,IAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,SAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,IAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AA8BA,aAAA,aAAA,CAAA,GAAA,EAAA;AACA4L,MAAAA,GAAAA,GAAAA,GAAAA,IAAAA,EAAAA;AACArK,WAAAA,aAAAA,GAAAA,GAAAA,CAAAA,aAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;AACAA,WAAAA,SAAAA,GAAAA,GAAAA,CAAAA,SAAAA,IAAAA,SAAAA,CAAAA,SAAAA;AACAA,WAAAA,MAAAA,GAAAA,GAAAA,CAAAA,MAAAA,IAAAA,CAAAA;AACAA,WAAAA,cAAAA,GAAAA,GAAAA,CAAAA,cAAAA,IAAAA,KAAAA;AACAA,WAAAA,SAAAA,GAAAA,GAAAA,CAAAA,SAAAA,IAAAA,QAAAA;;AAEA,UAAA,CAAA,KAAA,gBAAA,EAAA;AACA,YAAA,CAAA,KAAA,aAAA,EAAA;AACAA,eAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,KAAAA;AAAAA,SADA,MAES;AACT,cAAA,KAAA,gBAAA,EAAA;AACAA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA,WADA,MAEa;AACbA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA;AAAAA;AAOA;;AAAA,UAAA,KAAA,gBAAA,KAAA,gBAAA,CAAA,KAAA,EAAA;AACAA,aAAAA,SAAAA,GAAAA,GAAAA,CAAAA,SAAAA,IAAAA,SAAAA,CAAAA,SAAAA;AAAAA,OADA,MAEK;AACLA,aAAAA,SAAAA,GAAAA,GAAAA,CAAAA,SAAAA,IAAAA,SAAAA,CAAAA,MAAAA;AAAAA;AAWA4qB;;AAAAA,IAAAA,aAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAAAA,MAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA;AAEA,UAAA,YAAA,GAAA,CAAA;AAGA,UAAA,SAAA,GAAA,IAAA,IAAA,EAAA,CAAA,OAAA,EAAA;;AAGA,UAAA,CAAA,GAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,KAAA,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OADA,CAEK9U,IAFL,CAEKA,IAFL,CAAA;;AAKA,UAAA,IAAA,GAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,KAAA;AAAA,OADA;;AAgBA,UAAA,MAAA,GAAA,UAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA+U,QAAAA,YAAAA;;AAGA,YAAA,KAAA,SAAA,GAAA,CAAA,IACA,IAAA,IAAA,EADA,CACA,OADA,KACA,SADA,GACA,KAAA,SAAA,GAAA,GADA,EACA;AAEA,iBAAA,QAAA;AAGA;;AAAA,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,KAAA,MAAA;;AAGA,YAAA,CAAA,GAAA,MAAA,EAAA;AACA,iBAAA,CAAA;AAGA;;AAAA,YAAA,IAAA,IAAA,GAAA,EAAA;AACAC,UAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AACA,iBAAA,IAAA;AAGA;;AAAA,YAAA,GAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA;AAEA,YAAA,UAAA,GAAA,IAAA,CAAA,YAAA,CAAA,IAAA,EAAA,KAAA,gBAAA,CAAA;;AAUA,aAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,QAAA,EAAmCC,SAAAA,GAAAA,UAAAA,CAAAA,CAAAA,CAAnC,EAAmCA,EAA2BC,CAA9D,EAA8DA;AAE9D,cAAA,KAAA,cAAA,EAAA;AAGAD,YAAAA,SAAAA,CAAAA,WAAAA,GAAAA,SAAAA,CAAAA,WAAAA,GAAAA,CAAAA,IAAAA,CAAAA;;AAEA,gBAAA,SAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACAA,cAAAA,SAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AAAAA;AAIAE;;AAAAA,UAAAA,CAAAA,GAAAA,MAAAA,CAAAA,SAAAA,EAAAA,CAAAA,GAAAA,IAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,KAAAA,GAAAA,CAAAA,CAAAA;;AAEA,cAAA,CAAA,YAAA,IAAA,EAAA;AACAH,YAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAIA,mBAAA,CAAA;AAIA;;AAAA,cAAA,KAAA,cAAA,IAAA,EAAA,SAAA,CAAA,WAAA,KAAA,CAAA,EAAA;AACAC,YAAAA,SAAAA,CAAAA,MAAAA,GAAAA,KAAAA;AAGA;;AAAA,cAAA,CAAA,GAAA,GAAA,EAAA;AACA3E,YAAAA,GAAAA,GAAAA,CAAAA;AAAAA;AAIA;;AAAA,eAAA,GAAA;AAAA,OAlEA,CAoEKtQ,IApEL,CAoEKA,IApEL,CAAA;;AAuEA,UAAA,KAAA,GAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AAIA,UAAA,MAAA,GAAA,CAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AAEA,UAAA,CAAA,EAAA,KAAA,EAAA,CAAA;;AAGA,WAAA,CAAA,GAAA,CAAA,EAAe,IAAf,EAAe,EAAMlU,CAArB,EAAqBA;AAErBkpB,QAAAA,KAAAA,GAAAA,EAAAA;AAGAG,QAAAA,CAAAA,GAAAA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAAA,CAAAA;;AAGA,YAAA,CAAA,KAAA,QAAA,EAAA;AACA,iBAAA,EAAA;AAKA;;AAAA,YAAA,CAAA,YAAA,IAAA,EAAA;AACA,iBAAA,KAAA;AAKAC;;AAAAA,QAAAA,MAAAA,GAAAA,CAAAA;AAIA;;AAAA,aAAA,EAAA;AAAA,KAtIAN;;AAyIAnsB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,aAAAA;AAAAA,GzD7IA,EyD6IAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AChNA,QAAA,aAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAaA,aAAA,gBAAA,CAAA,GAAA,EAAA;AACAgS,MAAAA,aAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;;AACAzQ,WAAAA,SAAAA,GAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,eAAA,CAAA;AAAA,OADAA;AAKAmrB;;AAAAA,IAAAA,gBAAAA,CAAAA,SAAAA,GAAAA,IAAAA,aAAAA,EAAAA;AACAA,IAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,gBAAAA;AAEA1sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,gBAAAA;AAAAA,G1D4CA,E0D5CAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;ACvBA,QAAA,IAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAYA,aAAA,oBAAA,CAAA,GAAA,EAAA;AACA4L,MAAAA,GAAAA,GAAAA,GAAAA,IAAAA,EAAAA;AACArK,WAAAA,aAAAA,GAAAA,GAAAA,CAAAA,aAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;;AAEA,UAAA,CAAA,KAAA,gBAAA,EAAA;AACA,YAAA,CAAA,KAAA,aAAA,EAAA;AACAA,eAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,KAAAA;AAAAA,SADA,MAES;AACT,cAAA,KAAA,gBAAA,EAAA;AACAA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA,WADA,MAEa;AACbA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA;AAAAA;AAAAA;AAYAorB;;AAAAA,IAAAA,oBAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAAAA,MAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AAAA,UACA5gB,OAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CADA;AAAA,UAEAkG,aAAAA,GAAAA,EAFA;AAAA,UAEAA,WAAAA,GAAAA,EAFA;AAAA,UAGA7F,SAHA;AAAA,UAGAA,QAHA;AAAA,UAGAA,IAHA;AAAA,UAIAY,gBAAAA,GAAAA,KAAAA,gBAJA;AAAA,UAKAoF,QAAAA,GAAAA,CALA;AAAA,UAKAA,MAAAA,GAAAA,CALA;AAAA,UAMA/R,CANA;AAAA,UAMAA,CANA;AASA4R,MAAAA,aAAAA,CAAAA,IAAAA,CAAAA,SAAAA;AACAnG,MAAAA,SAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,QAAAA;AAEAoG,MAAAA,WAAAA,CAAAA,IAAAA,CAAAA,OAAAA;AACAnG,MAAAA,OAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,MAAAA,OAAAA,CAAAA,EAAAA,GAAAA,MAAAA;;AAGA,aAAA,aAAA,CAAA,MAAA,IAAA,WAAA,CAAA,MAAA,EAAA;AAIAhK,QAAAA,IAAAA,GAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACAA,QAAAA,IAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AAEAqK,QAAAA,SAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAyC/L,CAAAA,GAAAA,CAAzC,EAAyCA,EAAOA,CAAhD,EAAgDA;AAChDkM,UAAAA,QAAAA,GAAAA,SAAAA,CAAAA,CAAAA,CAAAA;;AAEA,cAAA,QAAA,CAAA,MAAA,EAAA;AACA;AAEA;;AAAA,cAAA,QAAA,CAAA,MAAA,EAAA;AAGA,gBAAA,QAAA,CAAA,EAAA,KAAA,MAAA,EAAA;AACA,qBAAA,IAAA,CAAA,WAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAEA;;AAAA;AAEA0F;;AAAAA,UAAAA,aAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AACA1F,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,UAAAA,QAAAA,CAAAA,EAAAA,GAAAA,QAAAA;AAKAxK;;AAAAA,QAAAA,IAAAA,GAAAA,WAAAA,CAAAA,KAAAA,EAAAA;AACAA,QAAAA,IAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AAEAqK,QAAAA,SAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAyC/L,CAAAA,GAAAA,CAAzC,EAAyCA,EAAOA,CAAhD,EAAgDA;AAChDkM,UAAAA,QAAAA,GAAAA,SAAAA,CAAAA,CAAAA,CAAAA;;AAEA,cAAA,QAAA,CAAA,MAAA,EAAA;AACA;AAEA;;AAAA,cAAA,QAAA,CAAA,MAAA,EAAA;AACA,gBAAA,QAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,qBAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,IAAA,CAAA;AAEA;;AAAA;AAEA2F;;AAAAA,UAAAA,WAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AACA3F,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,UAAAA,QAAAA,CAAAA,EAAAA,GAAAA,MAAAA;AAAAA;AAKA;;AAAA,aAAA,EAAA;AAAA,KAzEAogB;;AA4EA3sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,oBAAAA;AAAAA,G3D/CA,E2D+CAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AClHA,QAAA,aAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAeA,aAAA,iBAAA,CAAA,GAAA,EAAA;AACAgS,MAAAA,aAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAEA,UAAA,IAAA,GAAA,KAAA,SAAA;;AACAzQ,WAAAA,SAAAA,GAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,eAAA,IAAA,CAAA,EAAA,EAAA,EAAA,CAAA,GAAA,GAAA;AAAA,OADAA;AAKAqrB;;AAAAA,IAAAA,iBAAAA,CAAAA,SAAAA,GAAAA,IAAAA,aAAAA,EAAAA;AACAA,IAAAA,iBAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,iBAAAA;AAEA5sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,iBAAAA;AAAAA,G5DwCA,E4DxCAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC3BA,QAAA,WAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAaA,aAAA,cAAA,CAAA,GAAA,EAAA;AACAqS,MAAAA,WAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;;AACA9Q,WAAAA,SAAAA,GAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,eAAA,CAAA;AAAA,OADAA;AAKAsrB;;AAAAA,IAAAA,cAAAA,CAAAA,SAAAA,GAAAA,IAAAA,WAAAA,EAAAA;AACAA,IAAAA,cAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,cAAAA;AAEA7sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,cAAAA;AAAAA,G7D4CA,E6D5CAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;ACvBA,QAAA,IAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAYA,aAAA,kBAAA,CAAA,GAAA,EAAA;AACA4L,MAAAA,GAAAA,GAAAA,GAAAA,IAAAA,EAAAA;AACArK,WAAAA,aAAAA,GAAAA,GAAAA,CAAAA,aAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;AACAA,WAAAA,gBAAAA,GAAAA,GAAAA,CAAAA,gBAAAA;;AAEA,UAAA,CAAA,KAAA,gBAAA,EAAA;AACA,YAAA,CAAA,KAAA,aAAA,EAAA;AACAA,eAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,KAAAA;AAAAA,SADA,MAES;AACT,cAAA,KAAA,gBAAA,EAAA;AACAA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA,WADA,MAEa;AACbA,iBAAAA,gBAAAA,GAAAA,gBAAAA,CAAAA,mBAAAA;AAAAA;AAAAA;AAAAA;AAWAurB;;AAAAA,IAAAA,kBAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAAAA,MAAAA,EAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA;AACA,UAAA,QAAA,GAAA,EAAA;AAAA,UACA9f,gBAAAA,GAAAA,KAAAA,gBADA;AAAA,UAEAlB,SAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAFA;AAAA,UAGAC,OAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAHA;AAAA,UAIAK,SAJA;AAAA,UAIAA,QAJA;AAAA,UAIAA,IAJA;AAAA,UAIAA,CAJA;AAAA,UAIAA,CAJA;AAOAJ,MAAAA,QAAAA,CAAAA,IAAAA,CAAAA,SAAAA;AACAF,MAAAA,SAAAA,CAAAA,MAAAA,GAAAA,IAAAA;;AAGA,aAAA,QAAA,CAAA,MAAA,EAAA;AAEA/J,QAAAA,IAAAA,GAAAA,QAAAA,CAAAA,KAAAA,EAAAA;AACAA,QAAAA,IAAAA,CAAAA,MAAAA,GAAAA,IAAAA;;AAGA,YAAA,IAAA,KAAA,OAAA,EAAA;AACA,iBAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AAGAqK;;AAAAA,QAAAA,SAAAA,GAAAA,IAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAyC/L,CAAAA,GAAAA,CAAzC,EAAyCA,EAAOA,CAAhD,EAAgDA;AAChDkM,UAAAA,QAAAA,GAAAA,SAAAA,CAAAA,CAAAA,CAAAA;;AAGA,cAAA,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,EAAA;AACA;AAGAP;;AAAAA,UAAAA,QAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AACAO,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,UAAAA,QAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AAAAA;AAKA;;AAAA,aAAA,EAAA;AAAA,KAtCAugB;;AAyCA9sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,kBAAAA;AAAAA,G9DXA,E8DWAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC9EA,QAAA,WAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAeA,aAAA,eAAA,CAAA,GAAA,EAAA;AACAqS,MAAAA,WAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AAEA,UAAA,IAAA,GAAA,KAAA,SAAA;;AACA9Q,WAAAA,SAAAA,GAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA;AACA,eAAA,IAAA,CAAA,EAAA,EAAA,EAAA,CAAA,GAAA,GAAA;AAAA,OADAA;AAKAwrB;;AAAAA,IAAAA,eAAAA,CAAAA,SAAAA,GAAAA,IAAAA,WAAAA,EAAAA;AACAA,IAAAA,eAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,eAAAA;AAEA/sB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,eAAAA;AAAAA,G/DwCA,E+DxCAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AC3BA,QAAA,IAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AACA,QAAA,gBAAA,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAUA,aAAA,IAAA,CAAA,eAAA,EAAA,MAAA,EAAA,MAAA,EAAA;AACA,UAAA,KAAA;;AAEA,UAAA,OAAA,eAAA,KAAA,QAAA,EAAA;AACAyJ,QAAAA,KAAAA,GAAAA,eAAAA;AAAAA,OADA,MAEK;AACLC,QAAAA,MAAAA,GAAAA,eAAAA,CAAAA,MAAAA;AACAD,QAAAA,KAAAA,GAAAA,eAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA;AACA8D,QAAAA,MAAAA,GAAAA,eAAAA;AAOAhM;;AAAAA,WAAAA,KAAAA,GAAAA,KAAAA;AAKAA,WAAAA,MAAAA,GAAAA,MAAAA;AAKAA,WAAAA,KAAAA,GAAAA,KAAAA,WAAAA,CAAAA,KAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA;AAYAmM;;AAAAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,UAAAA,KAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EAAAA;AACA,UAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UACA4O,KAAAA,GAAAA,IAAAA,KAAAA,CAAAA,MAAAA,CADA;;AAGA,WAAA,CAAA,GAAA,CAAA,EAAejc,CAAAA,GAAAA,MAAf,EAAeA,EAAYA,CAA3B,EAA2BA;AAC3Bic,QAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAAA,KAAAA,CAAAA,KAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAmBnZ,CAAAA,GAAAA,KAAnB,EAAmBA,EAAWA,CAA9B,EAA8BA;AAC9BmZ,UAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AAAAA;AAKA;;AAAA,UAAA,MAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA;AAGA;;AAAA,UAAA,MAAA,CAAA,MAAA,KAAA,MAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,KAAA,KAAA,EAAA;AACA,cAAA,IAAA,KAAA,CAAA,0BAAA,CAAA;AAGA;;AAAA,WAAA,CAAA,GAAA,CAAA,EAAejc,CAAAA,GAAAA,MAAf,EAAeA,EAAYA,CAA3B,EAA2BA;AAC3B,aAAA,CAAA,GAAA,CAAA,EAAmB8C,CAAAA,GAAAA,KAAnB,EAAmBA,EAAWA,CAA9B,EAA8BA;AAC9B,cAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAGAmZ,YAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,QAAAA,GAAAA,KAAAA;AAAAA;AAAAA;AAKA;;AAAA,aAAA,KAAA;AAAA,KA9BA5O;;AAkCAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,aAAA,KAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,KADAA;;AAYAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,aAAA,KAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,QAAA;AAAA,KADAA;;AAcAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,MAAA;AAAA,KADAA;;AAYAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,QAAAA,EAAAA;AACAnM,WAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,QAAAA,GAAAA,QAAAA;AAAAA,KADAmM;;AAuBAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAAA,UAAAA,IAAAA,EAAAA,gBAAAA,EAAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AAAA,UACAjJ,CAAAA,GAAAA,IAAAA,CAAAA,CADA;AAAA,UAEA2H,SAAAA,GAAAA,EAFA;AAAA,UAGA4gB,EAAAA,GAAAA,KAHA;AAAA,UAGAA,EAAAA,GAAAA,KAHA;AAAA,UAIAC,EAAAA,GAAAA,KAJA;AAAA,UAIAA,EAAAA,GAAAA,KAJA;AAAA,UAKAC,EAAAA,GAAAA,KALA;AAAA,UAKAA,EAAAA,GAAAA,KALA;AAAA,UAMAC,EAAAA,GAAAA,KANA;AAAA,UAMAA,EAAAA,GAAAA,KANA;AAAA,UAOA7Q,KAAAA,GAAAA,KAAAA,KAPA;;AAUA,UAAA,KAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAlQ,QAAAA,SAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACA4gB,QAAAA,EAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,KAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA5gB,QAAAA,SAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AACA6gB,QAAAA,EAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,KAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACA7gB,QAAAA,SAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACA8gB,QAAAA,EAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,KAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA9gB,QAAAA,SAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AACA+gB,QAAAA,EAAAA,GAAAA,IAAAA;AAGA;;AAAA,UAAA,gBAAA,KAAA,gBAAA,CAAA,KAAA,EAAA;AACA,eAAA,SAAA;AAGA;;AAAA,UAAA,gBAAA,KAAA,gBAAA,CAAA,mBAAA,EAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AAAAA,OAJA,MAKK,IAAA,gBAAA,KAAA,gBAAA,CAAA,mBAAA,EAAA;AACLH,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AACAC,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA;AAAAA,OAJK,MAKA,IAAA,gBAAA,KAAA,gBAAA,CAAA,MAAA,EAAA;AACLH,QAAAA,EAAAA,GAAAA,IAAAA;AACAC,QAAAA,EAAAA,GAAAA,IAAAA;AACAC,QAAAA,EAAAA,GAAAA,IAAAA;AACAC,QAAAA,EAAAA,GAAAA,IAAAA;AAAAA,OAJK,MAKA;AACL,cAAA,IAAA,KAAA,CAAA,qCAAA,CAAA;AAIA;;AAAA,UAAA,EAAA,IAAA,KAAA,YAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAnhaAAA,SAAA;AAAA,KAvEAsB;;AA+EAA,IAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,YAAAA;AACA,UAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAEAjE,KAAAA,GAAAA,KAAAA,KAFA;AAAA,UAGAC,MAAAA,GAAAA,KAAAA,MAHA;AAAA,UAIA8jB,SAAAA,GAAAA,KAAAA,KAJA;AAAA,UAMAC,OAAAA,GAAAA,IAAAA,IAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CANA;AAAA,UAOAC,QAAAA,GAAAA,IAAAA,KAAAA,CAAAA,MAAAA,CAPA;;AASA,WAAA,CAAA,GAAA,CAAA,EAAertB,CAAAA,GAAAA,MAAf,EAAeA,EAAYA,CAA3B,EAA2BA;AAC3BqtB,QAAAA,QAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAAA,KAAAA,CAAAA,KAAAA,CAAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAmBvqB,CAAAA,GAAAA,KAAnB,EAAmBA,EAAWA,CAA9B,EAA8BA;AAC9BuqB,UAAAA,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,QAAAA,CAAAA;AAAAA;AAIAD;;AAAAA,MAAAA,OAAAA,CAAAA,KAAAA,GAAAA,QAAAA;AAEA,aAAA,OAAA;AAAA,KAnBA/f;;AAsBA1N,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,IAAAA;AAAAA,GhEjLA,EgEiLAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA;ACpPAA,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,UAAAA,MAAAA,EAAAA;AACA,UAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACAA,QAAAA,MAAAA,CAAAA,SAAAA,GAAAA,YAAAA,CAAAA,CAAAA;;AACAA,QAAAA,MAAAA,CAAAA,KAAAA,GAAAA,EAAAA;AAEA,YAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,QAAA,GAAA,EAAA;AACAS,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAAAA,QAAAA,EAAAA;AACAE,UAAAA,UAAAA,EAAAA,IADAF;AAEAG,UAAAA,GAAAA,EAAAA,YAAAA;AACA,mBAAA,MAAA,CAAA,CAAA;AAAA;AAHAH,SAAAA;AAMAA,QAAAA,MAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA;AACAE,UAAAA,UAAAA,EAAAA,IADAF;AAEAG,UAAAA,GAAAA,EAAAA,YAAAA;AACA,mBAAA,MAAA,CAAA,CAAA;AAAA;AAHAH,SAAAA;AAMAT,QAAAA,MAAAA,CAAAA,eAAAA,GAAAA,CAAAA;AAEA;;AAAA,aAAA,MAAA;AAAA,KApBAA;AAoBA,GjE+CA,EiE/CA,UAAA,MAAA,EAAA,OAAA,EAAA,mBAAA,EAAA;AAAA,KCpBA,UAAA,MAAA,EAAA;AAAA,OACA,YAAA;AACA,YAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA;;AAEA6N,QAAAA,KAAAA,GAAAA,IAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAAA,IAAAA,CAAAA,GAAAA;;AAOA8f,QAAAA,UAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AACA,cAAA,CAAA,GAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA;AAEA;;AAAA,cAAA,CAAA,GAAA,CAAA,EAAA;AACA,mBAAA,CAAA;AAEA;;AAAA,iBAAA,CAAA;AAAA,SAPAA;;AAoBAC,QAAAA,MAAAA,GAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,GAAA;;AACA,cAAA,EAAA,IAAA,IAAA,EAAA;AACAC,YAAAA,EAAAA,GAAAA,CAAAA;AAEA;;AAAA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAC,YAAAA,GAAAA,GAAAA,UAAAA;AAEA;;AAAA,cAAA,EAAA,GAAA,CAAA,EAAA;AACA,kBAAA,IAAA,KAAA,CAAA,yBAAA,CAAA;AAEA;;AAAA,cAAA,EAAA,IAAA,IAAA,EAAA;AACAC,YAAAA,EAAAA,GAAAA,CAAAA,CAAAA,MAAAA;AAEA;;AAAA,iBAAA,EAAA,GAAA,EAAA,EAAA;AACAC,YAAAA,GAAAA,GAAAA,KAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,IAAAA,CAAAA,CAAAA;;AACA,gBAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA;AACAD,cAAAA,EAAAA,GAAAA,GAAAA;AAAAA,aADA,MAEO;AACPF,cAAAA,EAAAA,GAAAA,GAAAA,GAAAA,CAAAA;AAAAA;AAGA;;AAAA,iBAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AAAA,SAtBAD;;AA8BAK,QAAAA,QAAAA,GAAAA,UAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAH,YAAAA,GAAAA,GAAAA,UAAAA;AAEAI;;AAAAA,UAAAA,KAAAA,CAAAA,IAAAA,CAAAA,IAAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA,CAAA,EAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,SALAD;;AAaAE,QAAAA,OAAAA,GAAAA,UAAAA,KAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,OAAA,EAAA,UAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAL,YAAAA,GAAAA,GAAAA,UAAAA;AAEAM;;AAAAA,UAAAA,OAAAA,GAAAA,KAAAA,CAAAA,GAAAA,EAAAA;;AACA,cAAA,KAAA,CAAA,MAAA,EAAA;AACAC,YAAAA,UAAAA,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACAH,YAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAAA,OAAAA;;AACAI,YAAAA,OAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA;AAAAA,WAHA,MAIK;AACLD,YAAAA,UAAAA,GAAAA,OAAAA;AAEA;;AAAA,iBAAA,UAAA;AAAA,SAbAF;;AA4BAI,QAAAA,WAAAA,GAAAA,UAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,UAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAT,YAAAA,GAAAA,GAAAA,UAAAA;AAEAO;;AAAAA,UAAAA,UAAAA,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACAH,UAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAAA;;AACAI,UAAAA,OAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA;;AACA,iBAAA,UAAA;AAAA,SARAC;;AAgBAC,QAAAA,WAAAA,GAAAA,UAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,IAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAV,YAAAA,GAAAA,GAAAA,UAAAA;AAEA;;AAAA,cAAA,KAAA,CAAA,MAAA,IAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACAW,YAAAA,IAAAA,GAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAAA,EAAAA,IAAAA,GAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA,CAAAA;;AACAH,YAAAA,OAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA;AAEA;;AAAA,iBAAA,IAAA;AAAA,SATAE;;AAiBAE,QAAAA,OAAAA,GAAAA,UAAAA,KAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,SAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAZ,YAAAA,GAAAA,GAAAA,UAAAA;AAEAa;;AAAAA,UAAAA,KAAAA,GAAAA,YAAAA;AACAC,YAAAA,SAAAA,GAAAA,EAAAA;;AACA,iBAAA,IAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CAAA,EAAsD,KAAA,IAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,GAAA,IAAtD,EAAyF,KAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAzF,EAAyF;AAA0BA,cAAAA,SAAAA,CAAAA,IAAAA,CAAAA,EAAAA;AACnH;;AAAA,mBAAA,SAAA;AAAA,WAHAD,CAIKE,KAJLF,CAIKE,IAJLF,EAIKE,OAJLF,EAAAA;;AAKAG,UAAAA,QAAAA,GAAAA,EAAAA;;AACA,eAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,KAAA,CAAA,MAAA,EAAqCC,EAAAA,GAAAA,IAArC,EAAgDA,EAAAA,EAAhD,EAAgDA;AAChD1uB,YAAAA,CAAAA,GAAAA,KAAAA,CAAAA,EAAAA,CAAAA;;AACAyuB,YAAAA,QAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA;AAEA;;AAAA,iBAAA,QAAA;AAAA,SAfAJ;;AAwBAM,QAAAA,UAAAA,GAAAA,UAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,GAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAlB,YAAAA,GAAAA,GAAAA,UAAAA;AAEAlR;;AAAAA,UAAAA,GAAAA,GAAAA,KAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA;;AACA,cAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA;AAEAqS;;AAAAA,UAAAA,SAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA;;AACA,iBAAA,OAAA,CAAA,KAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AAAA,SAVAD;;AAkBAE,QAAAA,QAAAA,GAAAA,UAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACApB,YAAAA,GAAAA,GAAAA,UAAAA;AAEAqB;;AAAAA,UAAAA,MAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;;AACA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,mBAAA,MAAA;AAEAT;;AAAAA,UAAAA,OAAAA,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA;AACAD,UAAAA,IAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA;;AACA,eAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,CAAA,MAAA,EAAoCM,EAAAA,GAAAA,IAApC,EAA+CA,EAAAA,EAA/C,EAA+CA;AAC/CK,YAAAA,IAAAA,GAAAA,IAAAA,CAAAA,EAAAA,CAAAA;AACAZ,YAAAA,WAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,GAAAA,CAAAA;AAEA;;AAAA,iBAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EAAA;AAAA,SAfAU;;AAuBAG,QAAAA,SAAAA,GAAAA,UAAAA,KAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAvB,YAAAA,GAAAA,GAAAA,UAAAA;AAEA;;AAAA,cAAA,CAAA,GAAA,EAAA,IAAA,KAAA,CAAA,MAAA,EAAA;AACAqB,YAAAA,MAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,GAAAA,CAAAA;;AACA,gBAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,qBAAA,MAAA;AAEAG;;AAAAA,YAAAA,GAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,MAAAA,GAAAA,CAAAA,CAAAA;AACAb,YAAAA,IAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA;;AACA,iBAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,CAAA,MAAA,EAAsCM,EAAAA,GAAAA,IAAtC,EAAiDA,EAAAA,EAAjD,EAAiDA;AACjDK,cAAAA,IAAAA,GAAAA,IAAAA,CAAAA,EAAAA,CAAAA;;AACA,kBAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,CAAA,EAAA;AACAxB,gBAAAA,MAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,CAAAA,EAAAA,IAAAA,EAAAA,GAAAA,CAAAA;AACAuB,gBAAAA,MAAAA,CAAAA,GAAAA;AACAG,gBAAAA,GAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,MAAAA,GAAAA,CAAAA,CAAAA;AAAAA;AAGA;;AAAA,mBAAA,MAAA;AAEAZ;;AAAAA,UAAAA,OAAAA,CAAAA,KAAAA,EAAAA,GAAAA,CAAAA;AACAI,UAAAA,QAAAA,GAAAA,EAAAA;;AACA,eAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,GAAA,GAAA,CAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA,EAAkD,KAAA,KAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,GAAA,KAAlD,EAAwFzuB,CAAAA,GAAAA,KAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAxF,EAAwFA;AACxFyuB,YAAAA,QAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAAAA,GAAAA,CAAAA;AAEA;;AAAA,iBAAA,QAAA;AAAA,SA3BAO;;AA8BAJ,QAAAA,SAAAA,GAAAA,UAAAA,KAAAA,EAAAA,QAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,OAAA,EAAA,MAAA,EAAA,SAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAnB,YAAAA,GAAAA,GAAAA,UAAAA;AAEAyB;;AAAAA,UAAAA,OAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA;;AACA,iBAAA,GAAA,GAAA,QAAA,EAAA;AACAC,YAAAA,SAAAA,GAAAA,GAAAA,GAAAA,CAAAA,IAAAA,CAAAA;AACA9qB,YAAAA,MAAAA,GAAAA,KAAAA,CAAAA,SAAAA,CAAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,CAAA,EAAA;AACAwpB,cAAAA,KAAAA,CAAAA,GAAAA,CAAAA,GAAAA,MAAAA;AACAtR,cAAAA,GAAAA,GAAAA,SAAAA;AACA;AAEA;;AAAA;AAEA;;AAAA,iBAAA,KAAA,CAAA,GAAA,CAAA,GAAA,OAAA;AAAA,SAhBAqS;;AAmBAX,QAAAA,OAAAA,GAAAA,UAAAA,KAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA;AACA,cAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA;;AACA,cAAA,GAAA,IAAA,IAAA,EAAA;AACAR,YAAAA,GAAAA,GAAAA,UAAAA;AAEA2B;;AAAAA,UAAAA,MAAAA,GAAAA,KAAAA,CAAAA,MAAAA;AACAC,UAAAA,QAAAA,GAAAA,GAAAA;AACAH,UAAAA,OAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA;AACAI,UAAAA,QAAAA,GAAAA,IAAAA,GAAAA,GAAAA,CAAAA;;AACA,iBAAA,QAAA,GAAA,MAAA,EAAA;AACAC,YAAAA,QAAAA,GAAAA,QAAAA,GAAAA,CAAAA;;AACA,gBAAA,QAAA,GAAA,MAAA,IAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACAD,cAAAA,QAAAA,GAAAA,QAAAA;AAEAzB;;AAAAA,YAAAA,KAAAA,CAAAA,GAAAA,CAAAA,GAAAA,KAAAA,CAAAA,QAAAA,CAAAA;AACAtR,YAAAA,GAAAA,GAAAA,QAAAA;AACA+S,YAAAA,QAAAA,GAAAA,IAAAA,GAAAA,GAAAA,CAAAA;AAEAzB;;AAAAA,UAAAA,KAAAA,CAAAA,GAAAA,CAAAA,GAAAA,OAAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA,QAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AAAA,SAnBAI;;AAsBAuB,QAAAA,IAAAA,GAAAA,YAAAA;AACAA,UAAAA,IAAAA,CAAAA,IAAAA,GAAAA,QAAAA;AAEAA,UAAAA,IAAAA,CAAAA,GAAAA,GAAAA,OAAAA;AAEAA,UAAAA,IAAAA,CAAAA,OAAAA,GAAAA,WAAAA;AAEAA,UAAAA,IAAAA,CAAAA,OAAAA,GAAAA,WAAAA;AAEAA,UAAAA,IAAAA,CAAAA,OAAAA,GAAAA,OAAAA;AAEAA,UAAAA,IAAAA,CAAAA,UAAAA,GAAAA,UAAAA;AAEAA,UAAAA,IAAAA,CAAAA,QAAAA,GAAAA,QAAAA;AAEAA,UAAAA,IAAAA,CAAAA,SAAAA,GAAAA,SAAAA;;AAEA,mBAAA,IAAA,CAAA,GAAA,EAAA;AACAtuB,iBAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,GAAAA,GAAAA,GAAAA,UAAAA;AACAA,iBAAAA,KAAAA,GAAAA,EAAAA;AAGAsuB;;AAAAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,UAAAA,CAAAA,EAAAA;AACA,mBAAA,QAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,GAAAA,GAAAA,YAAAA;AACA,mBAAA,OAAA,CAAA,KAAA,KAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,YAAAA;AACA,mBAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAAAA,CAAAA,EAAAA;AACA,mBAAA,KAAA,KAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UAAAA,CAAAA,EAAAA;AACA,mBAAA,WAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UAAAA,CAAAA,EAAAA;AACA,mBAAA,WAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,YAAAA;AACA,mBAAA,OAAA,CAAA,KAAA,KAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,UAAAA,GAAAA,UAAAA,CAAAA,EAAAA;AACA,mBAAA,UAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA,GAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,YAAAA;AACA,mBAAA,KAAA,KAAA,GAAA,EAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,YAAAA;AACA,mBAAA,KAAA,KAAA,CAAA,MAAA,KAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,YAAAA;AACA,mBAAA,KAAA,KAAA,CAAA,MAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,YAAAA;AACA,gBAAA,IAAA;AACAC,YAAAA,IAAAA,GAAAA,IAAAA,IAAAA,EAAAA;AACAA,YAAAA,IAAAA,CAAAA,KAAAA,GAAAA,KAAAA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACA,mBAAA,IAAA;AAAA,WAJAD;;AAOAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,YAAAA;AACA,mBAAA,KAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,WADAA;;AAIAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA;AAEAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,GAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA;AAEAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA;AAEAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,GAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,QAAAA;AAEAA,UAAAA,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,IAAAA,CAAAA,SAAAA,CAAAA,KAAAA;AAEA,iBAAA,IAAA;AAvFAA,SAAAA,EAAAA;;AA2FA,YAAA,OAAA,MAAA,KAAA,WAAA,IAAA,MAAA,KAAA,IAAA,GAAA,MAAA,CAAA,OAAA,GAAA,KAAA,CAAA,EAAA;AACA7vB,UAAAA,MAAAA,CAAAA,OAAAA,GAAAA,IAAAA;AAAAA,SADA,MAEG;AACHI,UAAAA,MAAAA,CAAAA,IAAAA,GAAAA,IAAAA;AAAAA;AAAAA,OA7WA,EAgXCyE,IAhXD,CAgXCA,IAhXD;AAgXCA,KD5VD,EC4VCA,ID5VD,CC4VCA,ID5VD,EC4VCA,mBAAAA,CAAAA,EAAAA,CAAAA,CAAAA,MAAAA,CD5VD;AC4VCA,GlE7SD,EkE6SCA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AChXD7E,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA;AACA6vB,MAAAA,IAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CADA7vB;AAEA+vB,MAAAA,IAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAFA/vB;AAGA0N,MAAAA,IAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAHA1N;AAIA2O,MAAAA,IAAAA,EAAAA,mBAAAA,CAAAA,CAAAA,CAJA3O;AAKAiN,MAAAA,gBAAAA,EAAAA,mBAAAA,CAAAA,CAAAA,CALAjN;AAMA+M,MAAAA,SAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CANA/M;AAOAqS,MAAAA,WAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAPArS;AAQA+sB,MAAAA,eAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CARA/sB;AASA8sB,MAAAA,kBAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CATA9sB;AAUA6sB,MAAAA,cAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAVA7sB;AAWAgS,MAAAA,aAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAXAhS;AAYA4sB,MAAAA,iBAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAZA5sB;AAaA2sB,MAAAA,oBAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAbA3sB;AAcA0sB,MAAAA,gBAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAdA1sB;AAeAmsB,MAAAA,aAAAA,EAAAA,mBAAAA,CAAAA,EAAAA,CAfAnsB;AAgBA8M,MAAAA,eAAAA,EAAAA,mBAAAA,CAAAA,EAAAA;AAhBA9M,KAAAA;AAgBA8M,GnEmDA,EmEnDAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA,mBAAAA,EAAAA;AChBA9M,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,mBAAAA,CAAAA,EAAAA,CAAAA;AAAAA,GpEmEA,EoEnEAA,UAAAA,MAAAA,EAAAA,OAAAA,EAAAA;ACKA,QAAA,KAAA,GAAA,OAAA,CAAA,SAAA;AAMA,QAAA,MAAA,GAAA,KAAA,CAAA,eAAA,IACAgwB,KAAAA,CAAAA,qBADA,IAEAA,KAAAA,CAAAA,kBAFA,IAGAA,KAAAA,CAAAA,iBAHA,IAIAA,KAAAA,CAAAA,gBAJA;AAUAhwB,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,KAAAA;;AAWA,aAAA,KAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AACA,UAAA,MAAA,EAAA,OAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AACA,UAAA,KAAA,GAAA,EAAA,CAAA,UAAA,CAAA,gBAAA,CAAA,QAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAiBK,CAAAA,GAAAA,KAAAA,CAAAA,MAAjB,EAAiBA,EAAkBA,CAAnC,EAAmCA;AACnC,YAAA,KAAA,CAAA,CAAA,CAAA,IAAA,EAAA,EAAA,OAAA,IAAA;AAEA;;AAAA,aAAA,KAAA;AAAA;AAAA,GrE6BA,EqE7BA,UAAA,MAAA,EAAA,OAAA,EAAA,mBAAA,EAAA;ACtCA,QAAA,OAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;;AAEAL,IAAAA,MAAAA,CAAAA,OAAAA,GAAAA,UAAAA,OAAAA,EAAAA,QAAAA,EAAAA,WAAAA,EAAAA;AACA,UAAA,MAAA,GAAA,WAAA,GAAA,OAAA,GAAA,OAAA,CAAA,UAAA;;AAEA,aAAA,MAAA,IAAA,MAAA,KAAA,QAAA,EAAA;AACA,YAAA,OAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,OAAA,MAAA;AACA0E,QAAAA,MAAAA,GAAAA,MAAAA,CAAAA,UAAAA;AAAAA;AAAAA,KALA1E;AAKA0E,GtE4DA,CDzDA,CAAA;AuEHAA,C","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));\n\telse\n\t\troot[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","import * as React from \"react\";\nimport * as _ from \"lodash\";\n\nexport interface BaseWidgetProps {\n\t/**\n\t * Override the base class name\n\t */\n\tbaseClass?: string;\n\t/**\n\t * append additional classes\n\t */\n\tclassName?: string;\n\n\t/**\n\t * Additional props to add\n\t */\n\textraProps?: any;\n}\n\nexport class BaseWidget<P extends BaseWidgetProps = BaseWidgetProps, S = any> extends React.Component<P, S> {\n\tclassName: string;\n\n\tconstructor(name: string, props: P) {\n\t\tsuper(props);\n\t\tthis.className = name;\n\t}\n\n\tbem(selector: string): string {\n\t\treturn (this.props.baseClass || this.className) + selector + \" \";\n\t}\n\n\tgetClassName(): string {\n\t\treturn (\n\t\t\t(this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\")\n\t\t);\n\t}\n\n\tgetProps(): any {\n\t\treturn {\n\t\t\t...((this.props.extraProps as any) || {}),\n\t\t\tclassName: this.getClassName()\n\t\t};\n\t}\n}\n","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PointModel extends BaseModel<LinkModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\n\tconstructor(link: LinkModel, points: { x: number; y: number }) {\n\t\tsuper();\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t\tthis.parent = link;\n\t}\n\n\tgetSelectedEntities() {\n\t\tif (super.isSelected() && !this.isConnectedToPort()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tisConnectedToPort(): boolean {\n\t\treturn this.parent.getPortForPoint(this) !== null;\n\t}\n\n\tgetLink(): LinkModel {\n\t\treturn this.getParent();\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y\n\t\t});\n\t}\n\n\tremove() {\n\t\t//clear references\n\t\tif (this.parent) {\n\t\t\tthis.parent.removePoint(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tupdateLocation(points: { x: number; y: number }) {\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t}\n\n\tgetX(): number {\n\t\treturn this.x;\n\t}\n\n\tgetY(): number {\n\t\treturn this.y;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n","import { BaseEntity, BaseListener } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport interface BaseModelListener extends BaseListener {\n\tselectionChanged?(event: BaseEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEvent<BaseModel>): void;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class BaseModel<\n\tX extends BaseEntity = BaseEntity,\n\tT extends BaseModelListener = BaseModelListener\n> extends BaseEntity<T> {\n\ttype: string;\n\tselected: boolean;\n\tparent: X;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(id);\n\t\tthis.type = type;\n\t\tthis.selected = false;\n\t}\n\n\tpublic getParent(): X {\n\t\treturn this.parent;\n\t}\n\n\tpublic setParent(parent: X) {\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getSelectedEntities(): BaseModel<any, T>[] {\n\t\tif (this.isSelected()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic deSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.type = ob.type;\n\t\tthis.selected = ob.selected;\n\t}\n\n\tpublic serialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\ttype: this.type,\n\t\t\tselected: this.selected\n\t\t});\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getID(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic isSelected(): boolean {\n\t\treturn this.selected;\n\t}\n\n\tpublic setSelected(selected: boolean = true) {\n\t\tthis.selected = selected;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.selectionChanged) {\n\t\t\t\tlistener.selectionChanged({ ...event, isSelected: selected });\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove() {\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.entityRemoved) {\n\t\t\t\tlistener.entityRemoved(event);\n\t\t\t}\n\t\t});\n\t}\n}\n","// tslint:disable no-bitwise\nimport closest = require(\"closest\");\nimport { PointModel } from \"./models/PointModel\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport * as Path from \"paths-js/path\";\n/**\n * @author Dylan Vorster\n */\nexport class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn \"\" + Toolkit.TESTING_UID;\n\t\t}\n\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === \"x\" ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\t/**\n\t * Finds the closest element as a polyfill\n\t *\n\t * @param  {Element} element  [description]\n\t * @param  {string}  selector [description]\n\t */\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (document.body.closest) {\n\t\t\treturn element.closest(selector);\n\t\t}\n\t\treturn closest(element, selector);\n\t}\n\n\tpublic static generateLinePath(firstPoint: PointModel, lastPoint: PointModel): string {\n\t\treturn `M${firstPoint.x},${firstPoint.y} L ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateCurvePath(firstPoint: PointModel, lastPoint: PointModel, curvy: number = 0): string {\n\t\tvar isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n\t\tvar curvyX = isHorizontal ? curvy : 0;\n\t\tvar curvyY = isHorizontal ? 0 : curvy;\n\n\t\treturn `M${firstPoint.x},${firstPoint.y} C ${firstPoint.x + curvyX},${firstPoint.y + curvyY}\n    ${lastPoint.x - curvyX},${lastPoint.y - curvyY} ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateDynamicPath(pathCoords: number[][]) {\n\t\tlet path = Path();\n\t\tpath = path.moveto(pathCoords[0][0] * ROUTING_SCALING_FACTOR, pathCoords[0][1] * ROUTING_SCALING_FACTOR);\n\t\tpathCoords.slice(1).forEach(coords => {\n\t\t\tpath = path.lineto(coords[0] * ROUTING_SCALING_FACTOR, coords[1] * ROUTING_SCALING_FACTOR);\n\t\t});\n\t\treturn path.print();\n\t}\n}\n","import { BaseModel } from \"../models/BaseModel\";\n\nexport abstract class AbstractFactory<T extends BaseModel> {\n\ttype: string;\n\n\tconstructor(name: string) {\n\t\tthis.type = name;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tabstract getNewInstance(initialConfig?: any): T;\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport class NodeModel extends BaseModel<DiagramModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\textras: any;\n\tports: { [s: string]: PortModel };\n\n\t// calculated post rendering so routing can be done correctly\n\twidth: number;\n\theight: number;\n\n\tconstructor(nodeType: string = \"default\", id?: string) {\n\t\tsuper(nodeType, id);\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.extras = {};\n\t\tthis.ports = {};\n\t}\n\n\tsetPosition(x, y) {\n\t\t//store position\n\t\tlet oldX = this.x;\n\t\tlet oldY = this.y;\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlet point = link.getPointForPort(port);\n\t\t\t\tpoint.x = point.x + x - oldX;\n\t\t\t\tpoint.y = point.y + y - oldY;\n\t\t\t});\n\t\t});\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tgetSelectedEntities() {\n\t\tlet entities = super.getSelectedEntities();\n\n\t\t// add the points of each link that are selected here\n\t\tif (this.isSelected()) {\n\t\t\t_.forEach(this.ports, port => {\n\t\t\t\tentities = entities.concat(\n\t\t\t\t\t_.map(port.getLinks(), link => {\n\t\t\t\t\t\treturn link.getPointForPort(port);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn entities;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t\tthis.extras = ob.extras;\n\n\t\t//deserialize ports\n\t\t_.forEach(ob.ports, (port: any) => {\n\t\t\tlet portOb = engine.getPortFactory(port.type).getNewInstance();\n\t\t\tportOb.deSerialize(port, engine);\n\t\t\tthis.addPort(portOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\textras: this.extras,\n\t\t\tports: _.map(this.ports, port => {\n\t\t\t\treturn port.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\t// also clone the ports\n\t\tclone.ports = {};\n\t\t_.forEach(this.ports, port => {\n\t\t\tclone.addPort(port.clone(lookupTable));\n\t\t});\n\t}\n\n\tremove() {\n\t\tsuper.remove();\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlink.remove();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetPortFromID(id): PortModel | null {\n\t\tfor (var i in this.ports) {\n\t\t\tif (this.ports[i].id === id) {\n\t\t\t\treturn this.ports[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPort(name: string): PortModel | null {\n\t\treturn this.ports[name];\n\t}\n\n\tgetPorts(): { [s: string]: PortModel } {\n\t\treturn this.ports;\n\t}\n\n\tremovePort(port: PortModel) {\n\t\t//clear the parent node reference\n\t\tif (this.ports[port.name]) {\n\t\t\tthis.ports[port.name].setParent(null);\n\t\t\tdelete this.ports[port.name];\n\t\t}\n\t}\n\n\taddPort<T extends PortModel>(port: T): T {\n\t\tport.setParent(this);\n\t\tthis.ports[port.name] = port;\n\t\treturn port;\n\t}\n\n\tupdateDimensions({ width, height }: { width: number; height: number }) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n}\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","export class BaseAction {\n\tmouseX: number;\n\tmouseY: number;\n\tms: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tthis.mouseX = mouseX;\n\t\tthis.mouseY = mouseY;\n\t\tthis.ms = new Date().getTime();\n\t}\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PortModel extends BaseModel<NodeModel, BaseModelListener> {\n\tname: string;\n\tlinks: { [id: string]: LinkModel };\n\tmaximumLinks: number;\n\n\t// calculated post rendering so routing can be done correctly\n\tx: number;\n\ty: number;\n\twidth: number;\n\theight: number;\n\n\tconstructor(name: string, type?: string, id?: string, maximumLinks?: number) {\n\t\tsuper(type, id);\n\t\tthis.name = name;\n\t\tthis.links = {};\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.name = ob.name;\n\t\tthis.maximumLinks = ob.maximumLinks;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tparentNode: this.parent.id,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.id;\n\t\t\t}),\n\t\t\tmaximumLinks: this.maximumLinks\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.links = {};\n\t\tclone.parentNode = this.getParent().clone(lookupTable);\n\t}\n\n\tgetNode(): NodeModel {\n\t\treturn this.getParent();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetMaximumLinks(): number {\n\t\treturn this.maximumLinks;\n\t}\n\n\tsetMaximumLinks(maximumLinks: number) {\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tremoveLink(link: LinkModel) {\n\t\tdelete this.links[link.getID()];\n\t}\n\n\taddLink(link: LinkModel) {\n\t\tthis.links[link.getID()] = link;\n\t}\n\n\tgetLinks(): { [id: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tpublic createLinkModel(): LinkModel | null {\n\t\tif (_.isFinite(this.maximumLinks)) {\n\t\t\tvar numberOfLinks: number = _.size(this.links);\n\t\t\tif (this.maximumLinks === 1 && numberOfLinks >= 1) {\n\t\t\t\treturn _.values(this.links)[0];\n\t\t\t} else if (numberOfLinks >= this.maximumLinks) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tupdateCoords({ x, y, width, height }: { x: number; y: number; width: number; height: number }) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\treturn true;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n","import { Toolkit } from \"./Toolkit\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"./DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport interface BaseEvent<T extends BaseEntity = any> {\n\tentity: BaseEntity<BaseListener>;\n\tstopPropagation: () => any;\n\tfiring: boolean;\n\tid: string;\n}\n\nexport interface BaseListener<T extends BaseEntity = any> {\n\tlockChanged?(event: BaseEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = \"node\" | \"link\" | \"port\" | \"point\";\n\nexport class BaseEntity<T extends BaseListener = BaseListener> {\n\tpublic listeners: { [s: string]: T };\n\tpublic id: string;\n\tpublic locked: boolean;\n\n\tconstructor(id?: string) {\n\t\tthis.listeners = {};\n\t\tthis.id = id || Toolkit.UID();\n\t\tthis.locked = false;\n\t}\n\n\tgetID() {\n\t\treturn this.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.id]) {\n\t\t\treturn lookupTable[this.id];\n\t\t}\n\t\tlet clone = _.clone(this);\n\t\tclone.id = Toolkit.UID();\n\t\tclone.clearListeners();\n\t\tlookupTable[this.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tpublic deSerialize(data: { [s: string]: any }, engine: DiagramEngine) {\n\t\tthis.id = data.id;\n\t}\n\n\tpublic serialize() {\n\t\treturn {\n\t\t\tid: this.id\n\t\t};\n\t}\n\n\tpublic iterateListeners(cb: (t: T, event: BaseEvent) => any) {\n\t\tlet event: BaseEvent = {\n\t\t\tid: Toolkit.UID(),\n\t\t\tfiring: true,\n\t\t\tentity: this,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t}\n\t\t};\n\n\t\tfor (var i in this.listeners) {\n\t\t\tif (this.listeners.hasOwnProperty(i)) {\n\t\t\t\t// propagation stopped\n\t\t\t\tif (!event.firing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcb(this.listeners[i], event);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic removeListener(listener: string) {\n\t\tif (this.listeners[listener]) {\n\t\t\tdelete this.listeners[listener];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic addListener(listener: T): string {\n\t\tvar uid = Toolkit.UID();\n\t\tthis.listeners[uid] = listener;\n\t\treturn uid;\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.locked = locked;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.lockChanged) {\n\t\t\t\tlistener.lockChanged({ ...event, locked: locked });\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","module.exports = require('./lib/heap');\n","import * as PF from \"pathfinding\";\nimport { DiagramEngine } from \"../main\";\n\n/*\nit can be very expensive to calculate routes when every single pixel on the canvas\nis individually represented. Using the factor below, we combine values in order\nto achieve the best trade-off between accuracy and performance.\n*/\nexport const ROUTING_SCALING_FACTOR = 5;\n\nconst pathFinderInstance = new PF.JumpPointFinder({\n\theuristic: PF.Heuristic.manhattan,\n\tdiagonalMovement: PF.DiagonalMovement.Never\n});\n\nexport default class PathFinding {\n\tinstance: any;\n\tdiagramEngine: DiagramEngine;\n\n\tconstructor(diagramEngine: DiagramEngine) {\n\t\tthis.instance = pathFinderInstance;\n\t\tthis.diagramEngine = diagramEngine;\n\t}\n\n\t/**\n\t * Taking as argument a fully unblocked walking matrix, this method\n\t * finds a direct path from point A to B.\n\t */\n\tcalculateDirectPath(\n\t\tfrom: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tto: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t}\n\t): number[][] {\n\t\tconst matrix = this.diagramEngine.getCanvasMatrix();\n\t\tconst grid = new PF.Grid(matrix);\n\n\t\treturn pathFinderInstance.findPath(\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(from.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(from.y / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(to.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(to.y / ROUTING_SCALING_FACTOR)),\n\t\t\tgrid\n\t\t);\n\t}\n\n\t/**\n\t * Using @link{#calculateDirectPath}'s result as input, we here\n\t * determine the first walkable point found in the matrix that includes\n\t * blocked paths.\n\t */\n\tcalculateLinkStartEndCoords(\n\t\tmatrix: number[][],\n\t\tpath: number[][]\n\t): {\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tpathToStart: number[][];\n\t\tpathToEnd: number[][];\n\t} {\n\t\tconst startIndex = path.findIndex(point => matrix[point[1]][point[0]] === 0);\n\t\tconst endIndex =\n\t\t\tpath.length -\n\t\t\t1 -\n\t\t\tpath\n\t\t\t\t.slice()\n\t\t\t\t.reverse()\n\t\t\t\t.findIndex(point => matrix[point[1]][point[0]] === 0);\n\n\t\t// are we trying to create a path exclusively through blocked areas?\n\t\t// if so, let's fallback to the linear routing\n\t\tif (startIndex === -1 || endIndex === -1) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst pathToStart = path.slice(0, startIndex);\n\t\tconst pathToEnd = path.slice(endIndex);\n\n\t\treturn {\n\t\t\tstart: {\n\t\t\t\tx: path[startIndex][0],\n\t\t\t\ty: path[startIndex][1]\n\t\t\t},\n\t\t\tend: {\n\t\t\t\tx: path[endIndex][0],\n\t\t\t\ty: path[endIndex][1]\n\t\t\t},\n\t\t\tpathToStart,\n\t\t\tpathToEnd\n\t\t};\n\t}\n\n\t/**\n\t * Puts everything together: merges the paths from/to the centre of the ports,\n\t * with the path calculated around other elements.\n\t */\n\tcalculateDynamicPath(\n\t\troutingMatrix: number[][],\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tpathToStart: number[][],\n\t\tpathToEnd: number[][]\n\t) {\n\t\t// generate the path based on the matrix with obstacles\n\t\tconst grid = new PF.Grid(routingMatrix);\n\t\tconst dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n\n\t\t// aggregate everything to have the calculated path ready for rendering\n\t\tconst pathCoords = pathToStart\n\t\t\t.concat(dynamicPath, pathToEnd)\n\t\t\t.map(coords => [\n\t\t\t\tthis.diagramEngine.translateRoutingX(coords[0], true),\n\t\t\t\tthis.diagramEngine.translateRoutingY(coords[1], true)\n\t\t\t]);\n\t\treturn PF.Util.compressPath(pathCoords);\n\t}\n}\n","import { BaseModel } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class LabelModel extends BaseModel<LinkModel> {\n\toffsetX: number;\n\toffsetY: number;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(type, id);\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.offsetX = ob.offsetX;\n\t\tthis.offsetY = ob.offsetY;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\toffsetX: this.offsetX,\n\t\t\toffsetY: this.offsetY\n\t\t});\n\t}\n}\n","import { LabelModel } from \"../../models/LabelModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\n\nexport class DefaultLabelModel extends LabelModel {\n\tlabel: string;\n\n\tconstructor() {\n\t\tsuper(\"default\");\n\t\tthis.offsetY = -23;\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.label = label;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.label = ob.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tlabel: this.label\n\t\t});\n\t}\n}\n","/**\n * @author Dylan Vorster\n */\nimport { LinkModel, LinkModelListener } from \"../../models/LinkModel\";\nimport { BaseEvent } from \"../../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLabelModel } from \"./DefaultLabelModel\";\nimport { LabelModel } from \"../../models/LabelModel\";\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelListener> {\n\twidth: number;\n\tcolor: string;\n\tcurvyness: number;\n\n\tconstructor(type: string = \"default\") {\n\t\tsuper(type);\n\t\tthis.color = \"rgba(255,255,255,0.5)\";\n\t\tthis.width = 3;\n\t\tthis.curvyness = 50;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\twidth: this.width,\n\t\t\tcolor: this.color,\n\t\t\tcurvyness: this.curvyness\n\t\t});\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.color = ob.color;\n\t\tthis.width = ob.width;\n\t\tthis.curvyness = ob.curvyness;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.width = width;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.widthChanged) {\n\t\t\t\tlistener.widthChanged({ ...event, width: width });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.color = color;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.colorChanged) {\n\t\t\t\tlistener.colorChanged({ ...event, color: color });\n\t\t\t}\n\t\t});\n\t}\n}\n","import * as _ from \"lodash\";\nimport { PortModel } from \"../../models/PortModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLinkModel } from \"./DefaultLinkModel\";\nimport { LinkModel } from \"../../models/LinkModel\";\n\nexport class DefaultPortModel extends PortModel {\n\tin: boolean;\n\tlabel: string;\n\tlinks: { [id: string]: DefaultLinkModel };\n\n\tconstructor(isInput: boolean, name: string, label: string = null, id?: string) {\n\t\tsuper(name, \"default\", id);\n\t\tthis.in = isInput;\n\t\tthis.label = label || name;\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n\t\t\tlabel: this.label\n\t\t});\n\t}\n\n\tlink(port: PortModel): LinkModel {\n\t\tlet link = this.createLinkModel();\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.in !== port.in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport { PointModel } from \"./PointModel\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { LabelModel } from \"./LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport interface LinkModelListener extends BaseModelListener {\n\tsourcePortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n\n\ttargetPortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n}\n\nexport class LinkModel<T extends LinkModelListener = LinkModelListener> extends BaseModel<DiagramModel, T> {\n\tsourcePort: PortModel | null;\n\ttargetPort: PortModel | null;\n\tlabels: LabelModel[];\n\tpoints: PointModel[];\n\textras: {};\n\n\tconstructor(linkType: string = \"default\", id?: string) {\n\t\tsuper(linkType, id);\n\t\tthis.points = [new PointModel(this, { x: 0, y: 0 }), new PointModel(this, { x: 0, y: 0 })];\n\t\tthis.extras = {};\n\t\tthis.sourcePort = null;\n\t\tthis.targetPort = null;\n\t\tthis.labels = [];\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.extras = ob.extras;\n\t\tthis.points = _.map(ob.points || [], (point: { x; y }) => {\n\t\t\tvar p = new PointModel(this, { x: point.x, y: point.y });\n\t\t\tp.deSerialize(point, engine);\n\t\t\treturn p;\n\t\t});\n\n\t\t//deserialize labels\n\t\t_.forEach(ob.labels || [], (label: any) => {\n\t\t\tlet labelOb = engine.getLabelFactory(label.type).getNewInstance();\n\t\t\tlabelOb.deSerialize(label, engine);\n\t\t\tthis.addLabel(labelOb);\n\t\t});\n\n\t\tif (ob.target) {\n\t\t\tthis.setTargetPort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.target)\n\t\t\t\t\t.getPortFromID(ob.targetPort)\n\t\t\t);\n\t\t}\n\n\t\tif (ob.source) {\n\t\t\tthis.setSourcePort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.source)\n\t\t\t\t\t.getPortFromID(ob.sourcePort)\n\t\t\t);\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tsource: this.sourcePort ? this.sourcePort.getParent().id : null,\n\t\t\tsourcePort: this.sourcePort ? this.sourcePort.id : null,\n\t\t\ttarget: this.targetPort ? this.targetPort.getParent().id : null,\n\t\t\ttargetPort: this.targetPort ? this.targetPort.id : null,\n\t\t\tpoints: _.map(this.points, point => {\n\t\t\t\treturn point.serialize();\n\t\t\t}),\n\t\t\textras: this.extras,\n\t\t\tlabels: _.map(this.labels, label => {\n\t\t\t\treturn label.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.setPoints(\n\t\t\t_.map(this.getPoints(), (point: PointModel) => {\n\t\t\t\treturn point.clone(lookupTable);\n\t\t\t})\n\t\t);\n\t\tif (this.sourcePort) {\n\t\t\tclone.setSourcePort(this.sourcePort.clone(lookupTable));\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tclone.setTargetPort(this.targetPort.clone(lookupTable));\n\t\t}\n\t}\n\n\tremove() {\n\t\tif (this.sourcePort) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tisLastPoint(point: PointModel) {\n\t\tvar index = this.getPointIndex(point);\n\t\treturn index === this.points.length - 1;\n\t}\n\n\tgetPointIndex(point: PointModel) {\n\t\treturn this.points.indexOf(point);\n\t}\n\n\tgetPointModel(id: string): PointModel | null {\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tif (this.points[i].id === id) {\n\t\t\t\treturn this.points[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPortForPoint(point: PointModel): PortModel {\n\t\tif (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n\t\t\treturn this.sourcePort;\n\t\t}\n\t\tif (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n\t\t\treturn this.targetPort;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPointForPort(port: PortModel): PointModel {\n\t\tif (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n\t\t\treturn this.getFirstPoint();\n\t\t}\n\t\tif (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n\t\t\treturn this.getLastPoint();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFirstPoint(): PointModel {\n\t\treturn this.points[0];\n\t}\n\n\tgetLastPoint(): PointModel {\n\t\treturn this.points[this.points.length - 1];\n\t}\n\n\tsetSourcePort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.sourcePort !== null) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tthis.sourcePort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.sourcePortChanged) {\n\t\t\t\tlistener.sourcePortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSourcePort(): PortModel {\n\t\treturn this.sourcePort;\n\t}\n\n\tgetTargetPort(): PortModel {\n\t\treturn this.targetPort;\n\t}\n\n\tsetTargetPort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.targetPort !== null) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tthis.targetPort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.targetPortChanged) {\n\t\t\t\tlistener.targetPortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tpoint(x: number, y: number): PointModel {\n\t\treturn this.addPoint(this.generatePoint(x, y));\n\t}\n\n\taddLabel(label: LabelModel) {\n\t\tlabel.setParent(this);\n\t\tthis.labels.push(label);\n\t}\n\n\tgetPoints(): PointModel[] {\n\t\treturn this.points;\n\t}\n\n\tsetPoints(points: PointModel[]) {\n\t\t_.forEach(points, point => {\n\t\t\tpoint.setParent(this);\n\t\t});\n\t\tthis.points = points;\n\t}\n\n\tremovePoint(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel), 1);\n\t}\n\n\tremovePointsBefore(pointModel: PointModel) {\n\t\tthis.points.splice(0, this.getPointIndex(pointModel));\n\t}\n\n\tremovePointsAfter(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel) + 1);\n\t}\n\n\tremoveMiddlePoints() {\n\t\tif (this.points.length > 2) {\n\t\t\tthis.points.splice(0, this.points.length - 2);\n\t\t}\n\t}\n\n\taddPoint<P extends PointModel>(pointModel: P, index = 1): P {\n\t\tpointModel.setParent(this);\n\t\tthis.points.splice(index, 0, pointModel);\n\t\treturn pointModel;\n\t}\n\n\tgeneratePoint(x: number = 0, y: number = 0): PointModel {\n\t\treturn new PointModel(this, { x: x, y: y });\n\t}\n}\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface NodeProps extends BaseWidgetProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class NodeWidget extends BaseWidget<NodeProps, NodeState> {\n\tconstructor(props: NodeProps) {\n\t\tsuper(\"srd-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.node);\n\t}\n\n\tgetClassName() {\n\t\treturn \"node \" + super.getClassName() + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tdata-nodeid={this.props.node.id}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: this.props.node.y,\n\t\t\t\t\tleft: this.props.node.x\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { NodeWidget } from \"../NodeWidget\";\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface NodeLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeLayerState {}\n\nexport class NodeLayerWidget extends BaseWidget<NodeLayerProps, NodeLayerState> {\n\tconstructor(props: NodeLayerProps) {\n\t\tsuper(\"srd-node-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\tupdateNodeDimensions = () => {\n\t\tif (!this.props.diagramEngine.nodesRendered) {\n\t\t\tconst diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\t\t_.map(diagramModel.getNodes(), node => {\n\t\t\t\tnode.updateDimensions(this.props.diagramEngine.getNodeDimensions(node));\n\t\t\t});\n\t\t}\n\t};\n\n\tcomponentDidUpdate() {\n\t\tthis.updateNodeDimensions();\n\t\tthis.props.diagramEngine.nodesRendered = true;\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{_.map(diagramModel.getNodes(), (node: NodeModel) => {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\tNodeWidget,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdiagramEngine: this.props.diagramEngine,\n\t\t\t\t\t\t\tkey: node.id,\n\t\t\t\t\t\t\tnode: node\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.props.diagramEngine.generateWidgetForNode(node)\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface LinkProps extends BaseWidgetProps {\n\tlink: LinkModel;\n\tdiagramEngine: DiagramEngine;\n\tchildren?: any;\n}\n\nexport interface LinkState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkWidget extends BaseWidget<LinkProps, LinkState> {\n\tconstructor(props: LinkProps) {\n\t\tsuper(\"srd-link\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.link);\n\t}\n\n\trender() {\n\t\treturn this.props.children;\n\t}\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { LinkWidget } from \"../LinkWidget\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface LinkLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\tpointAdded: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface LinkLayerState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkLayerWidget extends BaseWidget<LinkLayerProps, LinkLayerState> {\n\tconstructor(props: LinkLayerProps) {\n\t\tsuper(\"srd-link-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<svg\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{//only perform these actions when we have a diagram\n\t\t\t\tthis.props.diagramEngine.canvas &&\n\t\t\t\t\t_.map(diagramModel.getLinks(), link => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.props.diagramEngine.nodesRendered &&\n\t\t\t\t\t\t\t!this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (link.sourcePort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.points[0].updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.sourcePort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (link.targetPort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.targetPort);\n\t\t\t\t\t\t\t\t\t_.last(link.points).updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.targetPort);\n\t\t\t\t\t\t\t\t\tlink.targetPort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//generate links\n\t\t\t\t\t\tvar generatedLink = this.props.diagramEngine.generateWidgetForLink(link);\n\t\t\t\t\t\tif (!generatedLink) {\n\t\t\t\t\t\t\tthrow new Error(`no link generated for type: ${link.getType()}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LinkWidget key={link.getID()} link={link} diagramEngine={this.props.diagramEngine}>\n\t\t\t\t\t\t\t\t{React.cloneElement(generatedLink, {\n\t\t\t\t\t\t\t\t\tpointAdded: this.props.pointAdded\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</LinkWidget>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class SelectingAction extends BaseAction {\n\tmouseX2: number;\n\tmouseY2: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.mouseX2 = mouseX;\n\t\tthis.mouseY2 = mouseY;\n\t}\n\n\tgetBoxDimensions() {\n\t\treturn {\n\t\t\tleft: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\ttop: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n\t\t\twidth: Math.abs(this.mouseX2 - this.mouseX),\n\t\t\theight: Math.abs(this.mouseY2 - this.mouseY),\n\t\t\tright: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\tbottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n\t\t};\n\t}\n\n\tcontainsElement(x: number, y: number, diagramModel: DiagramModel): boolean {\n\t\tvar z = diagramModel.getZoomLevel() / 100.0;\n\t\tlet dimensions = this.getBoxDimensions();\n\n\t\treturn (\n\t\t\tx * z + diagramModel.getOffsetX() > dimensions.left &&\n\t\t\tx * z + diagramModel.getOffsetX() < dimensions.right &&\n\t\t\ty * z + diagramModel.getOffsetY() > dimensions.top &&\n\t\t\ty * z + diagramModel.getOffsetY() < dimensions.bottom\n\t\t);\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class MoveItemsAction extends BaseAction {\n\tselectionModels: SelectionModel[];\n\tmoved: boolean;\n\n\tconstructor(mouseX: number, mouseY: number, diagramEngine: DiagramEngine) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.moved = false;\n\t\tdiagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n\t\tvar selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n\n\t\t//dont allow items which are locked to move\n\t\tselectedItems = selectedItems.filter(item => {\n\t\t\treturn !diagramEngine.isModelLocked(item);\n\t\t});\n\n\t\tthis.selectionModels = selectedItems.map((item: PointModel | NodeModel) => {\n\t\t\treturn {\n\t\t\t\tmodel: item,\n\t\t\t\tinitialX: item.x,\n\t\t\t\tinitialY: item.y\n\t\t\t};\n\t\t});\n\t}\n}\n","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class MoveCanvasAction extends BaseAction {\n\tinitialOffsetX: number;\n\tinitialOffsetY: number;\n\n\tconstructor(mouseX: number, mouseY: number, diagramModel: DiagramModel) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.initialOffsetX = diagramModel.getOffsetX();\n\t\tthis.initialOffsetY = diagramModel.getOffsetY();\n\t}\n}\n","import { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractNodeFactory<T extends NodeModel = NodeModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, node: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface PortProps extends BaseWidgetProps {\n\tname: string;\n\tnode: NodeModel;\n}\n\nexport interface PortState {\n\tselected: boolean;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class PortWidget extends BaseWidget<PortProps, PortState> {\n\tconstructor(props: PortProps) {\n\t\tsuper(\"srd-port\", props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\tgetClassName() {\n\t\treturn \"port \" + super.getClassName() + (this.state.selected ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t}}\n\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t}}\n\t\t\t\tdata-name={this.props.name}\n\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { PortWidget } from \"../../widgets/PortWidget\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultPortLabelProps extends BaseWidgetProps {\n\tmodel: DefaultPortModel;\n}\n\nexport interface DefaultPortLabelState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultPortLabel extends BaseWidget<DefaultPortLabelProps, DefaultPortLabelState> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-port\", props);\n\t}\n\n\tgetClassName() {\n\t\treturn super.getClassName() + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n\t}\n\n\trender() {\n\t\tvar port = <PortWidget node={this.props.model.getParent()} name={this.props.model.name} />;\n\t\tvar label = <div className=\"name\">{this.props.model.label}</div>;\n\n\t\treturn (\n\t\t\t<div {...this.getProps()}>\n\t\t\t\t{this.props.model.in ? port : label}\n\t\t\t\t{this.props.model.in ? label : port}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport { DefaultPortLabel } from \"./DefaultPortLabelWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultNodeProps extends BaseWidgetProps {\n\tnode: DefaultNodeModel;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface DefaultNodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeWidget extends BaseWidget<DefaultNodeProps, DefaultNodeState> {\n\tconstructor(props: DefaultNodeProps) {\n\t\tsuper(\"srd-default-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tgeneratePort(port) {\n\t\treturn <DefaultPortLabel model={port} key={port.id} />;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div {...this.getProps()} style={{ background: this.props.node.color }}>\n\t\t\t\t<div className={this.bem(\"__title\")}>\n\t\t\t\t\t<div className={this.bem(\"__name\")}>{this.props.node.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={this.bem(\"__ports\")}>\n\t\t\t\t\t<div className={this.bem(\"__in\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getInPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={this.bem(\"__out\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getOutPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { LinkModel } from \"../models/LinkModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLinkFactory<T extends LinkModel = LinkModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DefaultLinkFactory } from \"../factories/DefaultLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\nimport PathFinding from \"../../routing/PathFinding\";\nimport * as _ from \"lodash\";\nimport { LabelModel } from \"../../models/LabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLinkProps extends BaseWidgetProps {\n\tcolor?: string;\n\twidth?: number;\n\tsmooth?: boolean;\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends BaseWidget<DefaultLinkProps, DefaultLinkState> {\n\tpublic static defaultProps: DefaultLinkProps = {\n\t\tcolor: \"black\",\n\t\twidth: 3,\n\t\tlink: null,\n\t\tengine: null,\n\t\tsmooth: false,\n\t\tdiagramEngine: null\n\t};\n\n\t// DOM references to the label and paths (if label is given), used to calculate dynamic positioning\n\trefLabels: { [id: string]: HTMLElement };\n\trefPaths: SVGPathElement[];\n\n\tpathFinding: PathFinding; // only set when smart routing is active\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(\"srd-default-link\", props);\n\n\t\tthis.refLabels = {};\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\n\t\tif (props.diagramEngine.isSmartRoutingEnabled()) {\n\t\t\tthis.pathFinding = new PathFinding(this.props.diagramEngine);\n\t\t}\n\t}\n\n\tcalculateAllLabelPosition() {\n\t\t_.forEach(this.props.link.labels, (label, index) => {\n\t\t\tthis.calculateLabelPosition(label, index + 1);\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\taddPointToLink = (event: MouseEvent, index: number): void => {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.diagramEngine.isModelLocked(this.props.link) &&\n\t\t\tthis.props.link.points.length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel(this.props.link, this.props.diagramEngine.getRelativeMousePoint(event));\n\t\t\tpoint.setSelected(true);\n\t\t\tthis.forceUpdate();\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tthis.props.pointAdded(point, event);\n\t\t}\n\t};\n\n\tgeneratePoint(pointIndex: number): JSX.Element {\n\t\tlet x = this.props.link.points[pointIndex].x;\n\t\tlet y = this.props.link.points[pointIndex].y;\n\n\t\treturn (\n\t\t\t<g key={\"point-\" + this.props.link.points[pointIndex].id}>\n\t\t\t\t<circle\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t\"point \" +\n\t\t\t\t\t\tthis.bem(\"__point\") +\n\t\t\t\t\t\t(this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\")\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<circle\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={this.props.link.points[pointIndex].id}\n\t\t\t\t\tdata-linkid={this.props.link.id}\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0}\n\t\t\t\t\tclassName={\"point \" + this.bem(\"__point\")}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n\n\tgenerateLabel(label: LabelModel) {\n\t\tconst canvas = this.props.diagramEngine.canvas as HTMLElement;\n\t\treturn (\n\t\t\t<foreignObject\n\t\t\t\tkey={label.id}\n\t\t\t\tclassName={this.bem(\"__label\")}\n\t\t\t\twidth={canvas.offsetWidth}\n\t\t\t\theight={canvas.offsetHeight}\n\t\t\t>\n\t\t\t\t<div ref={ref => (this.refLabels[label.id] = ref)}>\n\t\t\t\t\t{this.props.diagramEngine\n\t\t\t\t\t\t.getFactoryForLabel(label)\n\t\t\t\t\t\t.generateReactWidget(this.props.diagramEngine, label)}\n\t\t\t\t</div>\n\t\t\t</foreignObject>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tvar props = this.props;\n\n\t\tvar Bottom = React.cloneElement(\n\t\t\t(props.diagramEngine.getFactoryForLink(this.props.link) as DefaultLinkFactory).generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis,\n\t\t\t\tthis.state.selected || this.props.link.isSelected(),\n\t\t\t\tpath\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: ref => ref && this.refPaths.push(ref)\n\t\t\t}\n\t\t);\n\n\t\tvar Top = React.cloneElement(Bottom, {\n\t\t\t...extraProps,\n\t\t\tstrokeLinecap: \"round\",\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.setState({ selected: false });\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.setState({ selected: true });\n\t\t\t},\n\t\t\tref: null,\n\t\t\t\"data-linkid\": this.props.link.getID(),\n\t\t\tstrokeOpacity: this.state.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(this.props.link)) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g key={\"link-\" + id}>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n\n\tfindPathAndRelativePositionToRenderLabel = (index: number): { path: any; position: number } => {\n\t\t// an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n\t\tconst lengths = this.refPaths.map(path => path.getTotalLength());\n\n\t\t// calculate the point where we want to display the label\n\t\tlet labelPosition =\n\t\t\tlengths.reduce((previousValue, currentValue) => previousValue + currentValue, 0) *\n\t\t\t(index / (this.props.link.labels.length + 1));\n\n\t\t// find the path where the label will be rendered and calculate the relative position\n\t\tlet pathIndex = 0;\n\t\twhile (pathIndex < this.refPaths.length) {\n\t\t\tif (labelPosition - lengths[pathIndex] < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tpath: this.refPaths[pathIndex],\n\t\t\t\t\tposition: labelPosition\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep searching\n\t\t\tlabelPosition -= lengths[pathIndex];\n\t\t\tpathIndex++;\n\t\t}\n\t};\n\n\tcalculateLabelPosition = (label, index: number) => {\n\t\tif (!this.refLabels[label.id]) {\n\t\t\t// no label? nothing to do here\n\t\t\treturn;\n\t\t}\n\n\t\tconst { path, position } = this.findPathAndRelativePositionToRenderLabel(index);\n\n\t\tconst labelDimensions = {\n\t\t\twidth: this.refLabels[label.id].offsetWidth,\n\t\t\theight: this.refLabels[label.id].offsetHeight\n\t\t};\n\n\t\tconst pathCentre = path.getPointAtLength(position);\n\n\t\tconst labelCoordinates = {\n\t\t\tx: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n\t\t\ty: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n\t\t};\n\t\tthis.refLabels[label.id].setAttribute(\n\t\t\t\"style\",\n\t\t\t`transform: translate(${labelCoordinates.x}px, ${labelCoordinates.y}px);`\n\t\t);\n\t};\n\n\t/**\n\t * Smart routing is only applicable when all conditions below are true:\n\t * - smart routing is set to true on the engine\n\t * - current link is between two nodes (not between a node and an empty point)\n\t * - no custom points exist along the line\n\t */\n\tisSmartRoutingApplicable(): boolean {\n\t\tconst { diagramEngine, link } = this.props;\n\n\t\tif (!diagramEngine.isSmartRoutingEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.points.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.sourcePort === null || link.targetPort === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\trender() {\n\t\tconst { diagramEngine } = this.props;\n\t\tif (!diagramEngine.nodesRendered) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.points;\n\t\tvar paths = [];\n\n\t\tif (this.isSmartRoutingApplicable()) {\n\t\t\t// first step: calculate a direct path between the points being linked\n\t\t\tconst directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n\n\t\t\tconst routingMatrix = diagramEngine.getRoutingMatrix();\n\t\t\t// now we need to extract, from the routing matrix, the very first walkable points\n\t\t\t// so they can be used as origin and destination of the link to be created\n\t\t\tconst smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n\n\t\t\tif (smartLink) {\n\t\t\t\tconst { start, end, pathToStart, pathToEnd } = smartLink;\n\n\t\t\t\t// second step: calculate a path avoiding hitting other elements\n\t\t\t\tconst simplifiedPath = this.pathFinding.calculateDynamicPath(\n\t\t\t\t\troutingMatrix,\n\t\t\t\t\tstart,\n\t\t\t\t\tend,\n\t\t\t\t\tpathToStart,\n\t\t\t\t\tpathToEnd\n\t\t\t\t);\n\n\t\t\t\tpaths.push(\n\t\t\t\t\t//smooth: boolean, extraProps: any, id: string | number, firstPoint: PointModel, lastPoint: PointModel\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateDynamicPath(simplifiedPath),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// true when smart routing was skipped or not enabled.\n\t\t// See @link{#isSmartRoutingApplicable()}.\n\t\tif (paths.length === 0) {\n\t\t\tif (points.length === 2) {\n\t\t\t\tvar isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n\t\t\t\tvar xOrY = isHorizontal ? \"x\" : \"y\";\n\n\t\t\t\t//draw the smoothing\n\t\t\t\t//if the points are too close, just draw a straight line\n\t\t\t\tvar margin = 50;\n\t\t\t\tif (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n\t\t\t\t\tmargin = 5;\n\t\t\t\t}\n\n\t\t\t\tvar pointLeft = points[0];\n\t\t\t\tvar pointRight = points[1];\n\n\t\t\t\t//some defensive programming to make sure the smoothing is\n\t\t\t\t//always in the right direction\n\t\t\t\tif (pointLeft[xOrY] > pointRight[xOrY]) {\n\t\t\t\t\tpointLeft = points[1];\n\t\t\t\t\tpointRight = points[0];\n\t\t\t\t}\n\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// draw the link as dangeling\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//draw the multiple anchors and complex line instead\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tpaths.push(\n\t\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\t\tToolkit.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"data-linkid\": this.props.link.id,\n\t\t\t\t\t\t\t\t\"data-point\": j,\n\t\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tj\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t//render the circles\n\t\t\t\tfor (var i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(i));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points.length - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.refPaths = [];\n\t\treturn (\n\t\t\t<g {...this.getProps()}>\n\t\t\t\t{paths}\n\t\t\t\t{_.map(this.props.link.labels, labelModel => {\n\t\t\t\t\treturn this.generateLabel(labelModel);\n\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import { DefaultPortModel } from \"./DefaultPortModel\";\nimport * as _ from \"lodash\";\n\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeModel extends NodeModel {\n\tname: string;\n\tcolor: string;\n\tports: { [s: string]: DefaultPortModel };\n\n\tconstructor(name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(\"default\");\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n\n\taddInPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(true, Toolkit.UID(), label));\n\t}\n\n\taddOutPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(false, Toolkit.UID(), label));\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLabelWidgetProps extends BaseWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nexport class DefaultLabelWidget extends BaseWidget<DefaultLabelWidgetProps> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-label\", props);\n\t}\n\n\trender() {\n\t\treturn <div {...this.getProps()}>{this.props.model.label}</div>;\n\t}\n}\n","import { LabelModel } from \"../models/LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLabelFactory<T extends LabelModel = LabelModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLabelFactory } from \"../../factories/AbstractLabelFactory\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { DefaultLabelWidget } from \"../widgets/DefaultLabelWidget\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractLabelFactory<DefaultLabelModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, label: DefaultLabelModel): JSX.Element {\n\t\treturn <DefaultLabelWidget model={label} />;\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","import { PortModel } from \"../models/PortModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractPortFactory<T extends PortModel = PortModel> extends AbstractFactory<T> {}\n","import { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { AbstractPortFactory } from \"../../factories/AbstractPortFactory\";\n\nexport class DefaultPortFactory extends AbstractPortFactory<DefaultPortModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultPortModel {\n\t\treturn new DefaultPortModel(true, \"unknown\");\n\t}\n}\n","import { BaseListener, BaseEntity, BaseEvent, BaseEntityType } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"./LinkModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { PortModel } from \"./PortModel\";\nimport { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PointModel } from \"./PointModel\";\n/**\n * @author Dylan Vorster\n *\n */\nexport interface DiagramListener extends BaseListener {\n\tnodesUpdated?(event: BaseEvent & { node: NodeModel; isCreated: boolean }): void;\n\n\tlinksUpdated?(event: BaseEvent & { link: LinkModel; isCreated: boolean }): void;\n\n\toffsetUpdated?(event: BaseEvent<DiagramModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEvent<DiagramModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEvent<DiagramModel> & { size: number }): void;\n}\n\n/**\n *\n */\nexport class DiagramModel extends BaseEntity<DiagramListener> {\n\t//models\n\tlinks: { [s: string]: LinkModel };\n\tnodes: { [s: string]: NodeModel };\n\n\t//control variables\n\toffsetX: number;\n\toffsetY: number;\n\tzoom: number;\n\trendered: boolean;\n\tgridSize: number;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.links = {};\n\t\tthis.nodes = {};\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.zoom = 100;\n\t\tthis.rendered = false;\n\t\tthis.gridSize = 0;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.gridSize = size;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.gridUpdated) {\n\t\t\t\tlistener.gridUpdated({ ...event, size: size });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetGridPosition(pos) {\n\t\tif (this.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n\t}\n\n\tdeSerializeDiagram(object: any, diagramEngine: DiagramEngine) {\n\t\tthis.deSerialize(object, diagramEngine);\n\n\t\tthis.offsetX = object.offsetX;\n\t\tthis.offsetY = object.offsetY;\n\t\tthis.zoom = object.zoom;\n\t\tthis.gridSize = object.gridSize;\n\n\t\t// deserialize nodes\n\t\t_.forEach(object.nodes, (node: any) => {\n\t\t\tlet nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n\t\t\tnodeOb.setParent(this);\n\t\t\tnodeOb.deSerialize(node, diagramEngine);\n\t\t\tthis.addNode(nodeOb);\n\t\t});\n\n\t\t// deserialze links\n\t\t_.forEach(object.links, (link: any) => {\n\t\t\tlet linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n\t\t\tlinkOb.setParent(this);\n\t\t\tlinkOb.deSerialize(link, diagramEngine);\n\t\t\tthis.addLink(linkOb);\n\t\t});\n\t}\n\n\tserializeDiagram() {\n\t\treturn _.merge(this.serialize(), {\n\t\t\toffsetX: this.offsetX,\n\t\t\toffsetY: this.offsetY,\n\t\t\tzoom: this.zoom,\n\t\t\tgridSize: this.gridSize,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.serialize();\n\t\t\t}),\n\t\t\tnodes: _.map(this.nodes, node => {\n\t\t\t\treturn node.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tclearSelection(ignore: BaseModel<BaseEntity, BaseModelListener> | null = null) {\n\t\t_.forEach(this.getSelectedItems(), element => {\n\t\t\tif (ignore && ignore.getID() === element.getID()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telement.setSelected(false); //TODO dont fire the listener\n\t\t});\n\t}\n\n\tgetSelectedItems(...filters: BaseEntityType[]): BaseModel<BaseEntity, BaseModelListener>[] {\n\t\tif (!Array.isArray(filters)) {\n\t\t\tfilters = [filters];\n\t\t}\n\t\tvar items = [];\n\n\t\t// run through nodes\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.nodes, node => {\n\t\t\t\treturn node.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t// find all the links\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn link.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t//find all points\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn _.flatMap(link.points, point => {\n\t\t\t\t\treturn point.getSelectedEntities();\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\titems = _.uniq(items);\n\n\t\tif (filters.length > 0) {\n\t\t\titems = _.filter(_.uniq(items), (item: BaseModel<any>) => {\n\t\t\t\tif (_.includes(filters, \"node\") && item instanceof NodeModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"link\") && item instanceof LinkModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"port\") && item instanceof PortModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"point\") && item instanceof PointModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.zoom = zoom;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.zoomUpdated) {\n\t\t\t\tlistener.zoomUpdated({ ...event, zoom: zoom });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\tsetOffsetY(offsetY: number) {\n\t\tthis.offsetY = offsetY;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: this.offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.zoom;\n\t}\n\n\tgetNode(node: string | NodeModel): NodeModel | null {\n\t\tif (node instanceof NodeModel) {\n\t\t\treturn node;\n\t\t}\n\t\tif (!this.nodes[node]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.nodes[node];\n\t}\n\n\tgetLink(link: string | LinkModel): LinkModel | null {\n\t\tif (link instanceof LinkModel) {\n\t\t\treturn link;\n\t\t}\n\t\tif (!this.links[link]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.links[link];\n\t}\n\n\taddAll(...models: BaseModel[]): BaseModel[] {\n\t\t_.forEach(models, model => {\n\t\t\tif (model instanceof LinkModel) {\n\t\t\t\tthis.addLink(model);\n\t\t\t} else if (model instanceof NodeModel) {\n\t\t\t\tthis.addNode(model);\n\t\t\t}\n\t\t});\n\t\treturn models;\n\t}\n\n\taddLink(link: LinkModel): LinkModel {\n\t\tlink.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeLink(link);\n\t\t\t}\n\t\t});\n\t\tthis.links[link.getID()] = link;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn link;\n\t}\n\n\taddNode(node: NodeModel): NodeModel {\n\t\tnode.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeNode(node);\n\t\t\t}\n\t\t});\n\t\tthis.nodes[node.getID()] = node;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tremoveLink(link: LinkModel | string) {\n\t\tlink = this.getLink(link);\n\t\tdelete this.links[link.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link as LinkModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tremoveNode(node: NodeModel | string) {\n\t\tnode = this.getNode(node);\n\t\tdelete this.nodes[node.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node as NodeModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetLinks(): { [s: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tgetNodes(): { [s: string]: NodeModel } {\n\t\treturn this.nodes;\n\t}\n}\n","/**\n * @author Dylan Vorster\n */\n\nexport * from \"./Toolkit\";\nexport * from \"./BaseEntity\";\nexport * from \"./DiagramEngine\";\n\nexport * from \"./defaults/models/DefaultNodeModel\";\nexport * from \"./defaults/models/DefaultPortModel\";\nexport * from \"./defaults/models/DefaultLinkModel\";\nexport * from \"./defaults/models/DefaultLabelModel\";\n\nexport * from \"./defaults/factories/DefaultLinkFactory\";\nexport * from \"./defaults/factories/DefaultNodeFactory\";\nexport * from \"./defaults/factories/DefaultPortFactory\";\nexport * from \"./defaults/factories/DefaultLabelFactory\";\n\nexport * from \"./defaults/widgets/DefaultLinkWidget\";\nexport * from \"./defaults/widgets/DefaultLabelWidget\";\nexport * from \"./defaults/widgets/DefaultNodeWidget\";\nexport * from \"./defaults/widgets/DefaultPortLabelWidget\";\n\nexport * from \"./factories/AbstractFactory\";\nexport * from \"./factories/AbstractLabelFactory\";\nexport * from \"./factories/AbstractLinkFactory\";\nexport * from \"./factories/AbstractNodeFactory\";\nexport * from \"./factories/AbstractPortFactory\";\n\nexport * from \"./routing/PathFinding\";\n\nexport * from \"./actions/BaseAction\";\nexport * from \"./actions/MoveCanvasAction\";\nexport * from \"./actions/MoveItemsAction\";\nexport * from \"./actions/SelectingAction\";\n\nexport * from \"./models/SelectionModel\";\nexport * from \"./models/BaseModel\";\nexport * from \"./models/DiagramModel\";\nexport * from \"./models/LinkModel\";\nexport * from \"./models/NodeModel\";\nexport * from \"./models/PointModel\";\nexport * from \"./models/PortModel\";\nexport * from \"./models/LabelModel\";\n\nexport * from \"./widgets/DiagramWidget\";\nexport * from \"./widgets/LinkWidget\";\nexport * from \"./widgets/NodeWidget\";\nexport * from \"./widgets/PortWidget\";\nexport * from \"./widgets/BaseWidget\";\n\nexport * from \"./widgets/layers/LinkLayerWidget\";\nexport * from \"./widgets/layers/NodeLayerWidget\";\n","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { LinkLayerWidget } from \"./layers/LinkLayerWidget\";\nimport { NodeLayerWidget } from \"./layers/NodeLayerWidget\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseAction } from \"../actions/BaseAction\";\nimport { MoveCanvasAction } from \"../actions/MoveCanvasAction\";\nimport { MoveItemsAction } from \"../actions/MoveItemsAction\";\nimport { SelectingAction } from \"../actions/SelectingAction\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { PortModel } from \"../models/PortModel\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { BaseModel, BaseModelListener } from \"../models/BaseModel\";\nimport { BaseEntity } from \"../BaseEntity\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface DiagramProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\n\tallowLooseLinks?: boolean;\n\tallowCanvasTranslation?: boolean;\n\tallowCanvasZoom?: boolean;\n\tinverseZoom?: boolean;\n\tmaxNumberPointsPerLink?: number;\n\tsmartRouting?: boolean;\n\n\tactionStartedFiring?: (action: BaseAction) => boolean;\n\tactionStillFiring?: (action: BaseAction) => void;\n\tactionStoppedFiring?: (action: BaseAction) => void;\n\n\tdeleteKeys?: number[];\n}\n\nexport interface DiagramState {\n\taction: BaseAction | null;\n\twasMoved: boolean;\n\trenderedNodes: boolean;\n\twindowListener: any;\n\tdiagramEngineListener: any;\n\tdocument: any;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class DiagramWidget extends BaseWidget<DiagramProps, DiagramState> {\n\tpublic static defaultProps: DiagramProps = {\n\t\tdiagramEngine: null,\n\t\tallowLooseLinks: true,\n\t\tallowCanvasTranslation: true,\n\t\tallowCanvasZoom: true,\n\t\tinverseZoom: false,\n\t\tmaxNumberPointsPerLink: Infinity, // backwards compatible default\n\t\tsmartRouting: false,\n\t\tdeleteKeys: [46, 8]\n\t};\n\n\tonKeyUpPointer: (this: Window, ev: KeyboardEvent) => void = null;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(\"srd-diagram\", props);\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\twasMoved: false,\n\t\t\trenderedNodes: false,\n\t\t\twindowListener: null,\n\t\t\tdiagramEngineListener: null,\n\t\t\tdocument: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\tthis.props.diagramEngine.setCanvas(null);\n\t\twindow.removeEventListener(\"keyup\", this.onKeyUpPointer);\n\t\twindow.removeEventListener(\"mouseUp\", this.onMouseUp);\n\t\twindow.removeEventListener(\"mouseMove\", this.onMouseMove);\n\t}\n\n\tcomponentWillReceiveProps(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine !== nextProps.diagramEngine) {\n\t\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\t\tconst diagramEngineListener = nextProps.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => this.forceUpdate()\n\t\t\t});\n\t\t\tthis.setState({ diagramEngineListener });\n\t\t}\n\t}\n\n\tcomponentWillUpdate(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t\tif (!nextProps.diagramEngine.diagramModel.rendered) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.state.renderedNodes) {\n\t\t\tthis.setState({\n\t\t\t\trenderedNodes: true\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onKeyUpPointer = this.onKeyUp.bind(this);\n\n\t\t//add a keyboard listener\n\t\tthis.setState({\n\t\t\tdocument: document,\n\t\t\trenderedNodes: true,\n\t\t\tdiagramEngineListener: this.props.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\twindow.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n\n\t\t// dont focus the window when in test mode - jsdom fails\n\t\tif (process.env.NODE_ENV !== \"test\") {\n\t\t\twindow.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Gets a model and element under the mouse cursor\n\t */\n\tgetMouseElement(event): { model: BaseModel<BaseEntity, BaseModelListener>; element: Element } {\n\t\tvar target = event.target as Element;\n\t\tvar diagramModel = this.props.diagramEngine.diagramModel;\n\n\t\t//is it a port\n\t\tvar element = Toolkit.closest(target, \".port[data-name]\");\n\t\tif (element) {\n\t\t\tvar nodeElement = Toolkit.closest(target, \".node[data-nodeid]\") as HTMLElement;\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getNode(nodeElement.getAttribute(\"data-nodeid\"))\n\t\t\t\t\t.getPort(element.getAttribute(\"data-name\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a point\n\t\telement = Toolkit.closest(target, \".point[data-id]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getLink(element.getAttribute(\"data-linkid\"))\n\t\t\t\t\t.getPointModel(element.getAttribute(\"data-id\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a link\n\t\telement = Toolkit.closest(target, \"[data-linkid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a node\n\t\telement = Toolkit.closest(target, \".node[data-nodeid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfireAction() {\n\t\tif (this.state.action && this.props.actionStillFiring) {\n\t\t\tthis.props.actionStillFiring(this.state.action);\n\t\t}\n\t}\n\n\tstopFiringAction(shouldSkipEvent?: boolean) {\n\t\tif (this.props.actionStoppedFiring && !shouldSkipEvent) {\n\t\t\tthis.props.actionStoppedFiring(this.state.action);\n\t\t}\n\t\tthis.setState({ action: null });\n\t}\n\n\tstartFiringAction(action: BaseAction) {\n\t\tvar setState = true;\n\t\tif (this.props.actionStartedFiring) {\n\t\t\tsetState = this.props.actionStartedFiring(action);\n\t\t}\n\t\tif (setState) {\n\t\t\tthis.setState({ action: action });\n\t\t}\n\t}\n\n\tonMouseMove(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\t\t//select items so draw a bounding box\n\t\tif (this.state.action instanceof SelectingAction) {\n\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n\t\t\t_.forEach(diagramModel.getNodes(), node => {\n\t\t\t\tif ((this.state.action as SelectingAction).containsElement(node.x, node.y, diagramModel)) {\n\t\t\t\t\tnode.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_.forEach(diagramModel.getLinks(), link => {\n\t\t\t\tvar allSelected = true;\n\t\t\t\t_.forEach(link.points, point => {\n\t\t\t\t\tif ((this.state.action as SelectingAction).containsElement(point.x, point.y, diagramModel)) {\n\t\t\t\t\t\tpoint.setSelected(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (allSelected) {\n\t\t\t\t\tlink.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.state.action.mouseX2 = relative.x;\n\t\t\tthis.state.action.mouseY2 = relative.y;\n\n\t\t\tthis.fireAction();\n\t\t\tthis.setState({ action: this.state.action });\n\t\t\treturn;\n\t\t} else if (this.state.action instanceof MoveItemsAction) {\n\t\t\tlet amountX = event.clientX - this.state.action.mouseX;\n\t\t\tlet amountY = event.clientY - this.state.action.mouseY;\n\t\t\tlet amountZoom = diagramModel.getZoomLevel() / 100;\n\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t// in this case we need to also work out the relative grid position\n\t\t\t\tif (\n\t\t\t\t\tmodel.model instanceof NodeModel ||\n\t\t\t\t\t(model.model instanceof PointModel && !model.model.isConnectedToPort())\n\t\t\t\t) {\n\t\t\t\t\tmodel.model.x = diagramModel.getGridPosition(model.initialX + amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = diagramModel.getGridPosition(model.initialY + amountY / amountZoom);\n\n\t\t\t\t\t// update port coordinates as well\n\t\t\t\t\tif (model.model instanceof NodeModel) {\n\t\t\t\t\t\t_.forEach(model.model.getPorts(), port => {\n\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(port);\n\t\t\t\t\t\t\tport.updateCoords(portCoords);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\t\t\tdiagramEngine.calculateRoutingMatrix();\n\t\t\t\t\t}\n\t\t\t\t} else if (model.model instanceof PointModel) {\n\t\t\t\t\t// we want points that are connected to ports, to not necessarily snap to grid\n\t\t\t\t\t// this stuff needs to be pixel perfect, dont touch it\n\t\t\t\t\tmodel.model.x = model.initialX + diagramModel.getGridPosition(amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = model.initialY + diagramModel.getGridPosition(amountY / amountZoom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\tdiagramEngine.calculateCanvasMatrix();\n\t\t\t}\n\n\t\t\tthis.fireAction();\n\t\t\tif (!this.state.wasMoved) {\n\t\t\t\tthis.setState({ wasMoved: true });\n\t\t\t} else {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t} else if (this.state.action instanceof MoveCanvasAction) {\n\t\t\t//translate the actual canvas\n\t\t\tif (this.props.allowCanvasTranslation) {\n\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\tthis.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX),\n\t\t\t\t\tthis.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY)\n\t\t\t\t);\n\t\t\t\tthis.fireAction();\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t}\n\t}\n\n\tonKeyUp(event) {\n\t\t//delete all selected\n\t\tif (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n\t\t\t_.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), element => {\n\t\t\t\t//only delete items which are not locked\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(element)) {\n\t\t\t\t\telement.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tonMouseUp(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\t//are we going to connect a link to something?\n\t\tif (this.state.action instanceof MoveItemsAction) {\n\t\t\tvar element = this.getMouseElement(event);\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (element && element.model instanceof PortModel && !diagramEngine.isModelLocked(element.model)) {\n\t\t\t\t\tlet link = model.model.getLink();\n\t\t\t\t\tif (link.getTargetPort() !== null) {\n\t\t\t\t\t\t//if this was a valid link already and we are adding a node in the middle, create 2 links from the original\n\t\t\t\t\t\tif (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n\t\t\t\t\t\t\tconst targetPort = link.getTargetPort();\n\t\t\t\t\t\t\tlet newLink = link.clone({});\n\t\t\t\t\t\t\tnewLink.setSourcePort(element.model);\n\t\t\t\t\t\t\tnewLink.setTargetPort(targetPort);\n\t\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t\t\ttargetPort.removeLink(link);\n\t\t\t\t\t\t\tnewLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t\tdiagramEngine.getDiagramModel().addLink(newLink);\n\t\t\t\t\t\t\t//if we are connecting to the same target or source, remove tweener points\n\t\t\t\t\t\t} else if (link.getTargetPort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t} else if (link.getSourcePort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsBefore(model.model);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//check for / remove any loose links in any models which have been moved\n\t\t\tif (!this.props.allowLooseLinks && this.state.wasMoved) {\n\t\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t\t//only care about points connecting to things\n\t\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet selectedPoint: PointModel = model.model;\n\t\t\t\t\tlet link: LinkModel = selectedPoint.getLink();\n\t\t\t\t\tif (link.getSourcePort() === null || link.getTargetPort() === null) {\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//remove any invalid links\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet link: LinkModel = model.model.getLink();\n\t\t\t\tlet sourcePort: PortModel = link.getSourcePort();\n\t\t\t\tlet targetPort: PortModel = link.getTargetPort();\n\t\t\t\tif (sourcePort !== null && targetPort !== null) {\n\t\t\t\t\tif (!sourcePort.canLinkToPort(targetPort)) {\n\t\t\t\t\t\t//link not allowed\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t_.some(\n\t\t\t\t\t\t\t_.values(targetPort.getLinks()),\n\t\t\t\t\t\t\t(l: LinkModel) =>\n\t\t\t\t\t\t\t\tl !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t//link is a duplicate\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction(!this.state.wasMoved);\n\t\t} else {\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction();\n\t\t}\n\t\tthis.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n\t\tthis.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n\t}\n\n\tdrawSelectionBox() {\n\t\tlet dimensions = (this.state.action as SelectingAction).getBoxDimensions();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={this.bem(\"__selector\")}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: dimensions.top,\n\t\t\t\t\tleft: dimensions.left,\n\t\t\t\t\twidth: dimensions.width,\n\t\t\t\t\theight: dimensions.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tdiagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n\t\tdiagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tref={ref => {\n\t\t\t\t\tif (ref) {\n\t\t\t\t\t\tthis.props.diagramEngine.setCanvas(ref);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={event => {\n\t\t\t\t\tif (this.props.allowCanvasZoom) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tconst oldZoomFactor = diagramModel.getZoomLevel() / 100;\n\t\t\t\t\t\tlet scrollDelta = this.props.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\t\t//check if it is pinch gesture\n\t\t\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t\t\t/*Chrome and Firefox sends wheel event with deltaY that\n                have fractional part, also `ctrlKey` prop of the event is true\n                though ctrl isn't pressed\n              */\n\t\t\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (diagramModel.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\t\tdiagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst zoomFactor = diagramModel.getZoomLevel() / 100;\n\n\t\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\t\tconst xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\t\tconst yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\t\t\tdiagramModel.getOffsetX() - widthDiff * xFactor,\n\t\t\t\t\t\t\tdiagramModel.getOffsetY() - heightDiff * yFactor\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdiagramEngine.enableRepaintEntities([]);\n\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseDown={event => {\n\t\t\t\t\tthis.setState({ ...this.state, wasMoved: false });\n\n\t\t\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\t\t\tvar model = this.getMouseElement(event);\n\t\t\t\t\t//the canvas was selected\n\t\t\t\t\tif (model === null) {\n\t\t\t\t\t\t//is it a multiple selection\n\t\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\t\t\t\t\t\t\tthis.startFiringAction(new SelectingAction(relative.x, relative.y));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//its a drag the canvas event\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\tthis.startFiringAction(new MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (model.model instanceof PortModel) {\n\t\t\t\t\t\t//its a port element, we want to drag a link\n\t\t\t\t\t\tif (!this.props.diagramEngine.isModelLocked(model.model)) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativeMousePoint(event);\n\t\t\t\t\t\t\tvar sourcePort = model.model;\n\t\t\t\t\t\t\tvar link = sourcePort.createLinkModel();\n\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\n\t\t\t\t\t\t\tif (link) {\n\t\t\t\t\t\t\t\tlink.removeMiddlePoints();\n\t\t\t\t\t\t\t\tif (link.getSourcePort() !== sourcePort) {\n\t\t\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlink.setTargetPort(null);\n\n\t\t\t\t\t\t\t\tlink.getFirstPoint().updateLocation(relative);\n\t\t\t\t\t\t\t\tlink.getLastPoint().updateLocation(relative);\n\n\t\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\t\tlink.getLastPoint().setSelected(true);\n\t\t\t\t\t\t\t\tdiagramModel.addLink(link);\n\n\t\t\t\t\t\t\t\tthis.startFiringAction(\n\t\t\t\t\t\t\t\t\tnew MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//its some or other element, probably want to move it\n\t\t\t\t\t\tif (!event.shiftKey && !model.model.isSelected()) {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodel.model.setSelected(true);\n\n\t\t\t\t\t\tthis.startFiringAction(new MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n\t\t\t\t\t}\n\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.state.renderedNodes && (\n\t\t\t\t\t<LinkLayerWidget\n\t\t\t\t\t\tdiagramEngine={diagramEngine}\n\t\t\t\t\t\tpointAdded={(point: PointModel, event) => {\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tdiagramModel.clearSelection(point);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\taction: new MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<NodeLayerWidget diagramEngine={diagramEngine} />\n\t\t\t\t{this.state.action instanceof SelectingAction && this.drawSelectionBox()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport * as React from \"react\";\nimport { DefaultNodeWidget } from \"../widgets/DefaultNodeWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractNodeFactory } from \"../../factories/AbstractNodeFactory\";\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeFactory extends AbstractNodeFactory<DefaultNodeModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, node: DefaultNodeModel): JSX.Element {\n\t\treturn React.createElement(DefaultNodeWidget, {\n\t\t\tnode: node,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import * as React from \"react\";\nimport { DefaultLinkWidget } from \"../widgets/DefaultLinkWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLinkFactory } from \"../../factories/AbstractLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLinkFactory extends AbstractLinkFactory<DefaultLinkModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, link: DefaultLinkModel): JSX.Element {\n\t\treturn React.createElement(DefaultLinkWidget, {\n\t\t\tlink: link,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLinkModel {\n\t\treturn new DefaultLinkModel();\n\t}\n\n\tgenerateLinkSegment(model: DefaultLinkModel, widget: DefaultLinkWidget, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<path\n\t\t\t\tclassName={selected ? widget.bem(\"--path-selected\") : \"\"}\n\t\t\t\tstrokeWidth={model.width}\n\t\t\t\tstroke={model.color}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { BaseEntity, BaseListener } from \"./BaseEntity\";\nimport { DiagramModel } from \"./models/DiagramModel\";\nimport * as _ from \"lodash\";\nimport { BaseModel, BaseModelListener } from \"./models/BaseModel\";\nimport { NodeModel } from \"./models/NodeModel\";\nimport { PointModel } from \"./models/PointModel\";\nimport { PortModel } from \"./models/PortModel\";\nimport { LinkModel } from \"./models/LinkModel\";\nimport { AbstractLabelFactory } from \"./factories/AbstractLabelFactory\";\nimport { AbstractLinkFactory } from \"./factories/AbstractLinkFactory\";\nimport { AbstractNodeFactory } from \"./factories/AbstractNodeFactory\";\nimport { AbstractPortFactory } from \"./factories/AbstractPortFactory\";\nimport { DefaultLinkFactory, DefaultNodeFactory } from \"./main\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport { DefaultPortFactory } from \"./defaults/factories/DefaultPortFactory\";\nimport { LabelModel } from \"./models/LabelModel\";\nimport { DefaultLabelFactory } from \"./defaults/factories/DefaultLabelFactory\";\nimport { Toolkit } from \"./Toolkit\";\n/**\n * @author Dylan Vorster\n */\nexport interface DiagramEngineListener extends BaseListener {\n\tportFactoriesUpdated?(): void;\n\n\tnodeFactoriesUpdated?(): void;\n\n\tlinkFactoriesUpdated?(): void;\n\n\tlabelFactoriesUpdated?(): void;\n\n\trepaintCanvas?(): void;\n}\n\n/**\n * Passed as a parameter to the DiagramWidget\n */\nexport class DiagramEngine extends BaseEntity<DiagramEngineListener> {\n\tnodeFactories: { [s: string]: AbstractNodeFactory };\n\tlinkFactories: { [s: string]: AbstractLinkFactory };\n\tportFactories: { [s: string]: AbstractPortFactory };\n\tlabelFactories: { [s: string]: AbstractLabelFactory };\n\n\tdiagramModel: DiagramModel;\n\tcanvas: Element;\n\tpaintableWidgets: {};\n\tlinksThatHaveInitiallyRendered: {};\n\tnodesRendered: boolean;\n\tmaxNumberPointsPerLink: number;\n\tsmartRouting: boolean;\n\n\t// calculated only when smart routing is active\n\tcanvasMatrix: number[][] = [];\n\troutingMatrix: number[][] = [];\n\t// used when at least one element has negative coordinates\n\thAdjustmentFactor: number = 0;\n\tvAdjustmentFactor: number = 0;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.diagramModel = new DiagramModel();\n\t\tthis.nodeFactories = {};\n\t\tthis.linkFactories = {};\n\t\tthis.portFactories = {};\n\t\tthis.labelFactories = {};\n\t\tthis.canvas = null;\n\t\tthis.paintableWidgets = null;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID = 0;\n\n\t\t\t//pop it onto the window so our E2E helpers can find it\n\t\t\tif (window) {\n\t\t\t\t(window as any)[\"diagram_instance\"] = this;\n\t\t\t}\n\t\t}\n\t}\n\n\tinstallDefaultFactories() {\n\t\tthis.registerNodeFactory(new DefaultNodeFactory());\n\t\tthis.registerLinkFactory(new DefaultLinkFactory());\n\t\tthis.registerPortFactory(new DefaultPortFactory());\n\t\tthis.registerLabelFactory(new DefaultLabelFactory());\n\t}\n\n\trepaintCanvas() {\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.repaintCanvas) {\n\t\t\t\tlistener.repaintCanvas();\n\t\t\t}\n\t\t});\n\t}\n\n\tclearRepaintEntities() {\n\t\tthis.paintableWidgets = null;\n\t}\n\n\tenableRepaintEntities(entities: BaseModel<BaseEntity, BaseModelListener>[]) {\n\t\tthis.paintableWidgets = {};\n\t\tentities.forEach(entity => {\n\t\t\t//if a node is requested to repaint, add all of its links\n\t\t\tif (entity instanceof NodeModel) {\n\t\t\t\t_.forEach(entity.getPorts(), port => {\n\t\t\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\t\t\tthis.paintableWidgets[link.getID()] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (entity instanceof PointModel) {\n\t\t\t\tthis.paintableWidgets[entity.getLink().getID()] = true;\n\t\t\t}\n\n\t\t\tthis.paintableWidgets[entity.getID()] = true;\n\t\t});\n\t}\n\n\t/**\n\t * Checks to see if a model is locked by running through\n\t * its parents to see if they are locked first\n\t */\n\tisModelLocked(model: BaseEntity<BaseListener>) {\n\t\t//always check the diagram model\n\t\tif (this.diagramModel.isLocked()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn model.isLocked();\n\t}\n\n\trecalculatePortsVisually() {\n\t\tthis.nodesRendered = false;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\t}\n\n\tcanEntityRepaint(baseModel: BaseModel<BaseEntity, BaseModelListener>) {\n\t\t//no rules applied, allow repaint\n\t\tif (this.paintableWidgets === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.paintableWidgets[baseModel.getID()] !== undefined;\n\t}\n\n\tsetCanvas(canvas: Element | null) {\n\t\tthis.canvas = canvas;\n\t}\n\n\tsetDiagramModel(model: DiagramModel) {\n\t\tthis.diagramModel = model;\n\t\tthis.recalculatePortsVisually();\n\t}\n\n\tgetDiagramModel(): DiagramModel {\n\t\treturn this.diagramModel;\n\t}\n\n\t//!-------------- FACTORIES ------------\n\n\tgetNodeFactories(): { [s: string]: AbstractNodeFactory } {\n\t\treturn this.nodeFactories;\n\t}\n\n\tgetLinkFactories(): { [s: string]: AbstractLinkFactory } {\n\t\treturn this.linkFactories;\n\t}\n\n\tgetLabelFactories(): { [s: string]: AbstractLabelFactory } {\n\t\treturn this.labelFactories;\n\t}\n\n\tregisterLabelFactory(factory: AbstractLabelFactory) {\n\t\tthis.labelFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.labelFactoriesUpdated) {\n\t\t\t\tlistener.labelFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterPortFactory(factory: AbstractPortFactory) {\n\t\tthis.portFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.portFactoriesUpdated) {\n\t\t\t\tlistener.portFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterNodeFactory(factory: AbstractNodeFactory) {\n\t\tthis.nodeFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.nodeFactoriesUpdated) {\n\t\t\t\tlistener.nodeFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterLinkFactory(factory: AbstractLinkFactory) {\n\t\tthis.linkFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.linkFactoriesUpdated) {\n\t\t\t\tlistener.linkFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPortFactory(type: string): AbstractPortFactory {\n\t\tif (this.portFactories[type]) {\n\t\t\treturn this.portFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for port of type: [${type}]`);\n\t}\n\n\tgetNodeFactory(type: string): AbstractNodeFactory {\n\t\tif (this.nodeFactories[type]) {\n\t\t\treturn this.nodeFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for node of type: [${type}]`);\n\t}\n\n\tgetLinkFactory(type: string): AbstractLinkFactory {\n\t\tif (this.linkFactories[type]) {\n\t\t\treturn this.linkFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for link of type: [${type}]`);\n\t}\n\n\tgetLabelFactory(type: string): AbstractLabelFactory {\n\t\tif (this.labelFactories[type]) {\n\t\t\treturn this.labelFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for label of type: [${type}]`);\n\t}\n\n\tgetFactoryForNode(node: NodeModel): AbstractNodeFactory | null {\n\t\treturn this.getNodeFactory(node.getType());\n\t}\n\n\tgetFactoryForLink(link: LinkModel): AbstractLinkFactory | null {\n\t\treturn this.getLinkFactory(link.getType());\n\t}\n\n\tgetFactoryForLabel(label: LabelModel): AbstractLabelFactory | null {\n\t\treturn this.getLabelFactory(label.getType());\n\t}\n\n\tgenerateWidgetForLink(link: LinkModel): JSX.Element | null {\n\t\tvar linkFactory = this.getFactoryForLink(link);\n\t\tif (!linkFactory) {\n\t\t\tthrow new Error(\"Cannot find link factory for link: \" + link.getType());\n\t\t}\n\t\treturn linkFactory.generateReactWidget(this, link);\n\t}\n\n\tgenerateWidgetForNode(node: NodeModel): JSX.Element | null {\n\t\tvar nodeFactory = this.getFactoryForNode(node);\n\t\tif (!nodeFactory) {\n\t\t\tthrow new Error(\"Cannot find widget factory for node: \" + node.getType());\n\t\t}\n\t\treturn nodeFactory.generateReactWidget(this, node);\n\t}\n\n\tgetRelativeMousePoint(event): { x: number; y: number } {\n\t\tvar point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn {\n\t\t\tx: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\tgetRelativePoint(x, y) {\n\t\tvar canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn { x: x - canvasRect.left, y: y - canvasRect.top };\n\t}\n\n\tgetNodeElement(node: NodeModel): Element {\n\t\tconst selector = this.canvas.querySelector(`.node[data-nodeid=\"${node.getID()}\"]`);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetNodePortElement(port: PortModel): any {\n\t\tvar selector = this.canvas.querySelector(\n\t\t\t`.port[data-name=\"${port.getName()}\"][data-nodeid=\"${port.getParent().getID()}\"]`\n\t\t);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot find Node Port element with nodeID: [\" +\n\t\t\t\t\tport.getParent().getID() +\n\t\t\t\t\t\"] and name: [\" +\n\t\t\t\t\tport.getName() +\n\t\t\t\t\t\"]\"\n\t\t\t);\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetPortCenter(port: PortModel) {\n\t\tvar sourceElement = this.getNodePortElement(port);\n\t\tvar sourceRect = sourceElement.getBoundingClientRect();\n\n\t\tvar rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\tsourceElement.offsetWidth / 2 +\n\t\t\t\t(rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty:\n\t\t\t\tsourceElement.offsetHeight / 2 +\n\t\t\t\t(rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\t/**\n\t * Calculate rectangular coordinates of the port passed in.\n\t */\n\tgetPortCoords(\n\t\tport: PortModel\n\t): {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t} {\n\t\tconst sourceElement = this.getNodePortElement(port);\n\t\tconst sourceRect = sourceElement.getBoundingClientRect();\n\t\tconst canvasRect = this.canvas.getBoundingClientRect() as ClientRect;\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\t(sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.left,\n\t\t\ty:\n\t\t\t\t(sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.top,\n\t\t\twidth: sourceRect.width,\n\t\t\theight: sourceRect.height\n\t\t};\n\t}\n\n\t/**\n\t * Determine the width and height of the node passed in.\n\t * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\n\t */\n\tgetNodeDimensions(node: NodeModel): { width: number; height: number } {\n\t\tif (!this.canvas) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t}\n\n\t\tconst nodeElement = this.getNodeElement(node);\n\t\tconst nodeRect = nodeElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\twidth: nodeRect.width,\n\t\t\theight: nodeRect.height\n\t\t};\n\t}\n\n\tgetMaxNumberPointsPerLink(): number {\n\t\treturn this.maxNumberPointsPerLink;\n\t}\n\n\tsetMaxNumberPointsPerLink(max: number) {\n\t\tthis.maxNumberPointsPerLink = max;\n\t}\n\n\tisSmartRoutingEnabled() {\n\t\treturn !!this.smartRouting;\n\t}\n\tsetSmartRoutingStatus(status: boolean) {\n\t\tthis.smartRouting = status;\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all walkable points are marked by zeros.\n\t * It uses @link{#ROUTING_SCALING_FACTOR} to reduce the matrix dimensions and improve performance.\n\t */\n\tgetCanvasMatrix(): number[][] {\n\t\tif (this.canvasMatrix.length === 0) {\n\t\t\tthis.calculateCanvasMatrix();\n\t\t}\n\n\t\treturn this.canvasMatrix;\n\t}\n\tcalculateCanvasMatrix() {\n\t\tconst {\n\t\t\twidth: canvasWidth,\n\t\t\thAdjustmentFactor,\n\t\t\theight: canvasHeight,\n\t\t\tvAdjustmentFactor\n\t\t} = this.calculateMatrixDimensions();\n\n\t\tthis.hAdjustmentFactor = hAdjustmentFactor;\n\t\tthis.vAdjustmentFactor = vAdjustmentFactor;\n\n\t\tconst matrixWidth = Math.ceil(canvasWidth / ROUTING_SCALING_FACTOR);\n\t\tconst matrixHeight = Math.ceil(canvasHeight / ROUTING_SCALING_FACTOR);\n\n\t\tthis.canvasMatrix = _.range(0, matrixHeight).map(() => {\n\t\t\treturn new Array(matrixWidth).fill(0);\n\t\t});\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 1 1 0 0 0 0 |\n\t * | 0 0 1 1 0 0 1 1 |\n\t * | 0 0 0 0 0 0 1 1 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all points blocked by a node (and its ports) are\n\t * marked as 1; points were there is nothing (ie, free) receive 0.\n\t */\n\tgetRoutingMatrix(): number[][] {\n\t\tif (this.routingMatrix.length === 0) {\n\t\t\tthis.calculateRoutingMatrix();\n\t\t}\n\n\t\treturn this.routingMatrix;\n\t}\n\tcalculateRoutingMatrix(): void {\n\t\tconst matrix = _.cloneDeep(this.getCanvasMatrix());\n\n\t\t// nodes need to be marked as blocked points\n\t\tthis.markNodes(matrix);\n\t\t// same thing for ports\n\t\tthis.markPorts(matrix);\n\n\t\tthis.routingMatrix = matrix;\n\t}\n\n\t/**\n\t * The routing matrix does not have negative indexes, but elements could be negatively positioned.\n\t * We use the functions below to translate back and forth between these coordinates, relying on the\n\t * calculated values of hAdjustmentFactor and vAdjustmentFactor.\n\t */\n\ttranslateRoutingX(x: number, reverse: boolean = false) {\n\t\treturn x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\ttranslateRoutingY(y: number, reverse: boolean = false) {\n\t\treturn y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\n\t/**\n\t * Despite being a long method, we simply iterate over all three collections (nodes, ports and points)\n\t * to find the highest X and Y dimensions, so we can build the matrix large enough to contain all elements.\n\t */\n\tcalculateMatrixDimensions = (): {\n\t\twidth: number;\n\t\thAdjustmentFactor: number;\n\t\theight: number;\n\t\tvAdjustmentFactor: number;\n\t} => {\n\t\tconst allNodesCoords = _.values(this.diagramModel.nodes).map(item => ({\n\t\t\tx: item.x,\n\t\t\twidth: item.width,\n\t\t\ty: item.y,\n\t\t\theight: item.height\n\t\t}));\n\n\t\tconst allLinks = _.values(this.diagramModel.links);\n\t\tconst allPortsCoords = _.flatMap(allLinks.map(link => [link.sourcePort, link.targetPort]))\n\t\t\t.filter(port => port !== null)\n\t\t\t.map(item => ({\n\t\t\t\tx: item.x,\n\t\t\t\twidth: item.width,\n\t\t\t\ty: item.y,\n\t\t\t\theight: item.height\n\t\t\t}));\n\t\tconst allPointsCoords = _.flatMap(allLinks.map(link => link.points)).map(item => ({\n\t\t\t// points don't have width/height, so let's just use 0\n\t\t\tx: item.x,\n\t\t\twidth: 0,\n\t\t\ty: item.y,\n\t\t\theight: 0\n\t\t}));\n\n\t\tconst canvas = this.canvas as HTMLDivElement;\n\t\tconst minX =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.x).x, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxXElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.x + item.width\n\t\t);\n\t\tconst maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n\n\t\tconst minY =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.y).y, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxYElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.y + item.height\n\t\t);\n\t\tconst maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n\n\t\treturn {\n\t\t\twidth: Math.ceil(Math.abs(minX) + maxX),\n\t\t\thAdjustmentFactor: Math.abs(minX) / ROUTING_SCALING_FACTOR + 1,\n\t\t\theight: Math.ceil(Math.abs(minY) + maxY),\n\t\t\tvAdjustmentFactor: Math.abs(minY) / ROUTING_SCALING_FACTOR + 1\n\t\t};\n\t};\n\n\t/**\n\t * Updates (by reference) where nodes will be drawn on the matrix passed in.\n\t */\n\tmarkNodes = (matrix: number[][]): void => {\n\t\t_.values(this.diagramModel.nodes).forEach(node => {\n\t\t\tconst startX = Math.floor(node.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((node.x + node.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(node.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((node.y + node.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Updates (by reference) where ports will be drawn on the matrix passed in.\n\t */\n\tmarkPorts = (matrix: number[][]): void => {\n\t\tconst allElements = _.flatMap(\n\t\t\t_.values(this.diagramModel.links).map(link => [].concat(link.sourcePort, link.targetPort))\n\t\t);\n\t\tallElements.filter(port => port !== null).forEach(port => {\n\t\t\tconst startX = Math.floor(port.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((port.x + port.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(port.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((port.y + port.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tmarkMatrixPoint = (matrix: number[][], x: number, y: number) => {\n\t\tif (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n\t\t\tmatrix[y][x] = 1;\n\t\t}\n\t};\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n\t\tthis.diagramModel.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nvar sq = function sq(x) {\n  return x * x;\n};\n\nvar distPointToPoint = function distPointToPoint(_ref, _ref3) {\n  var _ref2 = _slicedToArray(_ref, 2);\n\n  var ax = _ref2[0];\n  var ay = _ref2[1];\n\n  var _ref32 = _slicedToArray(_ref3, 2);\n\n  var bx = _ref32[0];\n  var by = _ref32[1];\n  return Math.sqrt(sq(ax - bx) + sq(ay - by));\n};\n\nvar distPointToParabol = function distPointToParabol(a, f) {\n  var p = distPointToPoint(a, f);\n\n  return p == 0 ? Infinity : sq(p) / (2 * Math.abs(a[1] - f[1]));\n};\n\nvar circumCenter = function circumCenter(a, b, c) {\n  var d = (a[0] - c[0]) * (b[1] - c[1]) - (b[0] - c[0]) * (a[1] - c[1]);\n\n  if (d == 0) return [Infinity, Infinity];\n\n  var xc = (((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[1] - c[1]) - ((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[1] - c[1])) / d;\n  var yc = (((b[0] - c[0]) * (b[0] + c[0]) + (b[1] - c[1]) * (b[1] + c[1])) / 2 * (a[0] - c[0]) - ((a[0] - c[0]) * (a[0] + c[0]) + (a[1] - c[1]) * (a[1] + c[1])) / 2 * (b[0] - c[0])) / d;\n  return [xc, yc];\n};\n\nvar parabolsCrossX = function parabolsCrossX(fa, fb, q) {\n  if (fa[1] === fb[1]) return [(fa[0] + fb[0]) / 2, (fa[0] + fb[0]) / 2];\n\n  var s1 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q + Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n  var s2 = (fa[1] * fb[0] - fa[0] * fb[1] + fa[0] * q - fb[0] * q - Math.sqrt((fa[0] * fa[0] + fa[1] * fa[1] - 2 * fa[0] * fb[0] + fb[0] * fb[0] - 2 * fa[1] * fb[1] + fb[1] * fb[1]) * (fa[1] * fb[1] - fa[1] * q - fb[1] * q + q * q))) / (fa[1] - fb[1]);\n\n  return s1 < s2 ? [s1, s2] : [s2, s1];\n};\n\nvar doHalflinesCross = function doHalflinesCross(sa, sb) {\n  var approx = arguments.length <= 2 || arguments[2] === undefined ? 1e-10 : arguments[2];\n  //sa, sb are Segment instance\n  var dx = sb.ps[0] - sa.ps[0];\n  var dy = sb.ps[1] - sa.ps[1];\n\n  if (sa.m == Infinity) return sa.hp * (sb.m * dx - dy) <= approx && sb.vec[0] * dx <= approx;\n  if (sb.m == Infinity) return sb.hp * (sa.m * dx - dy) >= -approx && sa.vec[0] * dx >= -approx;\n\n  var det = sb.vec[0] * sa.vec[1] - sb.vec[1] * sa.vec[0];\n\n  if (det === 0) return false;\n\n  var u = (dy * sb.vec[0] - dx * sb.vec[1]) / det;\n  var v = (dy * sa.vec[0] - dx * sa.vec[1]) / det;\n\n  return u >= -approx && v >= approx || u >= approx && v >= -approx;\n};\n\nvar matrixTransform = function matrixTransform(points, matrix) {\n  return points.map(function (point) {\n    return {\n      x: point.x * matrix[0] + point.y * matrix[2] + matrix[4],\n      y: point.x * matrix[1] + point.y * matrix[3] + matrix[5]\n    };\n  });\n};\n\nvar transformEllipse = function transformEllipse(rx, ry, ax, m) {\n  var torad = Math.PI / 180;\n  var epsilon = 0.0000000001;\n\n  var c = Math.cos(ax * torad),\n      s = Math.sin(ax * torad);\n  var ma = [rx * (m[0] * c + m[2] * s), rx * (m[1] * c + m[3] * s), ry * (-m[0] * s + m[2] * c), ry * (-m[1] * s + m[3] * c)];\n\n  var J = ma[0] * ma[0] + ma[2] * ma[2],\n      K = ma[1] * ma[1] + ma[3] * ma[3];\n\n  var D = ((ma[0] - ma[3]) * (ma[0] - ma[3]) + (ma[2] + ma[1]) * (ma[2] + ma[1])) * ((ma[0] + ma[3]) * (ma[0] + ma[3]) + (ma[2] - ma[1]) * (ma[2] - ma[1]));\n\n  var JK = (J + K) / 2;\n\n  if (D < epsilon * JK) {\n    return {\n      rx: Math.sqrt(JK),\n      ry: Math.sqrt(JK),\n      ax: 0,\n      isDegenerate: false\n    };\n  }\n\n  var L = ma[0] * ma[1] + ma[2] * ma[3];\n  D = Math.sqrt(D);\n\n  var l1 = JK + D / 2,\n      l2 = JK - D / 2;\n\n  var newAx = undefined,\n      newRx = undefined,\n      newRy = undefined;\n  newAx = Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon ? 90 : Math.atan(Math.abs(L) > Math.abs(l1 - K) ? (l1 - J) / L : L / (l1 - K)) * 180 / Math.PI;\n\n  if (newAx >= 0) {\n    newRx = Math.sqrt(l1);\n    newRy = Math.sqrt(l2);\n  } else {\n    newAx += 90;\n    newRx = Math.sqrt(l2);\n    newRy = Math.sqrt(l1);\n  }\n\n  return {\n    rx: newRx,\n    ry: newRy,\n    ax: newAx,\n    isDegenerate: newRx < epsilon * newRy || newRy < epsilon * newRx\n  };\n};\n\nexports[\"default\"] = { distPointToPoint: distPointToPoint, distPointToParabol: distPointToParabol, circumCenter: circumCenter,\n  parabolsCrossX: parabolsCrossX, doHalflinesCross: doHalflinesCross, matrixTransform: matrixTransform, transformEllipse: transformEllipse };\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _geom = require('./geom');\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, prev) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n      case 'L':\n        return [params[0], params[1]];\n      case 'H':\n        return [params[0], prev[1]];\n      case 'V':\n        return [prev[0], params[0]];\n      case 'Z':\n        return null;\n      case 'C':\n        return [params[4], params[5]];\n      case 'S':\n        return [params[2], params[3]];\n      case 'Q':\n        return [params[2], params[3]];\n      case 'T':\n        return [params[0], params[1]];\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var transformParams = function transformParams(instruction, matrix, prev) {\n    var p = instruction.params;\n\n    var transformer = {\n      'V': function V(instruction, matrix, prev) {\n        var pts = [{ x: prev[0], y: p[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].x === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }])[0].x) {\n          return {\n            command: 'V',\n            params: [newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'H': function H(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: prev[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        if (newPts[0].y === (0, _geom.matrixTransform)([{ x: prev[0], y: prev[1] }])[0].y) {\n          return {\n            command: 'H',\n            params: [newPts[0].x]\n          };\n        } else {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'A': function A(instruction, matrix, prev) {\n        // transform rx, ry, and x-axis rotation\n        var r = (0, _geom.transformEllipse)(p[0], p[1], p[2], matrix);\n\n        var sweepFlag = p[4];\n        if (matrix[0] * matrix[3] - matrix[1] * matrix[2] < 0) {\n          sweepFlag = sweepFlag ? '0' : '1';\n        }\n\n        // transform endpoint\n        var pts = [{ x: p[5], y: p[6] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n\n        if (r.isDegenerate) {\n          return {\n            command: 'L',\n            params: [newPts[0].x, newPts[0].y]\n          };\n        } else {\n          return {\n            command: 'A',\n            params: [r.rx, r.ry, r.ax, p[3], sweepFlag, newPts[0].x, newPts[0].y]\n          };\n        }\n      },\n      'C': function C(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }, { x: p[2], y: p[3] }, { x: p[4], y: p[5] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        return {\n          command: 'C',\n          params: [newPts[0].x, newPts[0].y, newPts[1].x, newPts[1].y, newPts[2].x, newPts[2].y]\n        };\n      },\n      'Z': function Z(instruction, matrix, prev) {\n        return {\n          command: 'Z',\n          params: []\n        };\n      },\n      'default': function _default(instruction, matrix, prev) {\n        var pts = [{ x: p[0], y: p[1] }];\n        var newPts = (0, _geom.matrixTransform)(pts, matrix);\n        var newParams = instruction.params.slice(0, instruction.params.length);\n        newParams.splice(0, 2, newPts[0].x, newPts[0].y);\n        return {\n          command: instruction.command,\n          params: newParams\n        };\n      }\n    };\n\n    if (transformer[instruction.command]) {\n      return transformer[instruction.command](instruction, matrix, prev);\n    } else {\n      return transformer['default'](instruction, matrix, prev);\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    translate: verbosify(['dx', 'dy'], function () {\n      var dx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n      var dy = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n      if (dx !== 0 || dx !== 0) {\n        var _ret = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, 0, 1, dx, dy];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret === 'object') return _ret.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    rotate: verbosify(['angle', 'rx', 'ry'], function (angle) {\n      var rx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n      var ry = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      if (angle !== 0) {\n        var _ret2 = (function () {\n          var prev = undefined;\n          var matrix = undefined;\n          var newInstructions = _instructions;\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, -rx, -ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          var rad = angle * Math.PI / 180;\n          var cos = Math.cos(rad);\n          var sin = Math.sin(rad);\n\n          prev = [0, 0];\n          matrix = [cos, sin, -sin, cos, 0, 0];\n          newInstructions = newInstructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n\n          if (rx !== 0 && ry !== 0) {\n            prev = [0, 0];\n            matrix = [1, 0, 0, 1, rx, ry];\n            newInstructions = newInstructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n          }\n\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret2 === 'object') return _ret2.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    scale: verbosify(['sx', 'sy'], function () {\n      var sx = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n      var sy = arguments.length <= 1 || arguments[1] === undefined ? sx : arguments[1];\n      return (function () {\n        if (sx !== 1 || sy !== 1) {\n          var _ret3 = (function () {\n            var prev = [0, 0];\n            var matrix = [sx, 0, 0, sy, 0, 0];\n            var newInstructions = _instructions.map(function (instruction) {\n              var p = transformParams(instruction, matrix, prev);\n              prev = point(instruction, prev);\n              return p;\n            });\n            return {\n              v: Path(newInstructions)\n            };\n          })();\n\n          if (typeof _ret3 === 'object') return _ret3.v;\n        } else {\n          return Path(_instructions);\n        }\n      })();\n    }),\n    shearX: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret4 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret4 === 'object') return _ret4.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    shearY: verbosify(['angle'], function () {\n      var angle = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n      if (angle !== 0) {\n        var _ret5 = (function () {\n          var prev = [0, 0];\n          var matrix = [1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0];\n          var newInstructions = _instructions.map(function (instruction) {\n            var p = transformParams(instruction, matrix, prev);\n            prev = point(instruction, prev);\n            return p;\n          });\n          return {\n            v: Path(newInstructions)\n          };\n        })();\n\n        if (typeof _ret5 === 'object') return _ret5.v;\n      } else {\n        return Path(_instructions);\n      }\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n\n          var p = point(instruction, prev);\n          prev = p;\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = undefined;\n      if (_instructions[_instructions.length - 1].command !== 'Z') {\n        newInstructions = path.instructions().slice(1);\n        if (!areEqualPoints(last, first)) {\n          newInstructions.unshift({\n            command: \"L\",\n            params: first\n          });\n        }\n      } else {\n        newInstructions = path.instructions();\n      }\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","module.exports = require('./src/PathFinding');\r\n","\r\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nmodule.exports = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}","var matches = require('matches-selector')\r\n\r\nmodule.exports = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode\r\n\r\n  while (parent && parent !== document) {\r\n    if (matches(parent, selector)) return parent;\r\n    parent = parent.parentNode\r\n  }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}