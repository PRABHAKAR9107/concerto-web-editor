{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = require(\"react\");\n\nconst TransformLayerWidget_1 = require(\"../layer/TransformLayerWidget\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nconst SmartLayerWidget_1 = require(\"../layer/SmartLayerWidget\");\n\nvar S;\n\n(function (S) {\n  S.Canvas = styled_1.default.div`\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n})(S || (S = {}));\n\nclass CanvasWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      action: null,\n      diagramEngineListener: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.engine.deregisterListener(this.canvasListener);\n    this.props.engine.setCanvas(null);\n    document.removeEventListener('keyup', this.keyUp);\n    document.removeEventListener('keydown', this.keyDown);\n  }\n\n  registerCanvas() {\n    this.props.engine.setCanvas(this.ref.current);\n    this.props.engine.iterateListeners(list => {\n      list.rendered && list.rendered();\n    });\n  }\n\n  componentDidUpdate() {\n    this.registerCanvas();\n  }\n\n  componentDidMount() {\n    this.canvasListener = this.props.engine.registerListener({\n      repaintCanvas: () => {\n        this.forceUpdate();\n      }\n    });\n\n    this.keyDown = event => {\n      this.props.engine.getActionEventBus().fireAction({\n        event\n      });\n    };\n\n    this.keyUp = event => {\n      this.props.engine.getActionEventBus().fireAction({\n        event\n      });\n    };\n\n    document.addEventListener('keyup', this.keyUp);\n    document.addEventListener('keydown', this.keyDown);\n    this.registerCanvas();\n  }\n\n  render() {\n    const engine = this.props.engine;\n    const model = engine.getModel();\n    return React.createElement(S.Canvas, {\n      className: this.props.className,\n      ref: this.ref,\n      onWheel: event => {\n        this.props.engine.getActionEventBus().fireAction({\n          event\n        });\n      },\n      onMouseDown: event => {\n        this.props.engine.getActionEventBus().fireAction({\n          event\n        });\n      },\n      onMouseUp: event => {\n        this.props.engine.getActionEventBus().fireAction({\n          event\n        });\n      },\n      onMouseMove: event => {\n        this.props.engine.getActionEventBus().fireAction({\n          event\n        });\n      }\n    }, model.getLayers().map(layer => {\n      return React.createElement(TransformLayerWidget_1.TransformLayerWidget, {\n        layer: layer,\n        key: layer.getID()\n      }, React.createElement(SmartLayerWidget_1.SmartLayerWidget, {\n        layer: layer,\n        engine: this.props.engine,\n        key: layer.getID()\n      }));\n    }));\n  }\n\n}\n\nexports.CanvasWidget = CanvasWidget;","map":{"version":3,"sources":["../../../../src/entities/canvas/CanvasWidget.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst TransformLayerWidget_1 = require(\"../layer/TransformLayerWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nconst SmartLayerWidget_1 = require(\"../layer/SmartLayerWidget\");\nvar S;\n(function (S) {\n    S.Canvas = styled_1.default.div `\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n})(S || (S = {}));\nclass CanvasWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            action: null,\n            diagramEngineListener: null\n        };\n    }\n    componentWillUnmount() {\n        this.props.engine.deregisterListener(this.canvasListener);\n        this.props.engine.setCanvas(null);\n        document.removeEventListener('keyup', this.keyUp);\n        document.removeEventListener('keydown', this.keyDown);\n    }\n    registerCanvas() {\n        this.props.engine.setCanvas(this.ref.current);\n        this.props.engine.iterateListeners(list => {\n            list.rendered && list.rendered();\n        });\n    }\n    componentDidUpdate() {\n        this.registerCanvas();\n    }\n    componentDidMount() {\n        this.canvasListener = this.props.engine.registerListener({\n            repaintCanvas: () => {\n                this.forceUpdate();\n            }\n        });\n        this.keyDown = event => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        this.keyUp = event => {\n            this.props.engine.getActionEventBus().fireAction({ event });\n        };\n        document.addEventListener('keyup', this.keyUp);\n        document.addEventListener('keydown', this.keyDown);\n        this.registerCanvas();\n    }\n    render() {\n        const engine = this.props.engine;\n        const model = engine.getModel();\n        return (React.createElement(S.Canvas, { className: this.props.className, ref: this.ref, onWheel: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseDown: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseUp: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            }, onMouseMove: event => {\n                this.props.engine.getActionEventBus().fireAction({ event });\n            } }, model.getLayers().map(layer => {\n            return (React.createElement(TransformLayerWidget_1.TransformLayerWidget, { layer: layer, key: layer.getID() },\n                React.createElement(SmartLayerWidget_1.SmartLayerWidget, { layer: layer, engine: this.props.engine, key: layer.getID() })));\n        })));\n    }\n}\nexports.CanvasWidget = CanvasWidget;\n//# sourceMappingURL=CanvasWidget.js.map"]},"metadata":{},"sourceType":"script"}