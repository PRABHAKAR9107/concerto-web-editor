{"ast":null,"code":"import\"core-js/modules/es.function.name\";import _classCallCheck from\"/home/kanav/proposal_gsoc/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kanav/proposal_gsoc/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/kanav/proposal_gsoc/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/kanav/proposal_gsoc/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/kanav/proposal_gsoc/concerto-web-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./Style.css\";import{DiagramWidget,DiagramEngine,DefaultNodeFactory,DefaultLinkFactory,DefaultNodeModel,DefaultPortModel}from\"storm-react-diagrams\";import\"./graph/srd.css\";require(\"storm-react-diagrams/dist/style.min.css\");var DDArea=/*#__PURE__*/function(_Component){_inherits(DDArea,_Component);function DDArea(props){var _this;_classCallCheck(this,DDArea);_this=_possibleConstructorReturn(this,_getPrototypeOf(DDArea).call(this,props));_this.engine=new DiagramEngine;_this.engine.registerNodeFactory(new DefaultNodeFactory);_this.engine.registerLinkFactory(new DefaultLinkFactory);return _this}_createClass(DDArea,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"diagram-layer\",onDrop:function onDrop(event){var data=JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\")),node=null;//var nodesCount = Lodash.keys(this.engine.getDiagramModel().getNodes()).length; //this is used to get the number of nodes\n//alert(data.name);\nnode=new DefaultNodeModel(data.name,data.color);node.addPort(new DefaultPortModel(!0,\"in-1\",\"In\"));node.addPort(new DefaultPortModel(!1,\"out-1\",\"Out\"));var points=_this2.engine.getRelativeMousePoint(event);node.x=points.x;node.y=points.y;_this2.engine.getDiagramModel().addNode(node);_this2.forceUpdate()},onDoubleClick:function onDoubleClick(){//!------------- SERIALIZING ------------------\nvar str=JSON.stringify(_this2.engine.getDiagramModel().serializeDiagram());console.log(str);//!------------- DESERIALIZING ----------------\n//we need this to help the system know what models to create form the JSON\n//this.engine.registerInstanceFactory(new DefaultNodeInstanceFactory());\n//this.engine.registerInstanceFactory(new DefaultPortInstanceFactory());\n//this.engine.registerInstanceFactory(new LinkInstanceFactory());\n//deserialize the model\n//var model = new DiagramModel();\n//model.deSerializeDiagram(JSON.parse(str), this.engine);\n//this.engine.setDiagramModel(model);\n},onDragOver:function onDragOver(event){event.preventDefault()}},React.createElement(DiagramWidget,{className:\"srd-demo-canvas\",diagramEngine:this.engine}))}}]);return DDArea}(Component);DDArea.displayName=\"DDArea\";export{DDArea as default};DDArea.__docgenInfo={description:\"\",methods:[],displayName:\"DDArea\"};if(\"undefined\"!=typeof STORYBOOK_REACT_CLASSES){STORYBOOK_REACT_CLASSES[\"src/components/DDArea.js\"]={name:\"DDArea\",docgenInfo:DDArea.__docgenInfo,path:\"src/components/DDArea.js\"}}","map":{"version":3,"sources":["/home/kanav/proposal_gsoc/concerto-web-editor/src/components/DDArea.js"],"names":["React","Component","DiagramWidget","DiagramEngine","DefaultNodeFactory","DefaultLinkFactory","DefaultNodeModel","DefaultPortModel","require","DDArea","props","engine","registerNodeFactory","registerLinkFactory","event","data","JSON","parse","dataTransfer","getData","node","name","color","addPort","points","getRelativeMousePoint","x","y","getDiagramModel","addNode","forceUpdate","str","stringify","serializeDiagram","console","log","preventDefault"],"mappings":"22BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,aAAP,CACA,OACCC,aADD,CAECC,aAFD,CAGCC,kBAHD,CAICC,kBAJD,CAKCC,gBALD,CAMIC,gBANJ,KAOO,sBAPP,CAQA,MAAO,iBAAP,CAEAC,OAAO,CAAC,yCAAD,CAAP,C,GACqBC,CAAAA,M,gEACjB,gBAAYC,KAAZ,CAAmB,wCACf,wEAAMA,KAAN,GACN,MAAKC,MAAL,CAAc,GAAIR,CAAAA,aAAlB,CACA,MAAKQ,MAAL,CAAYC,mBAAZ,CAAgC,GAAIR,CAAAA,kBAApC,EACM,MAAKO,MAAL,CAAYE,mBAAZ,CAAgC,GAAIR,CAAAA,kBAApC,EAJe,YAMrB,C,0DACW,iBACL,MACI,4BACP,SAAS,CAAC,eADH,CAEP,MAAM,CAAE,gBAAAS,KAAK,CAAI,IACZC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,oBAA3B,CAAX,CADK,CAGZC,IAAI,CAAG,IAHK,CAEhB;AAEA;AAEAA,IAAI,CAAG,GAAId,CAAAA,gBAAJ,CAAqBS,IAAI,CAACM,IAA1B,CAAgCN,IAAI,CAACO,KAArC,CAAP,CACkBF,IAAI,CAACG,OAAL,CAAa,GAAIhB,CAAAA,gBAAJ,IAA2B,MAA3B,CAAmC,IAAnC,CAAb,EACAa,IAAI,CAACG,OAAL,CAAa,GAAIhB,CAAAA,gBAAJ,IAA4B,OAA5B,CAAqC,KAArC,CAAb,EAElB,GAAIiB,CAAAA,MAAM,CAAG,MAAI,CAACb,MAAL,CAAYc,qBAAZ,CAAkCX,KAAlC,CAAb,CACAM,IAAI,CAACM,CAAL,CAASF,MAAM,CAACE,CAAhB,CACAN,IAAI,CAACO,CAAL,CAASH,MAAM,CAACG,CAAhB,CACA,MAAI,CAAChB,MAAL,CAAYiB,eAAZ,GAA8BC,OAA9B,CAAsCT,IAAtC,EACkB,MAAI,CAACU,WAAL,EAEH,CAlBT,CAmBQ,aAAa,CAAE,wBAAO,CAClB;AACA,GAAMC,CAAAA,GAAG,CAACf,IAAI,CAACgB,SAAL,CAAe,MAAI,CAACrB,MAAL,CAAYiB,eAAZ,GAA8BK,gBAA9B,EAAf,CAAV,CACAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAEA;AACN;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACG,CAlCT,CAoCP,UAAU,CAAE,oBAAAjB,KAAK,CAAI,CACpBA,KAAK,CAACsB,cAAN,EACA,CAtCM,EAwCP,oBAAC,aAAD,EAAe,SAAS,CAAC,iBAAzB,CAA4C,aAAa,CAAE,KAAKzB,MAAhE,EAxCO,CA2CP,C,mBArD+BV,S,EAAfQ,M,6BAAAA,M","sourcesContent":["import React, { Component } from 'react';\nimport \"./Style.css\";\nimport {\n\tDiagramWidget,\n\tDiagramEngine,\n\tDefaultNodeFactory,\n\tDefaultLinkFactory,\n\tDefaultNodeModel,\n    DefaultPortModel\n} from 'storm-react-diagrams';\nimport './graph/srd.css';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\nexport default class DDArea extends Component {\n    constructor(props) {\n        super(props);\n\t\tthis.engine = new DiagramEngine();\n\t\tthis.engine.registerNodeFactory(new DefaultNodeFactory());\n        this.engine.registerLinkFactory(new DefaultLinkFactory());\n        \n\t}\n    render() {\n        return (\n            <div\n\t\t\t\t\tclassName=\"diagram-layer\"\n\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\t\t\t\t\t\t//var nodesCount = Lodash.keys(this.engine.getDiagramModel().getNodes()).length; //this is used to get the number of nodes\n\t\t\t\t\t\tvar node = null;\n\t\t\t\t\t\t//alert(data.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tnode = new DefaultNodeModel(data.name, data.color);\n                        node.addPort(new DefaultPortModel(true, 'in-1', 'In'));\n                        node.addPort(new DefaultPortModel(false, 'out-1', 'Out'));\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar points = this.engine.getRelativeMousePoint(event);\n\t\t\t\t\t\tnode.x = points.x;\n\t\t\t\t\t\tnode.y = points.y;\n\t\t\t\t\t\tthis.engine.getDiagramModel().addNode(node);\n                        this.forceUpdate();\n                        \n                    }}\n                    onDoubleClick={event=>{\n                        //!------------- SERIALIZING ------------------\n                        const str=JSON.stringify(this.engine.getDiagramModel().serializeDiagram())\n                        console.log(str);\n\n                        //!------------- DESERIALIZING ----------------\n\t\t                //we need this to help the system know what models to create form the JSON\n\t\t                //this.engine.registerInstanceFactory(new DefaultNodeInstanceFactory());\n\t\t                //this.engine.registerInstanceFactory(new DefaultPortInstanceFactory());\n\t\t                //this.engine.registerInstanceFactory(new LinkInstanceFactory());\n\n\t\t                //deserialize the model\n\t\t                //var model = new DiagramModel();\n\t\t                //model.deSerializeDiagram(JSON.parse(str), this.engine);\n\t\t                //this.engine.setDiagramModel(model);\n                    }}\n\n\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DiagramWidget className=\"srd-demo-canvas\"  diagramEngine={this.engine} />\n\t\t\t\t</div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}