{"ast":null,"code":"var _jsxFileName = \"/home/kanav/proposal/concerto-web-editor/src/components/graph/Test.js\";\nimport React from 'react';\nimport { DiagramWidget, DiagramEngine, DefaultNodeFactory, DefaultLinkFactory, DefaultNodeModel, DefaultPortModel } from 'storm-react-diagrams';\nimport TrayWidget from './component/TrayWidget';\nimport TrayItemWidget from './component/TrayItemWidget';\nimport Lodash from 'lodash';\nimport './graph/srd.css';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nclass DemoFive extends React.Component {\n  componentWillMount() {\n    this.engine = new DiagramEngine();\n    this.engine.registerNodeFactory(new DefaultNodeFactory());\n    this.engine.registerLinkFactory(new DefaultLinkFactory());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"diagram-layer\",\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node')); //var nodesCount = Lodash.keys(this.engine.getDiagramModel().getNodes()).length; //this is used to get the number of nodes\n\n        var node = null; //alert(data.name);\n\n        if (data.type === 'in') {\n          node = new DefaultNodeModel(data.name, data.color);\n          node.addPort(new DefaultPortModel(true, 'in-1', 'In'));\n        } else {\n          node = new DefaultNodeModel(data.name, data.color);\n          node.addPort(new DefaultPortModel(false, 'out-1', 'Out'));\n        }\n\n        var points = this.engine.getRelativeMousePoint(event);\n        node.x = points.x;\n        node.y = points.y;\n        this.engine.getDiagramModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(DiagramWidget, {\n      className: \"srd-demo-canvas\",\n      diagramEngine: this.engine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DemoFive;","map":{"version":3,"sources":["/home/kanav/proposal/concerto-web-editor/src/components/graph/Test.js"],"names":["React","DiagramWidget","DiagramEngine","DefaultNodeFactory","DefaultLinkFactory","DefaultNodeModel","DefaultPortModel","TrayWidget","TrayItemWidget","Lodash","require","DemoFive","Component","componentWillMount","engine","registerNodeFactory","registerLinkFactory","render","event","data","JSON","parse","dataTransfer","getData","node","type","name","color","addPort","points","getRelativeMousePoint","x","y","getDiagramModel","addNode","forceUpdate","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACCC,aADD,EAECC,aAFD,EAGCC,kBAHD,EAICC,kBAJD,EAKCC,gBALD,EAMCC,gBAND,QAOO,sBAPP;AAQA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,iBAAP;;AAEAC,OAAO,CAAC,yCAAD,CAAP;;AAEA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACtCC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,MAAL,GAAc,IAAIZ,aAAJ,EAAd;AACA,SAAKY,MAAL,CAAYC,mBAAZ,CAAgC,IAAIZ,kBAAJ,EAAhC;AACA,SAAKW,MAAL,CAAYE,mBAAZ,CAAgC,IAAIZ,kBAAJ,EAAhC;AACA;;AACDa,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AACC,MAAA,SAAS,EAAC,eADX;AAEC,MAAA,MAAM,EAAEC,KAAK,IAAI;AAChB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,oBAA3B,CAAX,CAAX,CADgB,CAEhB;;AACA,YAAIC,IAAI,GAAG,IAAX,CAHgB,CAIhB;;AACA,YAAIL,IAAI,CAACM,IAAL,KAAc,IAAlB,EAAyB;AACxBD,UAAAA,IAAI,GAAG,IAAInB,gBAAJ,CAAqBc,IAAI,CAACO,IAA1B,EAAgCP,IAAI,CAACQ,KAArC,CAAP;AACAH,UAAAA,IAAI,CAACI,OAAL,CAAa,IAAItB,gBAAJ,CAAqB,IAArB,EAA2B,MAA3B,EAAmC,IAAnC,CAAb;AACA,SAHD,MAGO;AACNkB,UAAAA,IAAI,GAAG,IAAInB,gBAAJ,CAAqBc,IAAI,CAACO,IAA1B,EAAgCP,IAAI,CAACQ,KAArC,CAAP;AACAH,UAAAA,IAAI,CAACI,OAAL,CAAa,IAAItB,gBAAJ,CAAqB,KAArB,EAA4B,OAA5B,EAAqC,KAArC,CAAb;AACA;;AACD,YAAIuB,MAAM,GAAG,KAAKf,MAAL,CAAYgB,qBAAZ,CAAkCZ,KAAlC,CAAb;AACAM,QAAAA,IAAI,CAACO,CAAL,GAASF,MAAM,CAACE,CAAhB;AACAP,QAAAA,IAAI,CAACQ,CAAL,GAASH,MAAM,CAACG,CAAhB;AACA,aAAKlB,MAAL,CAAYmB,eAAZ,GAA8BC,OAA9B,CAAsCV,IAAtC;AACA,aAAKW,WAAL;AACA,OAnBF;AAoBC,MAAA,UAAU,EAAEjB,KAAK,IAAI;AACpBA,QAAAA,KAAK,CAACkB,cAAN;AACA,OAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAwBC,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAA4C,MAAA,aAAa,EAAE,KAAKtB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBD,CAFD,CADD;AA+BA;;AAtCqC;;AAwCvC,eAAeH,QAAf","sourcesContent":["import React from 'react';\n\nimport {\n\tDiagramWidget,\n\tDiagramEngine,\n\tDefaultNodeFactory,\n\tDefaultLinkFactory,\n\tDefaultNodeModel,\n\tDefaultPortModel\n} from 'storm-react-diagrams';\nimport TrayWidget from './component/TrayWidget';\nimport TrayItemWidget from './component/TrayItemWidget';\nimport Lodash from 'lodash';\nimport './graph/srd.css';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nclass DemoFive extends React.Component {\n\tcomponentWillMount() {\n\t\tthis.engine = new DiagramEngine();\n\t\tthis.engine.registerNodeFactory(new DefaultNodeFactory());\n\t\tthis.engine.registerLinkFactory(new DefaultLinkFactory());\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content\">\n\t\t\t\t\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"diagram-layer\"\n\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\t\t\t\t\t\t//var nodesCount = Lodash.keys(this.engine.getDiagramModel().getNodes()).length; //this is used to get the number of nodes\n\t\t\t\t\t\tvar node = null;\n\t\t\t\t\t\t//alert(data.name);\n\t\t\t\t\t\tif (data.type === 'in' ) {\n\t\t\t\t\t\t\tnode = new DefaultNodeModel(data.name, data.color);\n\t\t\t\t\t\t\tnode.addPort(new DefaultPortModel(true, 'in-1', 'In'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode = new DefaultNodeModel(data.name, data.color);\n\t\t\t\t\t\t\tnode.addPort(new DefaultPortModel(false, 'out-1', 'Out'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar points = this.engine.getRelativeMousePoint(event);\n\t\t\t\t\t\tnode.x = points.x;\n\t\t\t\t\t\tnode.y = points.y;\n\t\t\t\t\t\tthis.engine.getDiagramModel().addNode(node);\n\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t}}\n\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DiagramWidget className=\"srd-demo-canvas\"  diagramEngine={this.engine} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default DemoFive;\n"]},"metadata":{},"sourceType":"module"}