{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js\";\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nimport { JSCustomNodeModel } from '../custom-node-js/JSCustomNodeModel';\nexport class BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\") {\n      console.log(newItem);\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\"\n        }\n      });\n    }\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n        switch (data.name) {\n          case \"Concept\":\n            var ports = [{\n              text: \"String streetAddress\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String postalCode\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"String postOfficeBoxNumber\",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }, {\n              text: \"String Address\",\n              color: \"grey\",\n              isIn: true,\n              key: 4\n            }];\n            break;\n\n          case \"Participant\":\n            var ports = [{\n              text: \"String identifier\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String identifiedByField \",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"TypeIdentifier superType \",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }, {\n              text: \"Decorator[] decorators\",\n              color: \"grey\",\n              isIn: true,\n              key: 4\n            }];\n            break;\n\n          case \"Event\":\n            var ports = [{\n              text: \"String eventId\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"DateTime timeStamp\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n\n          case \"Asset\":\n            var ports = [{\n              text: \"String assetOne\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String assetTwo\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n\n          case \"Enumerable\":\n            var ports = [{\n              text: \"String summerSeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String winterSeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"String rainySeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }];\n            break;\n\n          case \"Transaction\":\n            var ports = [{\n              text: \"String transactionId\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"DateTime timeStamp\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n        }\n\n        var node = new JSCustomNodeModel({\n          name: data.name,\n          color: data.color,\n          ports\n        }); //node.addPort(new AdvancedPortModel(true, 'in'));\n\n        node.addPort(new AdvancedPortModel(false, data.type)); //matlab isse arrow aa raha hai but true ,in set krne se ni aaraha\n\n        var point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        this.props.app.getDiagramEngine().getModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CanvasWidget, {\n      className: \"srd-demo-canvas\",\n      engine: this.props.app.getDiagramEngine(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\nBodyWidget.displayName = \"BodyWidget\";\nBodyWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleInput\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"addItem\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"e\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"deleteItem\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"key\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setUpdate\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"text\",\n      \"type\": null\n    }, {\n      \"name\": \"key\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"BodyWidget\",\n  \"props\": {\n    \"app\": {\n      \"required\": true,\n      \"flowType\": {\n        \"name\": \"Application\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"] = {\n    name: \"BodyWidget\",\n    docgenInfo: BodyWidget.__docgenInfo,\n    path: \"src/components/main_area_component/components/BodyWidget.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["React","_","Application","DefaultNodeModel","CanvasWidget","AdvancedPortModel","JSCustomNodeModel","BodyWidget","Component","constructor","props","state","items","currentItem","text","key","handleInput","bind","addItem","deleteItem","setUpdate","e","setState","target","value","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","item","map","render","event","data","JSON","parse","dataTransfer","getData","name","ports","color","isIn","node","addPort","type","point","app","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Application } from '../Application';\nimport { DefaultNodeModel } from '@projectstorm/react-diagrams';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nimport { JSCustomNodeModel } from '../custom-node-js/JSCustomNodeModel'\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t  items:[],\n\t\t  currentItem:{\n\t\t\ttext:'',\n\t\t\tkey:''\n\t\t  }\n\t\t}\n\t\tthis.handleInput=this.handleInput.bind(this);\n\t\tthis.addItem=this.addItem.bind(this);\n\t\tthis.deleteItem=this.deleteItem.bind(this);\n\t\tthis.setUpdate=this.setUpdate.bind(this);\n\t  }\n\t\n\t  handleInput(e){\n\t\tthis.setState({\n\t\t  currentItem:{\n\t\t\ttext:e.target.value,\n\t\t\tkey:Date.now()\n\t\t  }\n\t\t})\n\t  }\n\t\n\t  addItem(e){\n\t\te.preventDefault();\n\t\tconst newItem=this.state.currentItem;\n\t\t\n\t\tif(newItem.text !==\"\"){\n\t\t  console.log(newItem);\n\t\t  const newItems =[...this.state.items,newItem];\n\t\t  this.setState({\n\t\t\titems:newItems,\n\t\t\tcurrentItem:{\n\t\t\t  text:\"\",\n\t\t\t  key:\"\"\n\t\t\t}\n\t\t  })\n\t\n\t\t}\n\t  }\n\t\n\t  deleteItem(key){\n\t\tconst filteredItems=this.state.items.filter(item => \n\t\t\titem.key!==key );\n\t\tthis.setState({\n\t\t  items:filteredItems\n\t\t})\n\t  }\n\t\n\t  setUpdate(text,key){\n\t\tconst items=this.state.items;\n\t\titems.map(item =>{\n\t\t  if(item.key === key){\n\t\t\titem.text=text;\n\t\t  }\n\t\t})\n\t\tthis.setState({\n\t\t  items:items\n\t\t})\n\t  }\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch(data.name){\n\t\t\t\t\t\t\t\tcase \"Concept\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String streetAddress\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postalCode\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postOfficeBoxNumber\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String Address\", color: \"grey\", isIn: true, key:4 },\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Participant\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String identifier\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String identifiedByField \", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"TypeIdentifier superType \", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"Decorator[] decorators\", color: \"grey\", isIn: true, key:4 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Event\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String eventId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Asset\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String assetOne\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String assetTwo\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Enumerable\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String summerSeason\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String winterSeason\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String rainySeason\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Transaction\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String transactionId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t\tvar node = new JSCustomNodeModel({ name: data.name, color: data.color, ports });\n\t\t\t\t\t\t\t//node.addPort(new AdvancedPortModel(true, 'in'));\n\t\t\t\t\t\t\tnode.addPort(new AdvancedPortModel(false, data.type)); //matlab isse arrow aa raha hai but true ,in set krne se ni aaraha\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}