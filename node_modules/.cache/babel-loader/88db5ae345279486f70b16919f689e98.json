{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\n\nconst _ = require(\"lodash\");\n\nconst PointModel_1 = require(\"../entities/link/PointModel\");\n\nconst PortModel_1 = require(\"../entities/port/PortModel\");\n\nclass DragDiagramItemsState extends react_canvas_core_1.MoveItemsState {\n  constructor() {\n    super();\n    this.registerAction(new react_canvas_core_1.Action({\n      type: react_canvas_core_1.InputType.MOUSE_UP,\n      fire: event => {\n        const item = this.engine.getMouseElement(event.event);\n\n        if (item instanceof PortModel_1.PortModel) {\n          _.forEach(this.initialPositions, position => {\n            if (position.item instanceof PointModel_1.PointModel) {\n              const link = position.item.getParent(); // only care about the last links\n\n              if (link.getLastPoint() !== position.item) {\n                return;\n              }\n\n              if (link.getSourcePort().canLinkToPort(item)) {\n                link.setTargetPort(item);\n                item.reportPosition();\n                this.engine.repaintCanvas();\n              }\n            }\n          });\n        }\n      }\n    }));\n  }\n\n}\n\nexports.DragDiagramItemsState = DragDiagramItemsState;","map":{"version":3,"sources":["../../../src/states/DragDiagramItemsState.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,mBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAIA,MAAa,qBAAb,SAA2C,mBAAA,CAAA,cAA3C,CAAwE;AACvE,EAAA,WAAA,GAAA;AACC;AACA,SAAK,cAAL,CACC,IAAI,mBAAA,CAAA,MAAJ,CAAW;AACV,MAAA,IAAI,EAAE,mBAAA,CAAA,SAAA,CAAU,QADN;AAEV,MAAA,IAAI,EAAG,KAAD,IAAmC;AACxC,cAAM,IAAI,GAAG,KAAK,MAAL,CAAY,eAAZ,CAA4B,KAAK,CAAC,KAAlC,CAAb;;AACA,YAAI,IAAI,YAAY,WAAA,CAAA,SAApB,EAA+B;AAC9B,UAAA,CAAC,CAAC,OAAF,CAAU,KAAK,gBAAf,EAAiC,QAAQ,IAAG;AAC3C,gBAAI,QAAQ,CAAC,IAAT,YAAyB,YAAA,CAAA,UAA7B,EAAyC;AACxC,oBAAM,IAAI,GAAG,QAAQ,CAAC,IAAT,CAAc,SAAd,EAAb,CADwC,CAGxC;;AACA,kBAAI,IAAI,CAAC,YAAL,OAAwB,QAAQ,CAAC,IAArC,EAA2C;AAC1C;AACA;;AACD,kBAAI,IAAI,CAAC,aAAL,GAAqB,aAArB,CAAmC,IAAnC,CAAJ,EAA8C;AAC7C,gBAAA,IAAI,CAAC,aAAL,CAAmB,IAAnB;AACA,gBAAA,IAAI,CAAC,cAAL;AACA,qBAAK,MAAL,CAAY,aAAZ;AACA;AACD;AACD,WAdD;AAeA;AACD;AArBS,KAAX,CADD;AAyBA;;AA5BsE;;AAAxE,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst _ = require(\"lodash\");\nconst PointModel_1 = require(\"../entities/link/PointModel\");\nconst PortModel_1 = require(\"../entities/port/PortModel\");\nclass DragDiagramItemsState extends react_canvas_core_1.MoveItemsState {\n    constructor() {\n        super();\n        this.registerAction(new react_canvas_core_1.Action({\n            type: react_canvas_core_1.InputType.MOUSE_UP,\n            fire: (event) => {\n                const item = this.engine.getMouseElement(event.event);\n                if (item instanceof PortModel_1.PortModel) {\n                    _.forEach(this.initialPositions, position => {\n                        if (position.item instanceof PointModel_1.PointModel) {\n                            const link = position.item.getParent();\n                            // only care about the last links\n                            if (link.getLastPoint() !== position.item) {\n                                return;\n                            }\n                            if (link.getSourcePort().canLinkToPort(item)) {\n                                link.setTargetPort(item);\n                                item.reportPosition();\n                                this.engine.repaintCanvas();\n                            }\n                        }\n                    });\n                }\n            }\n        }));\n    }\n}\nexports.DragDiagramItemsState = DragDiagramItemsState;\n//# sourceMappingURL=DragDiagramItemsState.js.map"]},"metadata":{},"sourceType":"script"}