{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst mathjs = require(\"mathjs\");\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  translate(x, y) {\n    this.x += x;\n    this.y += y;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  toSVG() {\n    return this.x + ' ' + this.y;\n  }\n\n  asMatrix() {\n    return mathjs.matrix([[this.x], [this.y], [1]]);\n  }\n\n  transform(matrix) {\n    let final = mathjs.multiply(matrix, this.asMatrix());\n    this.x = final.get([0, 0]);\n    this.y = final.get([1, 0]);\n  }\n\n  static middlePoint(pointA, pointB) {\n    return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n  }\n\n  static multiply(...matrices) {\n    let m = matrices[0];\n\n    for (let i = 1; i < matrices.length; i++) {\n      m = mathjs.multiply(m, matrices[i]);\n    }\n\n    return m;\n  }\n\n  static scaleMatrix(x, y) {\n    return mathjs.matrix([[x, 0, 0], [0, y, 0], [0, 0, 1]]);\n  }\n\n  static translateMatrix(x, y) {\n    return mathjs.matrix([[1, 0, x], [0, 1, y], [0, 0, 1]]);\n  }\n\n  static rotateMatrix(deg) {\n    return mathjs.matrix([[Math.cos(deg), -1 * Math.sin(deg), 0], [Math.sin(deg), Math.cos(deg), 0], [0, 0, 1]]);\n  }\n\n  static createScaleMatrix(x, y, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n  static createRotateMatrix(deg, origin) {\n    return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n  }\n\n}\n\nexports.Point = Point;","map":{"version":3,"sources":["../../src/Point.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mathjs = require(\"mathjs\");\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    translate(x, y) {\n        this.x += x;\n        this.y += y;\n    }\n    clone() {\n        return new Point(this.x, this.y);\n    }\n    toSVG() {\n        return this.x + ' ' + this.y;\n    }\n    asMatrix() {\n        return mathjs.matrix([[this.x], [this.y], [1]]);\n    }\n    transform(matrix) {\n        let final = mathjs.multiply(matrix, this.asMatrix());\n        this.x = final.get([0, 0]);\n        this.y = final.get([1, 0]);\n    }\n    static middlePoint(pointA, pointB) {\n        return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n    }\n    static multiply(...matrices) {\n        let m = matrices[0];\n        for (let i = 1; i < matrices.length; i++) {\n            m = mathjs.multiply(m, matrices[i]);\n        }\n        return m;\n    }\n    static scaleMatrix(x, y) {\n        return mathjs.matrix([[x, 0, 0], [0, y, 0], [0, 0, 1]]);\n    }\n    static translateMatrix(x, y) {\n        return mathjs.matrix([[1, 0, x], [0, 1, y], [0, 0, 1]]);\n    }\n    static rotateMatrix(deg) {\n        return mathjs.matrix([[Math.cos(deg), -1 * Math.sin(deg), 0], [Math.sin(deg), Math.cos(deg), 0], [0, 0, 1]]);\n    }\n    static createScaleMatrix(x, y, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n    }\n    static createRotateMatrix(deg, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n    }\n}\nexports.Point = Point;\n//# sourceMappingURL=Point.js.map"]},"metadata":{},"sourceType":"script"}