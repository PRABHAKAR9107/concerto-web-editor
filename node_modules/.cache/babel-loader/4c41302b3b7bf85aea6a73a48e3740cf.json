{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = require(\"react\");\n\nconst DefaultLinkModel_1 = require(\"./DefaultLinkModel\");\n\nconst DefaultLinkWidget_1 = require(\"./DefaultLinkWidget\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nconst core_1 = require(\"@emotion/core\");\n\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\n\nvar S;\n\n(function (S) {\n  S.Keyframes = core_1.keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n  const selected = core_1.css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${S.Keyframes} 1s linear infinite;\n\t`;\n  S.Path = styled_1.default.path`\n\t\t${p => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\n\nclass DefaultLinkFactory extends react_canvas_core_1.AbstractReactFactory {\n  constructor(type = 'default') {\n    super(type);\n  }\n\n  generateReactWidget(event) {\n    return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, {\n      link: event.model,\n      diagramEngine: this.engine\n    });\n  }\n\n  generateModel(event) {\n    return new DefaultLinkModel_1.DefaultLinkModel();\n  }\n\n  generateLinkSegment(model, selected, path) {\n    return React.createElement(S.Path, {\n      selected: selected,\n      stroke: selected ? model.getOptions().selectedColor : model.getOptions().color,\n      strokeWidth: model.getOptions().width,\n      d: path\n    });\n  }\n\n}\n\nexports.DefaultLinkFactory = DefaultLinkFactory;","map":{"version":3,"sources":["../../../src/link/DefaultLinkFactory.tsx"],"names":[],"mappings":";;;;;;AAAA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAGA,IAAU,CAAV;;AAAA,CAAA,UAAU,CAAV,EAAW;AACG,EAAA,CAAA,CAAA,SAAA,GAAY,MAAA,CAAA,SAAS;;;;;;;EAArB;AASb,QAAM,QAAQ,GAAG,MAAA,CAAA,GAAG;;eAEN,CAAA,CAAA,SAAS;EAFvB;AAKa,EAAA,CAAA,CAAA,IAAA,GAAO,QAAA,CAAA,OAAA,CAAO,IAA2B;IACnD,CAAC,IAAI,CAAC,CAAC,QAAF,IAAc,QAAQ;;;EADjB;AAKb,CApBD,EAAU,CAAC,KAAD,CAAC,GAAA,EAAA,CAAX;;AAsBA,MAAa,kBAAb,SAA0F,mBAAA,CAAA,oBAA1F,CAGC;AACA,EAAA,WAAA,CAAY,IAAI,GAAG,SAAnB,EAA4B;AAC3B,UAAM,IAAN;AACA;;AAED,EAAA,mBAAmB,CAAC,KAAD,EAAM;AACxB,WAAO,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAA,iBAAD,EAAkB;AAAC,MAAA,IAAI,EAAE,KAAK,CAAC,KAAb;AAAoB,MAAA,aAAa,EAAE,KAAK;AAAxC,KAAlB,CAAP;AACA;;AAED,EAAA,aAAa,CAAC,KAAD,EAAM;AAClB,WAAO,IAAI,kBAAA,CAAA,gBAAJ,EAAP;AACA;;AAED,EAAA,mBAAmB,CAAC,KAAD,EAAc,QAAd,EAAiC,IAAjC,EAA6C;AAC/D,WACC,KAAA,CAAA,aAAA,CAAC,CAAC,CAAC,IAAH,EAAO;AACN,MAAA,QAAQ,EAAE,QADJ;AAEN,MAAA,MAAM,EAAE,QAAQ,GAAG,KAAK,CAAC,UAAN,GAAmB,aAAtB,GAAsC,KAAK,CAAC,UAAN,GAAmB,KAFnE;AAGN,MAAA,WAAW,EAAE,KAAK,CAAC,UAAN,GAAmB,KAH1B;AAIN,MAAA,CAAC,EAAE;AAJG,KAAP,CADD;AAQA;;AAtBD;;AAHD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst DefaultLinkModel_1 = require(\"./DefaultLinkModel\");\nconst DefaultLinkWidget_1 = require(\"./DefaultLinkWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nconst core_1 = require(\"@emotion/core\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nvar S;\n(function (S) {\n    S.Keyframes = core_1.keyframes `\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n    const selected = core_1.css `\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${S.Keyframes} 1s linear infinite;\n\t`;\n    S.Path = styled_1.default.path `\n\t\t${p => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass DefaultLinkFactory extends react_canvas_core_1.AbstractReactFactory {\n    constructor(type = 'default') {\n        super(type);\n    }\n    generateReactWidget(event) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, { link: event.model, diagramEngine: this.engine });\n    }\n    generateModel(event) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n    }\n    generateLinkSegment(model, selected, path) {\n        return (React.createElement(S.Path, { selected: selected, stroke: selected ? model.getOptions().selectedColor : model.getOptions().color, strokeWidth: model.getOptions().width, d: path }));\n    }\n}\nexports.DefaultLinkFactory = DefaultLinkFactory;\n//# sourceMappingURL=DefaultLinkFactory.js.map"]},"metadata":{},"sourceType":"script"}