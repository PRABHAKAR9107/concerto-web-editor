{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst BaseEntity_1 = require(\"./BaseEntity\");\n\nconst CanvasModel_1 = require(\"../entities/canvas/CanvasModel\");\n\nclass BaseModel extends BaseEntity_1.BaseEntity {\n  constructor(options) {\n    super(options);\n  }\n\n  performanceTune() {\n    return true;\n  }\n\n  getParentCanvasModel() {\n    if (!this.parent) {\n      return null;\n    }\n\n    if (this.parent instanceof CanvasModel_1.CanvasModel) {\n      return this.parent;\n    } else if (this.parent instanceof BaseModel) {\n      return this.parent.getParentCanvasModel();\n    }\n\n    return null;\n  }\n\n  getParent() {\n    return this.parent;\n  }\n\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  getSelectionEntities() {\n    return [this];\n  }\n\n  serialize() {\n    return Object.assign({}, super.serialize(), {\n      type: this.options.type,\n      selected: this.options.selected,\n      extras: this.options.extras\n    });\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n    this.options.extras = event.data.extras;\n    this.options.selected = event.data.selected;\n  }\n\n  getType() {\n    return this.options.type;\n  }\n\n  isSelected() {\n    return this.options.selected;\n  }\n\n  isLocked() {\n    const locked = super.isLocked();\n\n    if (locked) {\n      return true;\n    } // delegate this call up to the parent\n\n\n    if (this.parent) {\n      return this.parent.isLocked();\n    }\n\n    return false;\n  }\n\n  setSelected(selected = true) {\n    if (this.options.selected !== selected) {\n      this.options.selected = selected;\n      this.fireEvent({\n        isSelected: selected\n      }, 'selectionChanged');\n    }\n  }\n\n  remove() {\n    this.fireEvent({}, 'entityRemoved');\n  }\n\n}\n\nexports.BaseModel = BaseModel;","map":{"version":3,"sources":["../../../src/core-models/BaseModel.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAQA,MAAA,aAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AAoBA,MAAa,SAAb,SAAgF,YAAA,CAAA,UAAhF,CAA6F;AAG5F,EAAA,WAAA,CAAY,OAAZ,EAAiC;AAChC,UAAM,OAAN;AACA;;AAED,EAAA,eAAe,GAAA;AACd,WAAO,IAAP;AACA;;AAED,EAAA,oBAAoB,GAAA;AACnB,QAAI,CAAC,KAAK,MAAV,EAAkB;AACjB,aAAO,IAAP;AACA;;AACD,QAAI,KAAK,MAAL,YAAuB,aAAA,CAAA,WAA3B,EAAwC;AACvC,aAAO,KAAK,MAAZ;AACA,KAFD,MAEO,IAAI,KAAK,MAAL,YAAuB,SAA3B,EAAsC;AAC5C,aAAO,KAAK,MAAL,CAAY,oBAAZ,EAAP;AACA;;AACD,WAAO,IAAP;AACA;;AAED,EAAA,SAAS,GAAA;AACR,WAAO,KAAK,MAAZ;AACA;;AAED,EAAA,SAAS,CAAC,MAAD,EAAoB;AAC5B,SAAK,MAAL,GAAc,MAAd;AACA;;AAED,EAAA,oBAAoB,GAAA;AACnB,WAAO,CAAC,IAAD,CAAP;AACA;;AAED,EAAA,SAAS,GAAA;AACR,WAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACI,MAAM,SAAN,EADJ,EACqB;AACpB,MAAA,IAAI,EAAE,KAAK,OAAL,CAAa,IADC;AAEpB,MAAA,QAAQ,EAAE,KAAK,OAAL,CAAa,QAFH;AAGpB,MAAA,MAAM,EAAE,KAAK,OAAL,CAAa;AAHD,KADrB,CAAA;AAMA;;AAED,EAAA,WAAW,CAAC,KAAD,EAA8B;AACxC,UAAM,WAAN,CAAkB,KAAlB;AACA,SAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,CAAC,IAAN,CAAW,MAAjC;AACA,SAAK,OAAL,CAAa,QAAb,GAAwB,KAAK,CAAC,IAAN,CAAW,QAAnC;AACA;;AAED,EAAA,OAAO,GAAA;AACN,WAAO,KAAK,OAAL,CAAa,IAApB;AACA;;AAED,EAAA,UAAU,GAAA;AACT,WAAO,KAAK,OAAL,CAAa,QAApB;AACA;;AAED,EAAA,QAAQ,GAAA;AACP,UAAM,MAAM,GAAG,MAAM,QAAN,EAAf;;AACA,QAAI,MAAJ,EAAY;AACX,aAAO,IAAP;AACA,KAJM,CAMP;;;AACA,QAAI,KAAK,MAAT,EAAiB;AAChB,aAAO,KAAK,MAAL,CAAY,QAAZ,EAAP;AACA;;AACD,WAAO,KAAP;AACA;;AAED,EAAA,WAAW,CAAC,QAAA,GAAoB,IAArB,EAAyB;AACnC,QAAI,KAAK,OAAL,CAAa,QAAb,KAA0B,QAA9B,EAAwC;AACvC,WAAK,OAAL,CAAa,QAAb,GAAwB,QAAxB;AAEA,WAAK,SAAL,CACC;AACC,QAAA,UAAU,EAAE;AADb,OADD,EAIC,kBAJD;AAMA;AACD;;AAED,EAAA,MAAM,GAAA;AACL,SAAK,SAAL,CAAe,EAAf,EAAmB,eAAnB;AACA;;AAtF2F;;AAA7F,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseEntity_1 = require(\"./BaseEntity\");\nconst CanvasModel_1 = require(\"../entities/canvas/CanvasModel\");\nclass BaseModel extends BaseEntity_1.BaseEntity {\n    constructor(options) {\n        super(options);\n    }\n    performanceTune() {\n        return true;\n    }\n    getParentCanvasModel() {\n        if (!this.parent) {\n            return null;\n        }\n        if (this.parent instanceof CanvasModel_1.CanvasModel) {\n            return this.parent;\n        }\n        else if (this.parent instanceof BaseModel) {\n            return this.parent.getParentCanvasModel();\n        }\n        return null;\n    }\n    getParent() {\n        return this.parent;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getSelectionEntities() {\n        return [this];\n    }\n    serialize() {\n        return Object.assign({}, super.serialize(), { type: this.options.type, selected: this.options.selected, extras: this.options.extras });\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.extras = event.data.extras;\n        this.options.selected = event.data.selected;\n    }\n    getType() {\n        return this.options.type;\n    }\n    isSelected() {\n        return this.options.selected;\n    }\n    isLocked() {\n        const locked = super.isLocked();\n        if (locked) {\n            return true;\n        }\n        // delegate this call up to the parent\n        if (this.parent) {\n            return this.parent.isLocked();\n        }\n        return false;\n    }\n    setSelected(selected = true) {\n        if (this.options.selected !== selected) {\n            this.options.selected = selected;\n            this.fireEvent({\n                isSelected: selected\n            }, 'selectionChanged');\n        }\n    }\n    remove() {\n        this.fireEvent({}, 'entityRemoved');\n    }\n}\nexports.BaseModel = BaseModel;\n//# sourceMappingURL=BaseModel.js.map"]},"metadata":{},"sourceType":"script"}