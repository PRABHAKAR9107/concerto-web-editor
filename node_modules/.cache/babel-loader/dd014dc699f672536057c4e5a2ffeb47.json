{"ast":null,"code":"var _jsxFileName = \"/home/kanav/proposal/concerto-web-editor/src/components/graph/Test.js\";\nimport React from 'react';\nimport { DiagramWidget, DiagramEngine, DefaultNodeFactory, DefaultLinkFactory, DiagramModel, DefaultNodeModel, DefaultPortModel, LinkModel } from 'storm-react-diagrams';\nimport './srd.css';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nclass DemoOne extends React.Component {\n  componentWillMount() {\n    this.engine = new DiagramEngine();\n    this.engine.registerNodeFactory(new DefaultNodeFactory());\n    this.engine.registerLinkFactory(new DefaultLinkFactory());\n    const model = new DiagramModel();\n    const node1 = new DefaultNodeModel('Node 1', 'rgb(0,192,255)');\n    const port1 = node1.addPort(new DefaultPortModel(false, 'out-1', 'Out'));\n    node1.x = 100;\n    node1.y = 100;\n    const node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\n    const port2 = node2.addPort(new DefaultPortModel(true, 'in-1', 'IN'));\n    node2.x = 400;\n    node2.y = 100;\n    const link1 = new LinkModel();\n    link1.setSourcePort(port1);\n    link1.setTargetPort(port2);\n    model.addNode(node1);\n    model.addNode(node2);\n    model.addLink(link1);\n    this.engine.setDiagramModel(model);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(DiagramWidget, {\n      className: \"srd-demo-canvas\",\n      diagramEngine: this.engine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DemoOne;","map":{"version":3,"sources":["/home/kanav/proposal/concerto-web-editor/src/components/graph/Test.js"],"names":["React","DiagramWidget","DiagramEngine","DefaultNodeFactory","DefaultLinkFactory","DiagramModel","DefaultNodeModel","DefaultPortModel","LinkModel","require","DemoOne","Component","componentWillMount","engine","registerNodeFactory","registerLinkFactory","model","node1","port1","addPort","x","y","node2","port2","link1","setSourcePort","setTargetPort","addNode","addLink","setDiagramModel","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,aADD,EAECC,aAFD,EAGCC,kBAHD,EAICC,kBAJD,EAKCC,YALD,EAMCC,gBAND,EAOCC,gBAPD,EAQCC,SARD,QASO,sBATP;AAWA,OAAO,WAAP;;AAEAC,OAAO,CAAC,yCAAD,CAAP;;AAEA,MAAMC,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAAsC;AACrCC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,MAAL,GAAc,IAAIX,aAAJ,EAAd;AAEA,SAAKW,MAAL,CAAYC,mBAAZ,CAAgC,IAAIX,kBAAJ,EAAhC;AACA,SAAKU,MAAL,CAAYE,mBAAZ,CAAgC,IAAIX,kBAAJ,EAAhC;AAEA,UAAMY,KAAK,GAAG,IAAIX,YAAJ,EAAd;AAEA,UAAMY,KAAK,GAAG,IAAIX,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,CAAd;AACA,UAAMY,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAc,IAAIZ,gBAAJ,CAAqB,KAArB,EAA4B,OAA5B,EAAqC,KAArC,CAAd,CAAd;AACAU,IAAAA,KAAK,CAACG,CAAN,GAAU,GAAV;AACAH,IAAAA,KAAK,CAACI,CAAN,GAAU,GAAV;AAEA,UAAMC,KAAK,GAAG,IAAIhB,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,CAAd;AACA,UAAMiB,KAAK,GAAGD,KAAK,CAACH,OAAN,CAAc,IAAIZ,gBAAJ,CAAqB,IAArB,EAA2B,MAA3B,EAAmC,IAAnC,CAAd,CAAd;AACAe,IAAAA,KAAK,CAACF,CAAN,GAAU,GAAV;AACAE,IAAAA,KAAK,CAACD,CAAN,GAAU,GAAV;AAEA,UAAMG,KAAK,GAAG,IAAIhB,SAAJ,EAAd;AACAgB,IAAAA,KAAK,CAACC,aAAN,CAAoBP,KAApB;AACAM,IAAAA,KAAK,CAACE,aAAN,CAAoBH,KAApB;AAEAP,IAAAA,KAAK,CAACW,OAAN,CAAcV,KAAd;AACAD,IAAAA,KAAK,CAACW,OAAN,CAAcL,KAAd;AACAN,IAAAA,KAAK,CAACY,OAAN,CAAcJ,KAAd;AAEA,SAAKX,MAAL,CAAYgB,eAAZ,CAA4Bb,KAA5B;AACA;;AACDc,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAA2C,MAAA,aAAa,EAAE,KAAKjB,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AAnCoC;;AAsCtC,eAAeH,OAAf","sourcesContent":["import React from 'react';\nimport {\n\tDiagramWidget,\n\tDiagramEngine,\n\tDefaultNodeFactory,\n\tDefaultLinkFactory,\n\tDiagramModel,\n\tDefaultNodeModel,\n\tDefaultPortModel,\n\tLinkModel\n} from 'storm-react-diagrams';\n\nimport './srd.css';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nclass DemoOne extends React.Component {\n\tcomponentWillMount() {\n\t\tthis.engine = new DiagramEngine();\n\n\t\tthis.engine.registerNodeFactory(new DefaultNodeFactory());\n\t\tthis.engine.registerLinkFactory(new DefaultLinkFactory());\n\n\t\tconst model = new DiagramModel();\n\n\t\tconst node1 = new DefaultNodeModel('Node 1', 'rgb(0,192,255)');\n\t\tconst port1 = node1.addPort(new DefaultPortModel(false, 'out-1', 'Out'));\n\t\tnode1.x = 100;\n\t\tnode1.y = 100;\n\n\t\tconst node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\n\t\tconst port2 = node2.addPort(new DefaultPortModel(true, 'in-1', 'IN'));\n\t\tnode2.x = 400;\n\t\tnode2.y = 100;\n\n\t\tconst link1 = new LinkModel();\n\t\tlink1.setSourcePort(port1);\n\t\tlink1.setTargetPort(port2);\n\n\t\tmodel.addNode(node1);\n\t\tmodel.addNode(node2);\n\t\tmodel.addLink(link1);\n\n\t\tthis.engine.setDiagramModel(model);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<DiagramWidget className=\"srd-demo-canvas\" diagramEngine={this.engine} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DemoOne;\n"]},"metadata":{},"sourceType":"module"}