{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = require(\"react\");\n\nconst _ = require(\"lodash\");\n\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\n\nconst styled_1 = require(\"@emotion/styled\");\n\nconst resize_observer_polyfill_1 = require(\"resize-observer-polyfill\");\n\nvar S;\n\n(function (S) {\n  S.Node = styled_1.default.div`\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentWillUnmount() {\n    this.ob.disconnect();\n    this.ob = null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.listener && this.props.node !== prevProps.node) {\n      this.listener.deregister();\n      this.installSelectionListener();\n    }\n  }\n\n  installSelectionListener() {\n    this.listener = this.props.node.registerListener({\n      selectionChanged: event => {\n        this.forceUpdate();\n      }\n    });\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    this.ob = new resize_observer_polyfill_1.default(entities => {\n      const bounds = entities[0].contentRect;\n      this.props.node.updateDimensions({\n        width: bounds.width,\n        height: bounds.height\n      }); //now mark the links as dirty\n\n      _.forEach(this.props.node.getPorts(), port => {\n        port.updateCoords(this.props.diagramEngine.getPortCoords(port));\n      });\n    });\n    this.ob.observe(this.ref.current);\n    this.installSelectionListener();\n  }\n\n  render() {\n    return React.createElement(react_canvas_core_1.PeformanceWidget, {\n      model: this.props.node,\n      serialized: this.props.node.serialize()\n    }, () => {\n      return React.createElement(S.Node, {\n        className: \"node\",\n        ref: this.ref,\n        \"data-nodeid\": this.props.node.getID(),\n        style: {\n          top: this.props.node.getY(),\n          left: this.props.node.getX()\n        }\n      }, this.props.diagramEngine.generateWidgetForNode(this.props.node));\n    });\n  }\n\n}\n\nexports.NodeWidget = NodeWidget;","map":{"version":3,"sources":["../../../../src/entities/node/NodeWidget.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst styled_1 = require(\"@emotion/styled\");\nconst resize_observer_polyfill_1 = require(\"resize-observer-polyfill\");\nvar S;\n(function (S) {\n    S.Node = styled_1.default.div `\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass NodeWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n    componentWillUnmount() {\n        this.ob.disconnect();\n        this.ob = null;\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.listener && this.props.node !== prevProps.node) {\n            this.listener.deregister();\n            this.installSelectionListener();\n        }\n    }\n    installSelectionListener() {\n        this.listener = this.props.node.registerListener({\n            selectionChanged: (event) => {\n                this.forceUpdate();\n            }\n        });\n    }\n    componentDidMount() {\n        // @ts-ignore\n        this.ob = new resize_observer_polyfill_1.default(entities => {\n            const bounds = entities[0].contentRect;\n            this.props.node.updateDimensions({ width: bounds.width, height: bounds.height });\n            //now mark the links as dirty\n            _.forEach(this.props.node.getPorts(), port => {\n                port.updateCoords(this.props.diagramEngine.getPortCoords(port));\n            });\n        });\n        this.ob.observe(this.ref.current);\n        this.installSelectionListener();\n    }\n    render() {\n        return (React.createElement(react_canvas_core_1.PeformanceWidget, { model: this.props.node, serialized: this.props.node.serialize() }, () => {\n            return (React.createElement(S.Node, { className: \"node\", ref: this.ref, \"data-nodeid\": this.props.node.getID(), style: {\n                    top: this.props.node.getY(),\n                    left: this.props.node.getX()\n                } }, this.props.diagramEngine.generateWidgetForNode(this.props.node)));\n        }));\n    }\n}\nexports.NodeWidget = NodeWidget;\n//# sourceMappingURL=NodeWidget.js.map"]},"metadata":{},"sourceType":"script"}