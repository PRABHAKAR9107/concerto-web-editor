{"ast":null,"code":"var _jsxFileName = \"/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\";\nimport * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\nimport './style.css';\n/* portzo.color is port color <PortWidget engine={engine} port={node.getPort('in')}>\n\t\t\t\t\t\t<div style={{background:'rgb(128, 128, 128)' }}  className=\"circle-port\" /> \n\t\t\t</PortWidget> */\n\nconst JSCustomNodeWidget = ({\n  engine,\n  node\n}) => {\n  const renderList = _ => {\n    return node.portz.map(portzo => {\n      return React.createElement(\"div\", {\n        className: \"port-row\",\n        key: portzo.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, portzo.text));\n    });\n  };\n\n  const head_color = () => {\n    switch (node.name) {\n      case \"Concept\":\n        return {\n          background: \"rgb(34, 92, 178)\"\n        };\n\n      case \"Asset\":\n        return {\n          backgroundColor: \"rgb(178, 43, 34)\"\n        };\n\n      case \"Event\":\n        return {\n          backgroundColor: \"rgb(93, 46, 113)\"\n        };\n\n      case \"Participant\":\n        return {\n          background: \"rgb(178, 135, 4)\"\n        };\n\n      case \"Enumerable\":\n        return {\n          backgroundColor: \"rgb(178, 29, 86)\"\n        };\n\n      case \"Transaction\":\n        return {\n          background: \"rgb(28, 127, 51)\"\n        };\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"custom-node\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"node-header\",\n    style: head_color(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(PortWidget, {\n    engine: engine,\n    port: node.getPort('in'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, node.name)), React.createElement(\"div\", {\n    className: \"node-ports\",\n    style: {\n      backgroundColor: node.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, renderList()));\n};\n\nJSCustomNodeWidget.displayName = \"JSCustomNodeWidget\";\nJSCustomNodeWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"JSCustomNodeWidget\"\n};\nexport default JSCustomNodeWidget;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\"] = {\n    name: \"JSCustomNodeWidget\",\n    docgenInfo: JSCustomNodeWidget.__docgenInfo,\n    path: \"src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/custom-node-js/JSCustomNodeWidget.jsx"],"names":["React","PortWidget","JSCustomNodeWidget","engine","node","renderList","_","portz","map","portzo","key","text","head_color","name","background","backgroundColor","getPort","color"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,OAAO,aAAP;AAEA;;;;AAGA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AAChD,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACvB,WAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,MAAM,IAAI;AAC/B,aACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEA,MAAM,CAACC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACE,IAAX,CADD,CADD;AAKA,KANM,CAAP;AAOA,GARD;;AAUA,QAAMC,UAAU,GAAC,MAAI;AACpB,YAAOR,IAAI,CAACS,IAAZ;AACC,WAAK,SAAL;AACC,eAAO;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAP;;AAED,WAAK,OAAL;AACC,eAAO;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAP;;AAED,WAAK,OAAL;AACC,eAAO;AAAEA,UAAAA,eAAe,EAAE;AAAnB,SAAP;;AAED,WAAK,aAAL;AACC,eAAO;AAAED,UAAAA,UAAU,EAAE;AAAd,SAAP;;AAED,WAAK,YAAL;AACC,eAAO;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAP;;AAED,WAAK,aAAL;AACC,eAAO;AAAED,UAAAA,UAAU,EAAC;AAAb,SAAP;AAjBF;AAmBD,GApBA;;AAsBA,SACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAGF,UAAU,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAET,MAApB;AAA4B,IAAA,IAAI,EAAEC,IAAI,CAACY,OAAL,CAAa,IAAb,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,IAAI,CAACS,IADT,CADD,CAFD,EAQC;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAACE,MAAAA,eAAe,EAACX,IAAI,CAACa;AAAtB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,UAAU,EADZ,CARD,CADD;AAeA,CAhDD;;AAAMH,kB;;;;;;AAkDN,eAAeA,kBAAf","sourcesContent":["import * as React from 'react';\nimport { PortWidget } from '@projectstorm/react-diagrams';\n\nimport './style.css';\n\n/* portzo.color is port color <PortWidget engine={engine} port={node.getPort('in')}>\n\t\t\t\t\t\t<div style={{background:'rgb(128, 128, 128)' }}  className=\"circle-port\" /> \n\t\t\t</PortWidget> */\nconst JSCustomNodeWidget = ({ engine, node }) => {\n\tconst renderList = _ => {\n\t\treturn node.portz.map(portzo => {\n\t\t\treturn (\n\t\t\t\t<div className=\"port-row\" key={portzo.key}>\n\t\t\t\t\t<p>{portzo.text}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t}\n\n\tconst head_color=()=>{\n\t\tswitch(node.name){\n\t\t\tcase \"Concept\":\n\t\t\t\treturn { background: \"rgb(34, 92, 178)\" }\n\n\t\t\tcase \"Asset\":\n\t\t\t\treturn { backgroundColor: \"rgb(178, 43, 34)\" }\n\n\t\t\tcase \"Event\":\n\t\t\t\treturn { backgroundColor: \"rgb(93, 46, 113)\" }\n\n\t\t\tcase \"Participant\":\n\t\t\t\treturn { background: \"rgb(178, 135, 4)\" }\n\n\t\t\tcase \"Enumerable\":\n\t\t\t\treturn {backgroundColor: \"rgb(178, 29, 86)\" }\n\n\t\t\tcase \"Transaction\":\n\t\t\t\treturn { background:\"rgb(28, 127, 51)\" }\n\t}\n}\t\n\n\treturn (\n\t\t<div className=\"custom-node\" >\n\t\t\t\n\t\t\t<div className=\"node-header\" style={ head_color() }>\n\t\t\t\t<PortWidget engine={engine} port={node.getPort('in')}>\n\t\t\t\t\t\t{ node.name }\n\t\t\t\t</PortWidget>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"node-ports\" style={{backgroundColor:node.color}}>\n\t\t\t\t{renderList()}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default JSCustomNodeWidget"]},"metadata":{},"sourceType":"module"}