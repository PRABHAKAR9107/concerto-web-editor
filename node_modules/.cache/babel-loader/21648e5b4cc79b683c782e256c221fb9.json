{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Point_1 = require(\"./Point\");\n\nconst Polygon_1 = require(\"./Polygon\");\n\nclass Rectangle extends Polygon_1.Polygon {\n  constructor(a = 0, b = 0, c = 0, d = 0) {\n    if (a instanceof Point_1.Point && b instanceof Point_1.Point && c instanceof Point_1.Point && d instanceof Point_1.Point) {\n      super([a, b, c, d]);\n    } else if (a instanceof Point_1.Point) {\n      super([a, new Point_1.Point(a.x + b, a.y), new Point_1.Point(a.x + b, a.y + c), new Point_1.Point(a.x, a.y + c)]);\n    } else {\n      super(Rectangle.pointsFromBounds(a, b, c, d));\n    }\n  }\n\n  static pointsFromBounds(x, y, width, height) {\n    return [new Point_1.Point(x, y), new Point_1.Point(x + width, y), new Point_1.Point(x + width, y + height), new Point_1.Point(x, y + height)];\n  }\n\n  updateDimensions(x, y, width, height) {\n    this.points = Rectangle.pointsFromBounds(x, y, width, height);\n  }\n\n  setPoints(points) {\n    if (points.length !== 4) {\n      throw 'Rectangles must always have 4 points';\n    }\n\n    super.setPoints(points);\n  }\n\n  containsPoint(point) {\n    const tl = this.getTopLeft();\n    const br = this.getBottomRight();\n    return point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n  }\n\n  getWidth() {\n    return Math.sqrt(Math.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2));\n  }\n\n  getHeight() {\n    return Math.sqrt(Math.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) + Math.pow(this.getBottomLeft().y - this.getTopLeft().y, 2));\n  }\n\n  getTopMiddle() {\n    return Point_1.Point.middlePoint(this.getTopLeft(), this.getTopRight());\n  }\n\n  getBottomMiddle() {\n    return Point_1.Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n  }\n\n  getLeftMiddle() {\n    return Point_1.Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n  }\n\n  getRightMiddle() {\n    return Point_1.Point.middlePoint(this.getBottomRight(), this.getTopRight());\n  }\n\n  getTopLeft() {\n    return this.points[0];\n  }\n\n  getTopRight() {\n    return this.points[1];\n  }\n\n  getBottomRight() {\n    return this.points[2];\n  }\n\n  getBottomLeft() {\n    return this.points[3];\n  }\n\n}\n\nexports.Rectangle = Rectangle;","map":{"version":3,"sources":["../../src/Rectangle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nclass Rectangle extends Polygon_1.Polygon {\n    constructor(a = 0, b = 0, c = 0, d = 0) {\n        if (a instanceof Point_1.Point && b instanceof Point_1.Point && c instanceof Point_1.Point && d instanceof Point_1.Point) {\n            super([a, b, c, d]);\n        }\n        else if (a instanceof Point_1.Point) {\n            super([a, new Point_1.Point(a.x + b, a.y), new Point_1.Point(a.x + b, a.y + c), new Point_1.Point(a.x, a.y + c)]);\n        }\n        else {\n            super(Rectangle.pointsFromBounds(a, b, c, d));\n        }\n    }\n    static pointsFromBounds(x, y, width, height) {\n        return [new Point_1.Point(x, y), new Point_1.Point(x + width, y), new Point_1.Point(x + width, y + height), new Point_1.Point(x, y + height)];\n    }\n    updateDimensions(x, y, width, height) {\n        this.points = Rectangle.pointsFromBounds(x, y, width, height);\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw 'Rectangles must always have 4 points';\n        }\n        super.setPoints(points);\n    }\n    containsPoint(point) {\n        const tl = this.getTopLeft();\n        const br = this.getBottomRight();\n        return point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n    }\n    getWidth() {\n        return Math.sqrt(Math.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2));\n    }\n    getHeight() {\n        return Math.sqrt(Math.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n            Math.pow(this.getBottomLeft().y - this.getTopLeft().y, 2));\n    }\n    getTopMiddle() {\n        return Point_1.Point.middlePoint(this.getTopLeft(), this.getTopRight());\n    }\n    getBottomMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n    }\n    getLeftMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n    }\n    getRightMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomRight(), this.getTopRight());\n    }\n    getTopLeft() {\n        return this.points[0];\n    }\n    getTopRight() {\n        return this.points[1];\n    }\n    getBottomRight() {\n        return this.points[2];\n    }\n    getBottomLeft() {\n        return this.points[3];\n    }\n}\nexports.Rectangle = Rectangle;\n//# sourceMappingURL=Rectangle.js.map"]},"metadata":{},"sourceType":"script"}