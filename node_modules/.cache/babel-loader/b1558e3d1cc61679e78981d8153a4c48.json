{"ast":null,"code":"var _jsxFileName = \"/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js\";\nimport * as React from 'react';\nimport { Application } from '../Application';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nimport { JSCustomNodeModel } from '../custom-node-js/JSCustomNodeModel'; //import { DefaultPortModel } from '@projectstorm/react-diagrams';\n\nexport class BodyWidget extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      onDrop: event => {\n        var data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n        switch (data.name) {\n          case \"Concept\":\n            var ports = [{\n              text: \"String streetAddress\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String postalCode\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"String postOfficeBoxNumber\",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }, {\n              text: \"String Address\",\n              color: \"grey\",\n              isIn: true,\n              key: 4\n            }];\n            break;\n\n          case \"Participant\":\n            var ports = [{\n              text: \"String identifier\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String identifiedByField \",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"TypeIdentifier superType \",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }, {\n              text: \"Decorator[] decorators\",\n              color: \"grey\",\n              isIn: true,\n              key: 4\n            }];\n            break;\n\n          case \"Event\":\n            var ports = [{\n              text: \"String eventId\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"DateTime timeStamp\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n\n          case \"Asset\":\n            var ports = [{\n              text: \"String assetOne\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String assetTwo\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n\n          case \"Enumerable\":\n            var ports = [{\n              text: \"String summerSeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"String winterSeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }, {\n              text: \"String rainySeason\",\n              color: \"grey\",\n              isIn: true,\n              key: 3\n            }];\n            break;\n\n          case \"Transaction\":\n            var ports = [{\n              text: \"String transactionId\",\n              color: \"grey\",\n              isIn: true,\n              key: 1\n            }, {\n              text: \"DateTime timeStamp\",\n              color: \"grey\",\n              isIn: true,\n              key: 2\n            }];\n            break;\n\n          default:\n            break;\n        }\n\n        var node = new JSCustomNodeModel({\n          name: data.name,\n          color: data.color,\n          ports\n        });\n        node.addPort(new AdvancedPortModel(false, data.type));\n        var point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n        node.setPosition(point);\n        this.props.app.getDiagramEngine().getModel().addNode(node);\n        this.forceUpdate();\n      },\n      onDragOver: event => {\n        event.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(CanvasWidget, {\n      className: \"srd-demo-canvas\",\n      engine: this.props.app.getDiagramEngine(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\nBodyWidget.displayName = \"BodyWidget\";\nBodyWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"BodyWidget\",\n  \"props\": {\n    \"app\": {\n      \"required\": true,\n      \"flowType\": {\n        \"name\": \"Application\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/main_area_component/components/BodyWidget.js\"] = {\n    name: \"BodyWidget\",\n    docgenInfo: BodyWidget.__docgenInfo,\n    path: \"src/components/main_area_component/components/BodyWidget.js\"\n  };\n}","map":{"version":3,"sources":["/home/kanav/GSOC/concerto-web-editor/src/components/main_area_component/components/BodyWidget.js"],"names":["React","Application","CanvasWidget","AdvancedPortModel","JSCustomNodeModel","BodyWidget","Component","render","event","data","JSON","parse","dataTransfer","getData","name","ports","text","color","isIn","key","node","addPort","type","point","props","app","getDiagramEngine","getRelativeMousePoint","setPosition","getModel","addNode","forceUpdate","preventDefault"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Application } from '../Application';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport './style.css';\nimport { AdvancedPortModel } from '../custom-link/Arrow';\nimport { JSCustomNodeModel } from '../custom-node-js/JSCustomNodeModel'\n//import { DefaultPortModel } from '@projectstorm/react-diagrams';\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport class BodyWidget extends React.Component<BodyWidgetProps> {\n\t\n\trender() {\n\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData('storm-diagram-node'));\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch(data.name){\n\t\t\t\t\t\t\t\tcase \"Concept\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String streetAddress\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postalCode\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String postOfficeBoxNumber\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String Address\", color: \"grey\", isIn: true, key:4 }, \n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Participant\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String identifier\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String identifiedByField \", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"TypeIdentifier superType \", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t\t { text: \"Decorator[] decorators\", color: \"grey\", isIn: true, key:4 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Event\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String eventId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Asset\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String assetOne\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String assetTwo\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Enumerable\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String summerSeason\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String winterSeason\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t\t { text: \"String rainySeason\", color: \"grey\", isIn: true, key:3 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tcase \"Transaction\":\n\t\t\t\t\t\t\t\t\tvar ports = [                                                \n\t\t\t\t\t\t\t\t\t\t{ text: \"String transactionId\", color: \"grey\", isIn: true, key:1 },\n\t\t\t\t\t\t\t\t\t\t { text: \"DateTime timeStamp\", color: \"grey\", isIn: true, key:2 },\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t\tvar node = new JSCustomNodeModel({ name: data.name, color: data.color, ports });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tnode.addPort(new AdvancedPortModel(false, data.type)); \n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar point = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.setPosition(point);\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CanvasWidget className=\"srd-demo-canvas\" engine={this.props.app.getDiagramEngine()} />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}